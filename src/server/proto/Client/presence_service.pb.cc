// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presence_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "presence_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace presence {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchSubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchSubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribeResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchSubscribeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchSubscribeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchUnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchUnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* PresenceService_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_presence_5fservice_2eproto() {
  protobuf_AddDesc_presence_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "presence_service.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeRequest_descriptor_ = file->message_type(0);
  static const int SubscribeRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, object_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, key_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  UnsubscribeRequest_descriptor_ = file->message_type(1);
  static const int UnsubscribeRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, object_id_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  UpdateRequest_descriptor_ = file->message_type(2);
  static const int UpdateRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, field_operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, no_create_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, agent_id_),
  };
  UpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRequest_descriptor_,
      UpdateRequest::default_instance_,
      UpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRequest));
  QueryRequest_descriptor_ = file->message_type(3);
  static const int QueryRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, agent_id_),
  };
  QueryRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryRequest_descriptor_,
      QueryRequest::default_instance_,
      QueryRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryRequest));
  QueryResponse_descriptor_ = file->message_type(4);
  static const int QueryResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResponse, field_),
  };
  QueryResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryResponse_descriptor_,
      QueryResponse::default_instance_,
      QueryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryResponse));
  BatchSubscribeRequest_descriptor_ = file->message_type(5);
  static const int BatchSubscribeRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, object_id_),
  };
  BatchSubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchSubscribeRequest_descriptor_,
      BatchSubscribeRequest::default_instance_,
      BatchSubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchSubscribeRequest));
  SubscribeResult_descriptor_ = file->message_type(6);
  static const int SubscribeResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResult, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResult, result_),
  };
  SubscribeResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeResult_descriptor_,
      SubscribeResult::default_instance_,
      SubscribeResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeResult));
  BatchSubscribeResponse_descriptor_ = file->message_type(7);
  static const int BatchSubscribeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeResponse, subscribe_failed_),
  };
  BatchSubscribeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchSubscribeResponse_descriptor_,
      BatchSubscribeResponse::default_instance_,
      BatchSubscribeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSubscribeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchSubscribeResponse));
  BatchUnsubscribeRequest_descriptor_ = file->message_type(8);
  static const int BatchUnsubscribeRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchUnsubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchUnsubscribeRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchUnsubscribeRequest, object_id_),
  };
  BatchUnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchUnsubscribeRequest_descriptor_,
      BatchUnsubscribeRequest::default_instance_,
      BatchUnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchUnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchUnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchUnsubscribeRequest));
  PresenceService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_presence_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRequest_descriptor_, &UpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryRequest_descriptor_, &QueryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryResponse_descriptor_, &QueryResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchSubscribeRequest_descriptor_, &BatchSubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeResult_descriptor_, &SubscribeResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchSubscribeResponse_descriptor_, &BatchSubscribeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchUnsubscribeRequest_descriptor_, &BatchUnsubscribeRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_presence_5fservice_2eproto() {
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete UpdateRequest::default_instance_;
  delete UpdateRequest_reflection_;
  delete QueryRequest::default_instance_;
  delete QueryRequest_reflection_;
  delete QueryResponse::default_instance_;
  delete QueryResponse_reflection_;
  delete BatchSubscribeRequest::default_instance_;
  delete BatchSubscribeRequest_reflection_;
  delete SubscribeResult::default_instance_;
  delete SubscribeResult_reflection_;
  delete BatchSubscribeResponse::default_instance_;
  delete BatchSubscribeResponse_reflection_;
  delete BatchUnsubscribeRequest::default_instance_;
  delete BatchUnsubscribeRequest_reflection_;
}

void protobuf_AddDesc_presence_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::presence::v1::protobuf_AddDesc_presence_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026presence_service.proto\022\030bgs.protocol.p"
    "resence.v1\032\022entity_types.proto\032\024presence"
    "_types.proto\032\017rpc_types.proto\"\341\001\n\020Subscr"
    "ibeRequest\0220\n\010agent_id\030\001 \001(\0132\026.bgs.proto"
    "col.EntityIdB\006\202\371+\002 \001\022)\n\tentity_id\030\002 \002(\0132"
    "\026.bgs.protocol.EntityId\022\021\n\tobject_id\030\003 \002"
    "(\004\022\035\n\007program\030\004 \003(\007B\014\212\371+\010*\006\n\004\010\000\020d\022>\n\003key"
    "\030\006 \003(\0132\".bgs.protocol.presence.v1.FieldK"
    "eyB\r\212\371+\t*\007\n\005\010\000\020\364\003\"\204\001\n\022UnsubscribeRequest"
    "\0220\n\010agent_id\030\001 \001(\0132\026.bgs.protocol.Entity"
    "IdB\006\202\371+\002 \001\022)\n\tentity_id\030\002 \002(\0132\026.bgs.prot"
    "ocol.EntityId\022\021\n\tobject_id\030\003 \001(\004\"\302\001\n\rUpd"
    "ateRequest\022)\n\tentity_id\030\001 \002(\0132\026.bgs.prot"
    "ocol.EntityId\022A\n\017field_operation\030\002 \003(\0132("
    ".bgs.protocol.presence.v1.FieldOperation"
    "\022\021\n\tno_create\030\003 \001(\010\0220\n\010agent_id\030\004 \001(\0132\026."
    "bgs.protocol.EntityIdB\006\202\371+\002 \001\"\252\001\n\014QueryR"
    "equest\022)\n\tentity_id\030\001 \002(\0132\026.bgs.protocol"
    ".EntityId\022=\n\003key\030\002 \003(\0132\".bgs.protocol.pr"
    "esence.v1.FieldKeyB\014\212\371+\010*\006\n\004\010\000\020d\0220\n\010agen"
    "t_id\030\003 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002"
    " \001\"\?\n\rQueryResponse\022.\n\005field\030\002 \003(\0132\037.bgs"
    ".protocol.presence.v1.Field\"\365\001\n\025BatchSub"
    "scribeRequest\0220\n\010agent_id\030\001 \001(\0132\026.bgs.pr"
    "otocol.EntityIdB\006\202\371+\002 \001\0228\n\tentity_id\030\002 \003"
    "(\0132\026.bgs.protocol.EntityIdB\r\212\371+\t*\007\n\005\010\001\020\372"
    "\001\022\035\n\007program\030\003 \003(\007B\014\212\371+\010*\006\n\004\010\000\020d\022>\n\003key\030"
    "\004 \003(\0132\".bgs.protocol.presence.v1.FieldKe"
    "yB\r\212\371+\t*\007\n\005\010\000\020\364\003\022\021\n\tobject_id\030\005 \001(\004\"L\n\017S"
    "ubscribeResult\022)\n\tentity_id\030\001 \001(\0132\026.bgs."
    "protocol.EntityId\022\016\n\006result\030\002 \001(\r\"]\n\026Bat"
    "chSubscribeResponse\022C\n\020subscribe_failed\030"
    "\001 \003(\0132).bgs.protocol.presence.v1.Subscri"
    "beResult\"\230\001\n\027BatchUnsubscribeRequest\0220\n\010"
    "agent_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006"
    "\202\371+\002 \001\0228\n\tentity_id\030\002 \003(\0132\026.bgs.protocol"
    ".EntityIdB\r\212\371+\t*\007\n\005\010\001\020\372\001\022\021\n\tobject_id\030\003 "
    "\001(\0042\257\005\n\017PresenceService\022W\n\tSubscribe\022*.b"
    "gs.protocol.presence.v1.SubscribeRequest"
    "\032\024.bgs.protocol.NoData\"\010\202\371+\004\010\001\020\003\022[\n\013Unsu"
    "bscribe\022,.bgs.protocol.presence.v1.Unsub"
    "scribeRequest\032\024.bgs.protocol.NoData\"\010\202\371+"
    "\004\010\002\020\003\022Q\n\006Update\022\'.bgs.protocol.presence."
    "v1.UpdateRequest\032\024.bgs.protocol.NoData\"\010"
    "\202\371+\004\010\003\020\003\022b\n\005Query\022&.bgs.protocol.presenc"
    "e.v1.QueryRequest\032\'.bgs.protocol.presenc"
    "e.v1.QueryResponse\"\010\202\371+\004\010\004\020\003\022}\n\016BatchSub"
    "scribe\022/.bgs.protocol.presence.v1.BatchS"
    "ubscribeRequest\0320.bgs.protocol.presence."
    "v1.BatchSubscribeResponse\"\010\202\371+\004\010\010\020\003\022e\n\020B"
    "atchUnsubscribe\0221.bgs.protocol.presence."
    "v1.BatchUnsubscribeRequest\032\024.bgs.protoco"
    "l.NoData\"\010\202\371+\004\010\t\020\003\032I\202\371+\?\n&bnet.protocol."
    "presence.PresenceService*\023presence_aggre"
    "gator0\001\212\371+\002\020\001B\005H\002\200\001\000", 2180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "presence_service.proto", &protobuf_RegisterTypes);
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  UpdateRequest::default_instance_ = new UpdateRequest();
  QueryRequest::default_instance_ = new QueryRequest();
  QueryResponse::default_instance_ = new QueryResponse();
  BatchSubscribeRequest::default_instance_ = new BatchSubscribeRequest();
  SubscribeResult::default_instance_ = new SubscribeResult();
  BatchSubscribeResponse::default_instance_ = new BatchSubscribeResponse();
  BatchUnsubscribeRequest::default_instance_ = new BatchUnsubscribeRequest();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  UpdateRequest::default_instance_->InitAsDefaultInstance();
  QueryRequest::default_instance_->InitAsDefaultInstance();
  QueryResponse::default_instance_->InitAsDefaultInstance();
  BatchSubscribeRequest::default_instance_->InitAsDefaultInstance();
  SubscribeResult::default_instance_->InitAsDefaultInstance();
  BatchSubscribeResponse::default_instance_->InitAsDefaultInstance();
  BatchUnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_presence_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_presence_5fservice_2eproto {
  StaticDescriptorInitializer_presence_5fservice_2eproto() {
    protobuf_AddDesc_presence_5fservice_2eproto();
  }
} static_descriptor_initializer_presence_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kAgentIdFieldNumber;
const int SubscribeRequest::kEntityIdFieldNumber;
const int SubscribeRequest::kObjectIdFieldNumber;
const int SubscribeRequest::kProgramFieldNumber;
const int SubscribeRequest::kKeyFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  entity_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete entity_id_;
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kAgentIdFieldNumber;
const int UnsubscribeRequest::kEntityIdFieldNumber;
const int UnsubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  entity_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete entity_id_;
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateRequest::kEntityIdFieldNumber;
const int UpdateRequest::kFieldOperationFieldNumber;
const int UpdateRequest::kNoCreateFieldNumber;
const int UpdateRequest::kAgentIdFieldNumber;
#endif  // !_MSC_VER

UpdateRequest::UpdateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.UpdateRequest)
}

void UpdateRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UpdateRequest::UpdateRequest(const UpdateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.UpdateRequest)
}

void UpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  no_create_ = false;
  agent_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRequest::~UpdateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.UpdateRequest)
  SharedDtor();
}

void UpdateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
    delete agent_id_;
  }
}

void UpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRequest_descriptor_;
}

const UpdateRequest& UpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

UpdateRequest* UpdateRequest::default_instance_ = NULL;

UpdateRequest* UpdateRequest::New() const {
  return new UpdateRequest;
}

void UpdateRequest::Swap(UpdateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRequest_descriptor_;
  metadata.reflection = UpdateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int QueryRequest::kEntityIdFieldNumber;
const int QueryRequest::kKeyFieldNumber;
const int QueryRequest::kAgentIdFieldNumber;
#endif  // !_MSC_VER

QueryRequest::QueryRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.QueryRequest)
}

void QueryRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

QueryRequest::QueryRequest(const QueryRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.QueryRequest)
}

void QueryRequest::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  agent_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
    delete agent_id_;
  }
}

void QueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryRequest_descriptor_;
}

const QueryRequest& QueryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

QueryRequest* QueryRequest::default_instance_ = NULL;

QueryRequest* QueryRequest::New() const {
  return new QueryRequest;
}

void QueryRequest::Swap(QueryRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryRequest_descriptor_;
  metadata.reflection = QueryRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int QueryResponse::kFieldFieldNumber;
#endif  // !_MSC_VER

QueryResponse::QueryResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.QueryResponse)
}

void QueryResponse::InitAsDefaultInstance() {
}

QueryResponse::QueryResponse(const QueryResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.QueryResponse)
}

void QueryResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryResponse_descriptor_;
}

const QueryResponse& QueryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

QueryResponse* QueryResponse::default_instance_ = NULL;

QueryResponse* QueryResponse::New() const {
  return new QueryResponse;
}

void QueryResponse::Swap(QueryResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata QueryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryResponse_descriptor_;
  metadata.reflection = QueryResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BatchSubscribeRequest::kAgentIdFieldNumber;
const int BatchSubscribeRequest::kEntityIdFieldNumber;
const int BatchSubscribeRequest::kProgramFieldNumber;
const int BatchSubscribeRequest::kKeyFieldNumber;
const int BatchSubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

BatchSubscribeRequest::BatchSubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.BatchSubscribeRequest)
}

void BatchSubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BatchSubscribeRequest::BatchSubscribeRequest(const BatchSubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.BatchSubscribeRequest)
}

void BatchSubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchSubscribeRequest::~BatchSubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.BatchSubscribeRequest)
  SharedDtor();
}

void BatchSubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void BatchSubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchSubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchSubscribeRequest_descriptor_;
}

const BatchSubscribeRequest& BatchSubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

BatchSubscribeRequest* BatchSubscribeRequest::default_instance_ = NULL;

BatchSubscribeRequest* BatchSubscribeRequest::New() const {
  return new BatchSubscribeRequest;
}

void BatchSubscribeRequest::Swap(BatchSubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BatchSubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchSubscribeRequest_descriptor_;
  metadata.reflection = BatchSubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscribeResult::kEntityIdFieldNumber;
const int SubscribeResult::kResultFieldNumber;
#endif  // !_MSC_VER

SubscribeResult::SubscribeResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.SubscribeResult)
}

void SubscribeResult::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

SubscribeResult::SubscribeResult(const SubscribeResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.SubscribeResult)
}

void SubscribeResult::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeResult::~SubscribeResult() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.SubscribeResult)
  SharedDtor();
}

void SubscribeResult::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
  }
}

void SubscribeResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeResult_descriptor_;
}

const SubscribeResult& SubscribeResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

SubscribeResult* SubscribeResult::default_instance_ = NULL;

SubscribeResult* SubscribeResult::New() const {
  return new SubscribeResult;
}

void SubscribeResult::Swap(SubscribeResult* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeResult_descriptor_;
  metadata.reflection = SubscribeResult_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BatchSubscribeResponse::kSubscribeFailedFieldNumber;
#endif  // !_MSC_VER

BatchSubscribeResponse::BatchSubscribeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.BatchSubscribeResponse)
}

void BatchSubscribeResponse::InitAsDefaultInstance() {
}

BatchSubscribeResponse::BatchSubscribeResponse(const BatchSubscribeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.BatchSubscribeResponse)
}

void BatchSubscribeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchSubscribeResponse::~BatchSubscribeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.BatchSubscribeResponse)
  SharedDtor();
}

void BatchSubscribeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchSubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchSubscribeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchSubscribeResponse_descriptor_;
}

const BatchSubscribeResponse& BatchSubscribeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

BatchSubscribeResponse* BatchSubscribeResponse::default_instance_ = NULL;

BatchSubscribeResponse* BatchSubscribeResponse::New() const {
  return new BatchSubscribeResponse;
}

void BatchSubscribeResponse::Swap(BatchSubscribeResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BatchSubscribeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchSubscribeResponse_descriptor_;
  metadata.reflection = BatchSubscribeResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BatchUnsubscribeRequest::kAgentIdFieldNumber;
const int BatchUnsubscribeRequest::kEntityIdFieldNumber;
const int BatchUnsubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

BatchUnsubscribeRequest::BatchUnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.presence.v1.BatchUnsubscribeRequest)
}

void BatchUnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BatchUnsubscribeRequest::BatchUnsubscribeRequest(const BatchUnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.presence.v1.BatchUnsubscribeRequest)
}

void BatchUnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchUnsubscribeRequest::~BatchUnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.presence.v1.BatchUnsubscribeRequest)
  SharedDtor();
}

void BatchUnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void BatchUnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchUnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchUnsubscribeRequest_descriptor_;
}

const BatchUnsubscribeRequest& BatchUnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_presence_5fservice_2eproto();
  return *default_instance_;
}

BatchUnsubscribeRequest* BatchUnsubscribeRequest::default_instance_ = NULL;

BatchUnsubscribeRequest* BatchUnsubscribeRequest::New() const {
  return new BatchUnsubscribeRequest;
}

void BatchUnsubscribeRequest::Swap(BatchUnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BatchUnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchUnsubscribeRequest_descriptor_;
  metadata.reflection = BatchUnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

PresenceService::PresenceService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

PresenceService::~PresenceService() {
}

google::protobuf::ServiceDescriptor const* PresenceService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PresenceService_descriptor_;
}

void PresenceService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 1:
      ParseAndHandleSubscribe(token, methodId, buffer);
      break;
    case 2:
      ParseAndHandleUnsubscribe(token, methodId, buffer);
      break;
    case 3:
      ParseAndHandleUpdate(token, methodId, buffer);
      break;
    case 4:
      ParseAndHandleQuery(token, methodId, buffer);
      break;
    case 8:
      ParseAndHandleBatchSubscribe(token, methodId, buffer);
      break;
    case 9:
      ParseAndHandleBatchUnsubscribe(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 PresenceService::HandleSubscribe(::bgs::protocol::presence::v1::SubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.Subscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 PresenceService::HandleUnsubscribe(::bgs::protocol::presence::v1::UnsubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.Unsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 PresenceService::HandleUpdate(::bgs::protocol::presence::v1::UpdateRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.Update", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 PresenceService::HandleQuery(::bgs::protocol::presence::v1::QueryRequest const* request, ::bgs::protocol::presence::v1::QueryResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.Query", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 PresenceService::HandleBatchSubscribe(::bgs::protocol::presence::v1::BatchSubscribeRequest const* request, ::bgs::protocol::presence::v1::BatchSubscribeResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.BatchSubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 PresenceService::HandleBatchUnsubscribe(::bgs::protocol::presence::v1::BatchUnsubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("PresenceService.BatchUnsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void PresenceService::ParseAndHandleSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::SubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.Subscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.Subscribe", "bgs.protocol.presence.v1.SubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.Subscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void PresenceService::ParseAndHandleUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::UnsubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.Unsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.Unsubscribe", "bgs.protocol.presence.v1.UnsubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.Unsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void PresenceService::ParseAndHandleUpdate(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::UpdateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.Update");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.Update", "bgs.protocol.presence.v1.UpdateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.Update", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUpdate(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void PresenceService::ParseAndHandleQuery(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::QueryRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.Query");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.Query", "bgs.protocol.presence.v1.QueryRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.Query", ::bgs::protocol::presence::v1::QueryResponse::descriptor());
  ::bgs::protocol::presence::v1::QueryResponse response;
  uint32 status = HandleQuery(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void PresenceService::ParseAndHandleBatchSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::BatchSubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.BatchSubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.BatchSubscribe", "bgs.protocol.presence.v1.BatchSubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.BatchSubscribe", ::bgs::protocol::presence::v1::BatchSubscribeResponse::descriptor());
  ::bgs::protocol::presence::v1::BatchSubscribeResponse response;
  uint32 status = HandleBatchSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void PresenceService::ParseAndHandleBatchUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::presence::v1::BatchUnsubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("PresenceService.BatchUnsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("PresenceService.BatchUnsubscribe", "bgs.protocol.presence.v1.BatchUnsubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "PresenceService.BatchUnsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleBatchUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace presence
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
