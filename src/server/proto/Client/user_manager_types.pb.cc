// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_manager_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user_manager_types.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace user_manager {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* RecentPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecentPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockedPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockedPlayer_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_user_5fmanager_5ftypes_2eproto() {
  protobuf_AddDesc_user_5fmanager_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "user_manager_types.proto");
  GOOGLE_CHECK(file != NULL);
  RecentPlayer_descriptor_ = file->message_type(0);
  static const int RecentPlayer_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, timestamp_played_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, counter_),
  };
  RecentPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecentPlayer_descriptor_,
      RecentPlayer::default_instance_,
      RecentPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecentPlayer));
  BlockedPlayer_descriptor_ = file->message_type(1);
  static const int BlockedPlayer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, battle_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, privileges_),
  };
  BlockedPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockedPlayer_descriptor_,
      BlockedPlayer::default_instance_,
      BlockedPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockedPlayer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_user_5fmanager_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecentPlayer_descriptor_, &RecentPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockedPlayer_descriptor_, &BlockedPlayer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_user_5fmanager_5ftypes_2eproto() {
  delete RecentPlayer::default_instance_;
  delete RecentPlayer_reflection_;
  delete BlockedPlayer::default_instance_;
  delete BlockedPlayer_reflection_;
}

void protobuf_AddDesc_user_5fmanager_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_global_5fextensions_2ffield_5foptions_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_attribute_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030user_manager_types.proto\022\034bgs.protocol"
    ".user_manager.v1\032%global_extensions/fiel"
    "d_options.proto\032\022entity_types.proto\032\025att"
    "ribute_types.proto\"\245\001\n\014RecentPlayer\022)\n\te"
    "ntity_id\030\001 \002(\0132\026.bgs.protocol.EntityId\022\017"
    "\n\007program\030\002 \001(\t\022\030\n\020timestamp_played\030\003 \001("
    "\006\022+\n\nattributes\030\004 \003(\0132\027.bgs.protocol.Att"
    "ribute\022\022\n\007counter\030\006 \001(\007:\0010\"\201\001\n\rBlockedPl"
    "ayer\022*\n\naccount_id\030\001 \002(\0132\026.bgs.protocol."
    "EntityId\022\032\n\nbattle_tag\030\002 \001(\tB\006\202\371+\002\010\001\022\020\n\004"
    "role\030\003 \003(\rB\002\030\001\022\026\n\nprivileges\030\004 \001(\004B\002\030\001B\002"
    "H\002P\000", 444);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user_manager_types.proto", &protobuf_RegisterTypes);
  RecentPlayer::default_instance_ = new RecentPlayer();
  BlockedPlayer::default_instance_ = new BlockedPlayer();
  RecentPlayer::default_instance_->InitAsDefaultInstance();
  BlockedPlayer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_user_5fmanager_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_user_5fmanager_5ftypes_2eproto {
  StaticDescriptorInitializer_user_5fmanager_5ftypes_2eproto() {
    protobuf_AddDesc_user_5fmanager_5ftypes_2eproto();
  }
} static_descriptor_initializer_user_5fmanager_5ftypes_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int RecentPlayer::kEntityIdFieldNumber;
const int RecentPlayer::kProgramFieldNumber;
const int RecentPlayer::kTimestampPlayedFieldNumber;
const int RecentPlayer::kAttributesFieldNumber;
const int RecentPlayer::kCounterFieldNumber;
#endif  // !_MSC_VER

RecentPlayer::RecentPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.RecentPlayer)
}

void RecentPlayer::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

RecentPlayer::RecentPlayer(const RecentPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.RecentPlayer)
}

void RecentPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entity_id_ = NULL;
  program_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_played_ = GOOGLE_ULONGLONG(0);
  counter_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecentPlayer::~RecentPlayer() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.RecentPlayer)
  SharedDtor();
}

void RecentPlayer::SharedDtor() {
  if (program_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete program_;
  }
  if (this != default_instance_) {
    delete entity_id_;
  }
}

void RecentPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecentPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecentPlayer_descriptor_;
}

const RecentPlayer& RecentPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5ftypes_2eproto();
  return *default_instance_;
}

RecentPlayer* RecentPlayer::default_instance_ = NULL;

RecentPlayer* RecentPlayer::New() const {
  return new RecentPlayer;
}

void RecentPlayer::Swap(RecentPlayer* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RecentPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecentPlayer_descriptor_;
  metadata.reflection = RecentPlayer_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockedPlayer::kAccountIdFieldNumber;
const int BlockedPlayer::kBattleTagFieldNumber;
const int BlockedPlayer::kRoleFieldNumber;
const int BlockedPlayer::kPrivilegesFieldNumber;
#endif  // !_MSC_VER

BlockedPlayer::BlockedPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.BlockedPlayer)
}

void BlockedPlayer::InitAsDefaultInstance() {
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BlockedPlayer::BlockedPlayer(const BlockedPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.BlockedPlayer)
}

void BlockedPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_id_ = NULL;
  battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privileges_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockedPlayer::~BlockedPlayer() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.BlockedPlayer)
  SharedDtor();
}

void BlockedPlayer::SharedDtor() {
  if (battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battle_tag_;
  }
  if (this != default_instance_) {
    delete account_id_;
  }
}

void BlockedPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockedPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockedPlayer_descriptor_;
}

const BlockedPlayer& BlockedPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5ftypes_2eproto();
  return *default_instance_;
}

BlockedPlayer* BlockedPlayer::default_instance_ = NULL;

BlockedPlayer* BlockedPlayer::New() const {
  return new BlockedPlayer;
}

void BlockedPlayer::Swap(BlockedPlayer* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockedPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockedPlayer_descriptor_;
  metadata.reflection = BlockedPlayer_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace user_manager
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
