// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: global_extensions/method_options.proto

#ifndef PROTOBUF_global_5fextensions_2fmethod_5foptions_2eproto__INCLUDED
#define PROTOBUF_global_5fextensions_2fmethod_5foptions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
#include "global_extensions/routing.pb.h"
#include "global_extensions/register_method_types.pb.h"
#include "Define.h" // for TC_PROTO_API
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {

// Internal implementation detail -- do not call these.
void TC_PROTO_API protobuf_AddDesc_global_5fextensions_2fmethod_5foptions_2eproto();
void protobuf_AssignDesc_global_5fextensions_2fmethod_5foptions_2eproto();
void protobuf_ShutdownFile_global_5fextensions_2fmethod_5foptions_2eproto();

class BGSMethodOptions;

// ===================================================================

class TC_PROTO_API BGSMethodOptions : public ::google::protobuf::Message {
 public:
  BGSMethodOptions();
  virtual ~BGSMethodOptions();

  BGSMethodOptions(const BGSMethodOptions& from);

  inline BGSMethodOptions& operator=(const BGSMethodOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BGSMethodOptions& default_instance();

  void Swap(BGSMethodOptions* other);

  // implements Message ----------------------------------------------

  BGSMethodOptions* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .bgs.protocol.ClientIdentityRoutingType client_identity_routing = 2;
  inline bool has_client_identity_routing() const;
  inline void clear_client_identity_routing();
  static const int kClientIdentityRoutingFieldNumber = 2;
  inline ::bgs::protocol::ClientIdentityRoutingType client_identity_routing() const;
  inline void set_client_identity_routing(::bgs::protocol::ClientIdentityRoutingType value);

  // optional bool enable_fanout = 3;
  inline bool has_enable_fanout() const;
  inline void clear_enable_fanout();
  static const int kEnableFanoutFieldNumber = 3;
  inline bool enable_fanout() const;
  inline void set_enable_fanout(bool value);

  // optional string legacy_fanout_replacement = 4;
  inline bool has_legacy_fanout_replacement() const;
  inline void clear_legacy_fanout_replacement();
  static const int kLegacyFanoutReplacementFieldNumber = 4;
  inline const ::std::string& legacy_fanout_replacement() const;
  inline void set_legacy_fanout_replacement(const ::std::string& value);
  inline void set_legacy_fanout_replacement(const char* value);
  inline void set_legacy_fanout_replacement(const char* value, size_t size);
  inline ::std::string* mutable_legacy_fanout_replacement();
  inline ::std::string* release_legacy_fanout_replacement();
  inline void set_allocated_legacy_fanout_replacement(::std::string* legacy_fanout_replacement);

  // optional string forward_key = 5;
  inline bool has_forward_key() const;
  inline void clear_forward_key();
  static const int kForwardKeyFieldNumber = 5;
  inline const ::std::string& forward_key() const;
  inline void set_forward_key(const ::std::string& value);
  inline void set_forward_key(const char* value);
  inline void set_forward_key(const char* value, size_t size);
  inline ::std::string* mutable_forward_key();
  inline ::std::string* release_forward_key();
  inline void set_allocated_forward_key(::std::string* forward_key);

  // optional bool idempotent = 6;
  inline bool has_idempotent() const;
  inline void clear_idempotent();
  static const int kIdempotentFieldNumber = 6;
  inline bool idempotent() const;
  inline void set_idempotent(bool value);

  // optional bool handle_destination_unreachable = 7;
  inline bool has_handle_destination_unreachable() const;
  inline void clear_handle_destination_unreachable();
  static const int kHandleDestinationUnreachableFieldNumber = 7;
  inline bool handle_destination_unreachable() const;
  inline void set_handle_destination_unreachable(bool value);

  // optional string custom_region_resolver = 8;
  inline bool has_custom_region_resolver() const;
  inline void clear_custom_region_resolver();
  static const int kCustomRegionResolverFieldNumber = 8;
  inline const ::std::string& custom_region_resolver() const;
  inline void set_custom_region_resolver(const ::std::string& value);
  inline void set_custom_region_resolver(const char* value);
  inline void set_custom_region_resolver(const char* value, size_t size);
  inline ::std::string* mutable_custom_region_resolver();
  inline ::std::string* release_custom_region_resolver();
  inline void set_allocated_custom_region_resolver(::std::string* custom_region_resolver);

  // optional bool explicit_region_routing = 9;
  inline bool has_explicit_region_routing() const;
  inline void clear_explicit_region_routing();
  static const int kExplicitRegionRoutingFieldNumber = 9;
  inline bool explicit_region_routing() const;
  inline void set_explicit_region_routing(bool value);

  // optional bool obsolete = 10;
  inline bool has_obsolete() const;
  inline void clear_obsolete();
  static const int kObsoleteFieldNumber = 10;
  inline bool obsolete() const;
  inline void set_obsolete(bool value);

  // optional .bgs.protocol.ClientRegisterMethodType client_register_type = 11;
  inline bool has_client_register_type() const;
  inline void clear_client_register_type();
  static const int kClientRegisterTypeFieldNumber = 11;
  inline ::bgs::protocol::ClientRegisterMethodType client_register_type() const;
  inline void set_client_register_type(::bgs::protocol::ClientRegisterMethodType value);

  // optional string forward_key_proto_file = 12;
  inline bool has_forward_key_proto_file() const;
  inline void clear_forward_key_proto_file();
  static const int kForwardKeyProtoFileFieldNumber = 12;
  inline const ::std::string& forward_key_proto_file() const;
  inline void set_forward_key_proto_file(const ::std::string& value);
  inline void set_forward_key_proto_file(const char* value);
  inline void set_forward_key_proto_file(const char* value, size_t size);
  inline ::std::string* mutable_forward_key_proto_file();
  inline ::std::string* release_forward_key_proto_file();
  inline void set_allocated_forward_key_proto_file(::std::string* forward_key_proto_file);

  // @@protoc_insertion_point(class_scope:bgs.protocol.BGSMethodOptions)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_client_identity_routing();
  inline void clear_has_client_identity_routing();
  inline void set_has_enable_fanout();
  inline void clear_has_enable_fanout();
  inline void set_has_legacy_fanout_replacement();
  inline void clear_has_legacy_fanout_replacement();
  inline void set_has_forward_key();
  inline void clear_has_forward_key();
  inline void set_has_idempotent();
  inline void clear_has_idempotent();
  inline void set_has_handle_destination_unreachable();
  inline void clear_has_handle_destination_unreachable();
  inline void set_has_custom_region_resolver();
  inline void clear_has_custom_region_resolver();
  inline void set_has_explicit_region_routing();
  inline void clear_has_explicit_region_routing();
  inline void set_has_obsolete();
  inline void clear_has_obsolete();
  inline void set_has_client_register_type();
  inline void clear_has_client_register_type();
  inline void set_has_forward_key_proto_file();
  inline void clear_has_forward_key_proto_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int client_identity_routing_;
  ::std::string* legacy_fanout_replacement_;
  ::std::string* forward_key_;
  bool enable_fanout_;
  bool idempotent_;
  bool handle_destination_unreachable_;
  bool explicit_region_routing_;
  bool obsolete_;
  ::std::string* custom_region_resolver_;
  ::std::string* forward_key_proto_file_;
  int client_register_type_;
  friend void TC_PROTO_API protobuf_AddDesc_global_5fextensions_2fmethod_5foptions_2eproto();
  friend void protobuf_AssignDesc_global_5fextensions_2fmethod_5foptions_2eproto();
  friend void protobuf_ShutdownFile_global_5fextensions_2fmethod_5foptions_2eproto();

  void InitAsDefaultInstance();
  static BGSMethodOptions* default_instance_;
};
// ===================================================================

// ===================================================================

static const int kMethodOptionsFieldNumber = 90000;
TC_PROTO_API extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::bgs::protocol::BGSMethodOptions >, 11, false >
  method_options;

// ===================================================================

// BGSMethodOptions

// optional uint32 id = 1;
inline bool BGSMethodOptions::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BGSMethodOptions::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BGSMethodOptions::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BGSMethodOptions::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BGSMethodOptions::id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.id)
  return id_;
}
inline void BGSMethodOptions::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.id)
}

// optional .bgs.protocol.ClientIdentityRoutingType client_identity_routing = 2;
inline bool BGSMethodOptions::has_client_identity_routing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BGSMethodOptions::set_has_client_identity_routing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BGSMethodOptions::clear_has_client_identity_routing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BGSMethodOptions::clear_client_identity_routing() {
  client_identity_routing_ = 0;
  clear_has_client_identity_routing();
}
inline ::bgs::protocol::ClientIdentityRoutingType BGSMethodOptions::client_identity_routing() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.client_identity_routing)
  return static_cast< ::bgs::protocol::ClientIdentityRoutingType >(client_identity_routing_);
}
inline void BGSMethodOptions::set_client_identity_routing(::bgs::protocol::ClientIdentityRoutingType value) {
  assert(::bgs::protocol::ClientIdentityRoutingType_IsValid(value));
  set_has_client_identity_routing();
  client_identity_routing_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.client_identity_routing)
}

// optional bool enable_fanout = 3;
inline bool BGSMethodOptions::has_enable_fanout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BGSMethodOptions::set_has_enable_fanout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BGSMethodOptions::clear_has_enable_fanout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BGSMethodOptions::clear_enable_fanout() {
  enable_fanout_ = false;
  clear_has_enable_fanout();
}
inline bool BGSMethodOptions::enable_fanout() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.enable_fanout)
  return enable_fanout_;
}
inline void BGSMethodOptions::set_enable_fanout(bool value) {
  set_has_enable_fanout();
  enable_fanout_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.enable_fanout)
}

// optional string legacy_fanout_replacement = 4;
inline bool BGSMethodOptions::has_legacy_fanout_replacement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BGSMethodOptions::set_has_legacy_fanout_replacement() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BGSMethodOptions::clear_has_legacy_fanout_replacement() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BGSMethodOptions::clear_legacy_fanout_replacement() {
  if (legacy_fanout_replacement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    legacy_fanout_replacement_->clear();
  }
  clear_has_legacy_fanout_replacement();
}
inline const ::std::string& BGSMethodOptions::legacy_fanout_replacement() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
  return *legacy_fanout_replacement_;
}
inline void BGSMethodOptions::set_legacy_fanout_replacement(const ::std::string& value) {
  set_has_legacy_fanout_replacement();
  if (legacy_fanout_replacement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    legacy_fanout_replacement_ = new ::std::string;
  }
  legacy_fanout_replacement_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
}
inline void BGSMethodOptions::set_legacy_fanout_replacement(const char* value) {
  set_has_legacy_fanout_replacement();
  if (legacy_fanout_replacement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    legacy_fanout_replacement_ = new ::std::string;
  }
  legacy_fanout_replacement_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
}
inline void BGSMethodOptions::set_legacy_fanout_replacement(const char* value, size_t size) {
  set_has_legacy_fanout_replacement();
  if (legacy_fanout_replacement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    legacy_fanout_replacement_ = new ::std::string;
  }
  legacy_fanout_replacement_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
}
inline ::std::string* BGSMethodOptions::mutable_legacy_fanout_replacement() {
  set_has_legacy_fanout_replacement();
  if (legacy_fanout_replacement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    legacy_fanout_replacement_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
  return legacy_fanout_replacement_;
}
inline ::std::string* BGSMethodOptions::release_legacy_fanout_replacement() {
  clear_has_legacy_fanout_replacement();
  if (legacy_fanout_replacement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = legacy_fanout_replacement_;
    legacy_fanout_replacement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BGSMethodOptions::set_allocated_legacy_fanout_replacement(::std::string* legacy_fanout_replacement) {
  if (legacy_fanout_replacement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete legacy_fanout_replacement_;
  }
  if (legacy_fanout_replacement) {
    set_has_legacy_fanout_replacement();
    legacy_fanout_replacement_ = legacy_fanout_replacement;
  } else {
    clear_has_legacy_fanout_replacement();
    legacy_fanout_replacement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.BGSMethodOptions.legacy_fanout_replacement)
}

// optional string forward_key = 5;
inline bool BGSMethodOptions::has_forward_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BGSMethodOptions::set_has_forward_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BGSMethodOptions::clear_has_forward_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BGSMethodOptions::clear_forward_key() {
  if (forward_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_->clear();
  }
  clear_has_forward_key();
}
inline const ::std::string& BGSMethodOptions::forward_key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.forward_key)
  return *forward_key_;
}
inline void BGSMethodOptions::set_forward_key(const ::std::string& value) {
  set_has_forward_key();
  if (forward_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_ = new ::std::string;
  }
  forward_key_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.forward_key)
}
inline void BGSMethodOptions::set_forward_key(const char* value) {
  set_has_forward_key();
  if (forward_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_ = new ::std::string;
  }
  forward_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.BGSMethodOptions.forward_key)
}
inline void BGSMethodOptions::set_forward_key(const char* value, size_t size) {
  set_has_forward_key();
  if (forward_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_ = new ::std::string;
  }
  forward_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.BGSMethodOptions.forward_key)
}
inline ::std::string* BGSMethodOptions::mutable_forward_key() {
  set_has_forward_key();
  if (forward_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.BGSMethodOptions.forward_key)
  return forward_key_;
}
inline ::std::string* BGSMethodOptions::release_forward_key() {
  clear_has_forward_key();
  if (forward_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = forward_key_;
    forward_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BGSMethodOptions::set_allocated_forward_key(::std::string* forward_key) {
  if (forward_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forward_key_;
  }
  if (forward_key) {
    set_has_forward_key();
    forward_key_ = forward_key;
  } else {
    clear_has_forward_key();
    forward_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.BGSMethodOptions.forward_key)
}

// optional bool idempotent = 6;
inline bool BGSMethodOptions::has_idempotent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BGSMethodOptions::set_has_idempotent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BGSMethodOptions::clear_has_idempotent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BGSMethodOptions::clear_idempotent() {
  idempotent_ = false;
  clear_has_idempotent();
}
inline bool BGSMethodOptions::idempotent() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.idempotent)
  return idempotent_;
}
inline void BGSMethodOptions::set_idempotent(bool value) {
  set_has_idempotent();
  idempotent_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.idempotent)
}

// optional bool handle_destination_unreachable = 7;
inline bool BGSMethodOptions::has_handle_destination_unreachable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BGSMethodOptions::set_has_handle_destination_unreachable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BGSMethodOptions::clear_has_handle_destination_unreachable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BGSMethodOptions::clear_handle_destination_unreachable() {
  handle_destination_unreachable_ = false;
  clear_has_handle_destination_unreachable();
}
inline bool BGSMethodOptions::handle_destination_unreachable() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.handle_destination_unreachable)
  return handle_destination_unreachable_;
}
inline void BGSMethodOptions::set_handle_destination_unreachable(bool value) {
  set_has_handle_destination_unreachable();
  handle_destination_unreachable_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.handle_destination_unreachable)
}

// optional string custom_region_resolver = 8;
inline bool BGSMethodOptions::has_custom_region_resolver() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BGSMethodOptions::set_has_custom_region_resolver() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BGSMethodOptions::clear_has_custom_region_resolver() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BGSMethodOptions::clear_custom_region_resolver() {
  if (custom_region_resolver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_region_resolver_->clear();
  }
  clear_has_custom_region_resolver();
}
inline const ::std::string& BGSMethodOptions::custom_region_resolver() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.custom_region_resolver)
  return *custom_region_resolver_;
}
inline void BGSMethodOptions::set_custom_region_resolver(const ::std::string& value) {
  set_has_custom_region_resolver();
  if (custom_region_resolver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_region_resolver_ = new ::std::string;
  }
  custom_region_resolver_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.custom_region_resolver)
}
inline void BGSMethodOptions::set_custom_region_resolver(const char* value) {
  set_has_custom_region_resolver();
  if (custom_region_resolver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_region_resolver_ = new ::std::string;
  }
  custom_region_resolver_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.BGSMethodOptions.custom_region_resolver)
}
inline void BGSMethodOptions::set_custom_region_resolver(const char* value, size_t size) {
  set_has_custom_region_resolver();
  if (custom_region_resolver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_region_resolver_ = new ::std::string;
  }
  custom_region_resolver_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.BGSMethodOptions.custom_region_resolver)
}
inline ::std::string* BGSMethodOptions::mutable_custom_region_resolver() {
  set_has_custom_region_resolver();
  if (custom_region_resolver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    custom_region_resolver_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.BGSMethodOptions.custom_region_resolver)
  return custom_region_resolver_;
}
inline ::std::string* BGSMethodOptions::release_custom_region_resolver() {
  clear_has_custom_region_resolver();
  if (custom_region_resolver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = custom_region_resolver_;
    custom_region_resolver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BGSMethodOptions::set_allocated_custom_region_resolver(::std::string* custom_region_resolver) {
  if (custom_region_resolver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete custom_region_resolver_;
  }
  if (custom_region_resolver) {
    set_has_custom_region_resolver();
    custom_region_resolver_ = custom_region_resolver;
  } else {
    clear_has_custom_region_resolver();
    custom_region_resolver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.BGSMethodOptions.custom_region_resolver)
}

// optional bool explicit_region_routing = 9;
inline bool BGSMethodOptions::has_explicit_region_routing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BGSMethodOptions::set_has_explicit_region_routing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BGSMethodOptions::clear_has_explicit_region_routing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BGSMethodOptions::clear_explicit_region_routing() {
  explicit_region_routing_ = false;
  clear_has_explicit_region_routing();
}
inline bool BGSMethodOptions::explicit_region_routing() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.explicit_region_routing)
  return explicit_region_routing_;
}
inline void BGSMethodOptions::set_explicit_region_routing(bool value) {
  set_has_explicit_region_routing();
  explicit_region_routing_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.explicit_region_routing)
}

// optional bool obsolete = 10;
inline bool BGSMethodOptions::has_obsolete() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BGSMethodOptions::set_has_obsolete() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BGSMethodOptions::clear_has_obsolete() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BGSMethodOptions::clear_obsolete() {
  obsolete_ = false;
  clear_has_obsolete();
}
inline bool BGSMethodOptions::obsolete() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.obsolete)
  return obsolete_;
}
inline void BGSMethodOptions::set_obsolete(bool value) {
  set_has_obsolete();
  obsolete_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.obsolete)
}

// optional .bgs.protocol.ClientRegisterMethodType client_register_type = 11;
inline bool BGSMethodOptions::has_client_register_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BGSMethodOptions::set_has_client_register_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BGSMethodOptions::clear_has_client_register_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BGSMethodOptions::clear_client_register_type() {
  client_register_type_ = 0;
  clear_has_client_register_type();
}
inline ::bgs::protocol::ClientRegisterMethodType BGSMethodOptions::client_register_type() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.client_register_type)
  return static_cast< ::bgs::protocol::ClientRegisterMethodType >(client_register_type_);
}
inline void BGSMethodOptions::set_client_register_type(::bgs::protocol::ClientRegisterMethodType value) {
  assert(::bgs::protocol::ClientRegisterMethodType_IsValid(value));
  set_has_client_register_type();
  client_register_type_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.client_register_type)
}

// optional string forward_key_proto_file = 12;
inline bool BGSMethodOptions::has_forward_key_proto_file() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BGSMethodOptions::set_has_forward_key_proto_file() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BGSMethodOptions::clear_has_forward_key_proto_file() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BGSMethodOptions::clear_forward_key_proto_file() {
  if (forward_key_proto_file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_proto_file_->clear();
  }
  clear_has_forward_key_proto_file();
}
inline const ::std::string& BGSMethodOptions::forward_key_proto_file() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
  return *forward_key_proto_file_;
}
inline void BGSMethodOptions::set_forward_key_proto_file(const ::std::string& value) {
  set_has_forward_key_proto_file();
  if (forward_key_proto_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_proto_file_ = new ::std::string;
  }
  forward_key_proto_file_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
}
inline void BGSMethodOptions::set_forward_key_proto_file(const char* value) {
  set_has_forward_key_proto_file();
  if (forward_key_proto_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_proto_file_ = new ::std::string;
  }
  forward_key_proto_file_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
}
inline void BGSMethodOptions::set_forward_key_proto_file(const char* value, size_t size) {
  set_has_forward_key_proto_file();
  if (forward_key_proto_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_proto_file_ = new ::std::string;
  }
  forward_key_proto_file_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
}
inline ::std::string* BGSMethodOptions::mutable_forward_key_proto_file() {
  set_has_forward_key_proto_file();
  if (forward_key_proto_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forward_key_proto_file_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
  return forward_key_proto_file_;
}
inline ::std::string* BGSMethodOptions::release_forward_key_proto_file() {
  clear_has_forward_key_proto_file();
  if (forward_key_proto_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = forward_key_proto_file_;
    forward_key_proto_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BGSMethodOptions::set_allocated_forward_key_proto_file(::std::string* forward_key_proto_file) {
  if (forward_key_proto_file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forward_key_proto_file_;
  }
  if (forward_key_proto_file) {
    set_has_forward_key_proto_file();
    forward_key_proto_file_ = forward_key_proto_file;
  } else {
    clear_has_forward_key_proto_file();
    forward_key_proto_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.BGSMethodOptions.forward_key_proto_file)
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

#ifndef SWIG
namespace google {
namespace protobuf {
}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_global_5fextensions_2fmethod_5foptions_2eproto__INCLUDED
