// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_manager_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user_manager_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace user_manager {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddRecentPlayersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddRecentPlayersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClearRecentPlayersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClearRecentPlayersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockPlayerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockPlayerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnblockPlayerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnblockPlayerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockedPlayerAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockedPlayerAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockedPlayerRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockedPlayerRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecentPlayersAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecentPlayersAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecentPlayersRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecentPlayersRemovedNotification_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* UserManagerService_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* UserManagerListener_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_user_5fmanager_5fservice_2eproto() {
  protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "user_manager_service.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeRequest_descriptor_ = file->message_type(0);
  static const int SubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, object_id_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  SubscribeResponse_descriptor_ = file->message_type(1);
  static const int SubscribeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, blocked_players_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, recent_players_),
  };
  SubscribeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeResponse_descriptor_,
      SubscribeResponse::default_instance_,
      SubscribeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeResponse));
  UnsubscribeRequest_descriptor_ = file->message_type(2);
  static const int UnsubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, object_id_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  AddRecentPlayersRequest_descriptor_ = file->message_type(3);
  static const int AddRecentPlayersRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRecentPlayersRequest, players_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRecentPlayersRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRecentPlayersRequest, program_),
  };
  AddRecentPlayersRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddRecentPlayersRequest_descriptor_,
      AddRecentPlayersRequest::default_instance_,
      AddRecentPlayersRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRecentPlayersRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRecentPlayersRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddRecentPlayersRequest));
  ClearRecentPlayersRequest_descriptor_ = file->message_type(4);
  static const int ClearRecentPlayersRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRecentPlayersRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRecentPlayersRequest, program_),
  };
  ClearRecentPlayersRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClearRecentPlayersRequest_descriptor_,
      ClearRecentPlayersRequest::default_instance_,
      ClearRecentPlayersRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRecentPlayersRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRecentPlayersRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClearRecentPlayersRequest));
  BlockPlayerRequest_descriptor_ = file->message_type(5);
  static const int BlockPlayerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerRequest, target_id_),
  };
  BlockPlayerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockPlayerRequest_descriptor_,
      BlockPlayerRequest::default_instance_,
      BlockPlayerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockPlayerRequest));
  UnblockPlayerRequest_descriptor_ = file->message_type(6);
  static const int UnblockPlayerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerRequest, target_id_),
  };
  UnblockPlayerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnblockPlayerRequest_descriptor_,
      UnblockPlayerRequest::default_instance_,
      UnblockPlayerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnblockPlayerRequest));
  BlockedPlayerAddedNotification_descriptor_ = file->message_type(7);
  static const int BlockedPlayerAddedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerAddedNotification, player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerAddedNotification, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerAddedNotification, account_id_),
  };
  BlockedPlayerAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockedPlayerAddedNotification_descriptor_,
      BlockedPlayerAddedNotification::default_instance_,
      BlockedPlayerAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockedPlayerAddedNotification));
  BlockedPlayerRemovedNotification_descriptor_ = file->message_type(8);
  static const int BlockedPlayerRemovedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerRemovedNotification, player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerRemovedNotification, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerRemovedNotification, account_id_),
  };
  BlockedPlayerRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockedPlayerRemovedNotification_descriptor_,
      BlockedPlayerRemovedNotification::default_instance_,
      BlockedPlayerRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayerRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockedPlayerRemovedNotification));
  RecentPlayersAddedNotification_descriptor_ = file->message_type(9);
  static const int RecentPlayersAddedNotification_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersAddedNotification, player_),
  };
  RecentPlayersAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecentPlayersAddedNotification_descriptor_,
      RecentPlayersAddedNotification::default_instance_,
      RecentPlayersAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecentPlayersAddedNotification));
  RecentPlayersRemovedNotification_descriptor_ = file->message_type(10);
  static const int RecentPlayersRemovedNotification_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersRemovedNotification, player_),
  };
  RecentPlayersRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecentPlayersRemovedNotification_descriptor_,
      RecentPlayersRemovedNotification::default_instance_,
      RecentPlayersRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecentPlayersRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecentPlayersRemovedNotification));
  UserManagerService_descriptor_ = file->service(0);
  UserManagerListener_descriptor_ = file->service(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_user_5fmanager_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeResponse_descriptor_, &SubscribeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddRecentPlayersRequest_descriptor_, &AddRecentPlayersRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClearRecentPlayersRequest_descriptor_, &ClearRecentPlayersRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockPlayerRequest_descriptor_, &BlockPlayerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnblockPlayerRequest_descriptor_, &UnblockPlayerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockedPlayerAddedNotification_descriptor_, &BlockedPlayerAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockedPlayerRemovedNotification_descriptor_, &BlockedPlayerRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecentPlayersAddedNotification_descriptor_, &RecentPlayersAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecentPlayersRemovedNotification_descriptor_, &RecentPlayersRemovedNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_user_5fmanager_5fservice_2eproto() {
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete SubscribeResponse::default_instance_;
  delete SubscribeResponse_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete AddRecentPlayersRequest::default_instance_;
  delete AddRecentPlayersRequest_reflection_;
  delete ClearRecentPlayersRequest::default_instance_;
  delete ClearRecentPlayersRequest_reflection_;
  delete BlockPlayerRequest::default_instance_;
  delete BlockPlayerRequest_reflection_;
  delete UnblockPlayerRequest::default_instance_;
  delete UnblockPlayerRequest_reflection_;
  delete BlockedPlayerAddedNotification::default_instance_;
  delete BlockedPlayerAddedNotification_reflection_;
  delete BlockedPlayerRemovedNotification::default_instance_;
  delete BlockedPlayerRemovedNotification_reflection_;
  delete RecentPlayersAddedNotification::default_instance_;
  delete RecentPlayersAddedNotification_reflection_;
  delete RecentPlayersRemovedNotification::default_instance_;
  delete RecentPlayersRemovedNotification_reflection_;
}

void protobuf_AddDesc_user_5fmanager_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::user_manager::v1::protobuf_AddDesc_user_5fmanager_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032user_manager_service.proto\022\034bgs.protoc"
    "ol.user_manager.v1\032\030user_manager_types.p"
    "roto\032\022entity_types.proto\032\017rpc_types.prot"
    "o\"W\n\020SubscribeRequest\0220\n\010agent_id\030\001 \001(\0132"
    "\026.bgs.protocol.EntityIdB\006\202\371+\002 \001\022\021\n\tobjec"
    "t_id\030\002 \002(\004\"\235\001\n\021SubscribeResponse\022D\n\017bloc"
    "ked_players\030\001 \003(\0132+.bgs.protocol.user_ma"
    "nager.v1.BlockedPlayer\022B\n\016recent_players"
    "\030\002 \003(\0132*.bgs.protocol.user_manager.v1.Re"
    "centPlayer\"Y\n\022UnsubscribeRequest\0220\n\010agen"
    "t_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002"
    " \001\022\021\n\tobject_id\030\002 \001(\004\"\257\001\n\027AddRecentPlaye"
    "rsRequest\022I\n\007players\030\001 \003(\0132*.bgs.protoco"
    "l.user_manager.v1.RecentPlayerB\014\212\371+\010*\006\n\004"
    "\010\001\020\024\0220\n\010agent_id\030\002 \001(\0132\026.bgs.protocol.En"
    "tityIdB\006\202\371+\002 \001\022\017\n\007program\030\003 \001(\r:\006\202\371+\002\020\001\""
    "^\n\031ClearRecentPlayersRequest\0220\n\010agent_id"
    "\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002 \001\022\017"
    "\n\007program\030\002 \001(\r\"y\n\022BlockPlayerRequest\0220\n"
    "\010agent_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB"
    "\006\202\371+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs.protoco"
    "l.EntityId:\006\202\371+\002\020\001\"{\n\024UnblockPlayerReque"
    "st\0220\n\010agent_id\030\001 \001(\0132\026.bgs.protocol.Enti"
    "tyIdB\006\202\371+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs.pr"
    "otocol.EntityId:\006\202\371+\002\020\001\"\272\001\n\036BlockedPlaye"
    "rAddedNotification\022;\n\006player\030\001 \002(\0132+.bgs"
    ".protocol.user_manager.v1.BlockedPlayer\022"
    "/\n\017game_account_id\030\002 \001(\0132\026.bgs.protocol."
    "EntityId\022*\n\naccount_id\030\003 \001(\0132\026.bgs.proto"
    "col.EntityId\"\274\001\n BlockedPlayerRemovedNot"
    "ification\022;\n\006player\030\001 \002(\0132+.bgs.protocol"
    ".user_manager.v1.BlockedPlayer\022/\n\017game_a"
    "ccount_id\030\002 \001(\0132\026.bgs.protocol.EntityId\022"
    "*\n\naccount_id\030\003 \001(\0132\026.bgs.protocol.Entit"
    "yId\"\\\n\036RecentPlayersAddedNotification\022:\n"
    "\006player\030\001 \003(\0132*.bgs.protocol.user_manage"
    "r.v1.RecentPlayer\"^\n RecentPlayersRemove"
    "dNotification\022:\n\006player\030\001 \003(\0132*.bgs.prot"
    "ocol.user_manager.v1.RecentPlayer2\265\006\n\022Us"
    "erManagerService\022t\n\tSubscribe\022..bgs.prot"
    "ocol.user_manager.v1.SubscribeRequest\032/."
    "bgs.protocol.user_manager.v1.SubscribeRe"
    "sponse\"\006\202\371+\002\010\001\022g\n\020AddRecentPlayers\0225.bgs"
    ".protocol.user_manager.v1.AddRecentPlaye"
    "rsRequest\032\024.bgs.protocol.NoData\"\006\202\371+\002\010\n\022"
    "k\n\022ClearRecentPlayers\0227.bgs.protocol.use"
    "r_manager.v1.ClearRecentPlayersRequest\032\024"
    ".bgs.protocol.NoData\"\006\202\371+\002\010\013\022]\n\013BlockPla"
    "yer\0220.bgs.protocol.user_manager.v1.Block"
    "PlayerRequest\032\024.bgs.protocol.NoData\"\006\202\371+"
    "\002\010\024\022a\n\rUnblockPlayer\0222.bgs.protocol.user"
    "_manager.v1.UnblockPlayerRequest\032\024.bgs.p"
    "rotocol.NoData\"\006\202\371+\002\010\025\022g\n\025BlockPlayerFor"
    "Session\0220.bgs.protocol.user_manager.v1.B"
    "lockPlayerRequest\032\024.bgs.protocol.NoData\""
    "\006\202\371+\002\010(\022]\n\013Unsubscribe\0220.bgs.protocol.us"
    "er_manager.v1.UnsubscribeRequest\032\024.bgs.p"
    "rotocol.NoData\"\006\202\371+\002\0103\032I\202\371+\?\n-bnet.proto"
    "col.user_manager.UserManagerService*\014use"
    "r_manager0\001\212\371+\002\020\0012\273\004\n\023UserManagerListene"
    "r\022w\n\024OnBlockedPlayerAdded\022<.bgs.protocol"
    ".user_manager.v1.BlockedPlayerAddedNotif"
    "ication\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002"
    "\010\001\022{\n\026OnBlockedPlayerRemoved\022>.bgs.proto"
    "col.user_manager.v1.BlockedPlayerRemoved"
    "Notification\032\031.bgs.protocol.NO_RESPONSE\""
    "\006\202\371+\002\010\002\022w\n\024OnRecentPlayersAdded\022<.bgs.pr"
    "otocol.user_manager.v1.RecentPlayersAdde"
    "dNotification\032\031.bgs.protocol.NO_RESPONSE"
    "\"\006\202\371+\002\010\013\022{\n\026OnRecentPlayersRemoved\022>.bgs"
    ".protocol.user_manager.v1.RecentPlayersR"
    "emovedNotification\032\031.bgs.protocol.NO_RES"
    "PONSE\"\006\202\371+\002\010\014\0328\202\371+.\n,bnet.protocol.user_"
    "manager.UserManagerNotify\212\371+\002\010\001B\005H\002\200\001\000", 2958);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user_manager_service.proto", &protobuf_RegisterTypes);
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  SubscribeResponse::default_instance_ = new SubscribeResponse();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  AddRecentPlayersRequest::default_instance_ = new AddRecentPlayersRequest();
  ClearRecentPlayersRequest::default_instance_ = new ClearRecentPlayersRequest();
  BlockPlayerRequest::default_instance_ = new BlockPlayerRequest();
  UnblockPlayerRequest::default_instance_ = new UnblockPlayerRequest();
  BlockedPlayerAddedNotification::default_instance_ = new BlockedPlayerAddedNotification();
  BlockedPlayerRemovedNotification::default_instance_ = new BlockedPlayerRemovedNotification();
  RecentPlayersAddedNotification::default_instance_ = new RecentPlayersAddedNotification();
  RecentPlayersRemovedNotification::default_instance_ = new RecentPlayersRemovedNotification();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  SubscribeResponse::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  AddRecentPlayersRequest::default_instance_->InitAsDefaultInstance();
  ClearRecentPlayersRequest::default_instance_->InitAsDefaultInstance();
  BlockPlayerRequest::default_instance_->InitAsDefaultInstance();
  UnblockPlayerRequest::default_instance_->InitAsDefaultInstance();
  BlockedPlayerAddedNotification::default_instance_->InitAsDefaultInstance();
  BlockedPlayerRemovedNotification::default_instance_->InitAsDefaultInstance();
  RecentPlayersAddedNotification::default_instance_->InitAsDefaultInstance();
  RecentPlayersRemovedNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_user_5fmanager_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_user_5fmanager_5fservice_2eproto {
  StaticDescriptorInitializer_user_5fmanager_5fservice_2eproto() {
    protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  }
} static_descriptor_initializer_user_5fmanager_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kAgentIdFieldNumber;
const int SubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscribeResponse::kBlockedPlayersFieldNumber;
const int SubscribeResponse::kRecentPlayersFieldNumber;
#endif  // !_MSC_VER

SubscribeResponse::SubscribeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.SubscribeResponse)
}

void SubscribeResponse::InitAsDefaultInstance() {
}

SubscribeResponse::SubscribeResponse(const SubscribeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.SubscribeResponse)
}

void SubscribeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeResponse::~SubscribeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.SubscribeResponse)
  SharedDtor();
}

void SubscribeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeResponse_descriptor_;
}

const SubscribeResponse& SubscribeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

SubscribeResponse* SubscribeResponse::default_instance_ = NULL;

SubscribeResponse* SubscribeResponse::New() const {
  return new SubscribeResponse;
}

void SubscribeResponse::Swap(SubscribeResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeResponse_descriptor_;
  metadata.reflection = SubscribeResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kAgentIdFieldNumber;
const int UnsubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AddRecentPlayersRequest::kPlayersFieldNumber;
const int AddRecentPlayersRequest::kAgentIdFieldNumber;
const int AddRecentPlayersRequest::kProgramFieldNumber;
#endif  // !_MSC_VER

AddRecentPlayersRequest::AddRecentPlayersRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.AddRecentPlayersRequest)
}

void AddRecentPlayersRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

AddRecentPlayersRequest::AddRecentPlayersRequest(const AddRecentPlayersRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.AddRecentPlayersRequest)
}

void AddRecentPlayersRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  program_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddRecentPlayersRequest::~AddRecentPlayersRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.AddRecentPlayersRequest)
  SharedDtor();
}

void AddRecentPlayersRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AddRecentPlayersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRecentPlayersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddRecentPlayersRequest_descriptor_;
}

const AddRecentPlayersRequest& AddRecentPlayersRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

AddRecentPlayersRequest* AddRecentPlayersRequest::default_instance_ = NULL;

AddRecentPlayersRequest* AddRecentPlayersRequest::New() const {
  return new AddRecentPlayersRequest;
}

void AddRecentPlayersRequest::Swap(AddRecentPlayersRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AddRecentPlayersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddRecentPlayersRequest_descriptor_;
  metadata.reflection = AddRecentPlayersRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClearRecentPlayersRequest::kAgentIdFieldNumber;
const int ClearRecentPlayersRequest::kProgramFieldNumber;
#endif  // !_MSC_VER

ClearRecentPlayersRequest::ClearRecentPlayersRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.ClearRecentPlayersRequest)
}

void ClearRecentPlayersRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

ClearRecentPlayersRequest::ClearRecentPlayersRequest(const ClearRecentPlayersRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.ClearRecentPlayersRequest)
}

void ClearRecentPlayersRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  program_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClearRecentPlayersRequest::~ClearRecentPlayersRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.ClearRecentPlayersRequest)
  SharedDtor();
}

void ClearRecentPlayersRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void ClearRecentPlayersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearRecentPlayersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClearRecentPlayersRequest_descriptor_;
}

const ClearRecentPlayersRequest& ClearRecentPlayersRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

ClearRecentPlayersRequest* ClearRecentPlayersRequest::default_instance_ = NULL;

ClearRecentPlayersRequest* ClearRecentPlayersRequest::New() const {
  return new ClearRecentPlayersRequest;
}

void ClearRecentPlayersRequest::Swap(ClearRecentPlayersRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClearRecentPlayersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClearRecentPlayersRequest_descriptor_;
  metadata.reflection = ClearRecentPlayersRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockPlayerRequest::kAgentIdFieldNumber;
const int BlockPlayerRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

BlockPlayerRequest::BlockPlayerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.BlockPlayerRequest)
}

void BlockPlayerRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BlockPlayerRequest::BlockPlayerRequest(const BlockPlayerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.BlockPlayerRequest)
}

void BlockPlayerRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockPlayerRequest::~BlockPlayerRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.BlockPlayerRequest)
  SharedDtor();
}

void BlockPlayerRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void BlockPlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockPlayerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockPlayerRequest_descriptor_;
}

const BlockPlayerRequest& BlockPlayerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

BlockPlayerRequest* BlockPlayerRequest::default_instance_ = NULL;

BlockPlayerRequest* BlockPlayerRequest::New() const {
  return new BlockPlayerRequest;
}

void BlockPlayerRequest::Swap(BlockPlayerRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockPlayerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockPlayerRequest_descriptor_;
  metadata.reflection = BlockPlayerRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnblockPlayerRequest::kAgentIdFieldNumber;
const int UnblockPlayerRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

UnblockPlayerRequest::UnblockPlayerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.UnblockPlayerRequest)
}

void UnblockPlayerRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UnblockPlayerRequest::UnblockPlayerRequest(const UnblockPlayerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.UnblockPlayerRequest)
}

void UnblockPlayerRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnblockPlayerRequest::~UnblockPlayerRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.UnblockPlayerRequest)
  SharedDtor();
}

void UnblockPlayerRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void UnblockPlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockPlayerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnblockPlayerRequest_descriptor_;
}

const UnblockPlayerRequest& UnblockPlayerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

UnblockPlayerRequest* UnblockPlayerRequest::default_instance_ = NULL;

UnblockPlayerRequest* UnblockPlayerRequest::New() const {
  return new UnblockPlayerRequest;
}

void UnblockPlayerRequest::Swap(UnblockPlayerRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnblockPlayerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnblockPlayerRequest_descriptor_;
  metadata.reflection = UnblockPlayerRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockedPlayerAddedNotification::kPlayerFieldNumber;
const int BlockedPlayerAddedNotification::kGameAccountIdFieldNumber;
const int BlockedPlayerAddedNotification::kAccountIdFieldNumber;
#endif  // !_MSC_VER

BlockedPlayerAddedNotification::BlockedPlayerAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification)
}

void BlockedPlayerAddedNotification::InitAsDefaultInstance() {
  player_ = const_cast< ::bgs::protocol::user_manager::v1::BlockedPlayer*>(&::bgs::protocol::user_manager::v1::BlockedPlayer::default_instance());
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BlockedPlayerAddedNotification::BlockedPlayerAddedNotification(const BlockedPlayerAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification)
}

void BlockedPlayerAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
  game_account_id_ = NULL;
  account_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockedPlayerAddedNotification::~BlockedPlayerAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification)
  SharedDtor();
}

void BlockedPlayerAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
    delete game_account_id_;
    delete account_id_;
  }
}

void BlockedPlayerAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockedPlayerAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockedPlayerAddedNotification_descriptor_;
}

const BlockedPlayerAddedNotification& BlockedPlayerAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

BlockedPlayerAddedNotification* BlockedPlayerAddedNotification::default_instance_ = NULL;

BlockedPlayerAddedNotification* BlockedPlayerAddedNotification::New() const {
  return new BlockedPlayerAddedNotification;
}

void BlockedPlayerAddedNotification::Swap(BlockedPlayerAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockedPlayerAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockedPlayerAddedNotification_descriptor_;
  metadata.reflection = BlockedPlayerAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockedPlayerRemovedNotification::kPlayerFieldNumber;
const int BlockedPlayerRemovedNotification::kGameAccountIdFieldNumber;
const int BlockedPlayerRemovedNotification::kAccountIdFieldNumber;
#endif  // !_MSC_VER

BlockedPlayerRemovedNotification::BlockedPlayerRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification)
}

void BlockedPlayerRemovedNotification::InitAsDefaultInstance() {
  player_ = const_cast< ::bgs::protocol::user_manager::v1::BlockedPlayer*>(&::bgs::protocol::user_manager::v1::BlockedPlayer::default_instance());
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

BlockedPlayerRemovedNotification::BlockedPlayerRemovedNotification(const BlockedPlayerRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification)
}

void BlockedPlayerRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
  game_account_id_ = NULL;
  account_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockedPlayerRemovedNotification::~BlockedPlayerRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification)
  SharedDtor();
}

void BlockedPlayerRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
    delete game_account_id_;
    delete account_id_;
  }
}

void BlockedPlayerRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockedPlayerRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockedPlayerRemovedNotification_descriptor_;
}

const BlockedPlayerRemovedNotification& BlockedPlayerRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

BlockedPlayerRemovedNotification* BlockedPlayerRemovedNotification::default_instance_ = NULL;

BlockedPlayerRemovedNotification* BlockedPlayerRemovedNotification::New() const {
  return new BlockedPlayerRemovedNotification;
}

void BlockedPlayerRemovedNotification::Swap(BlockedPlayerRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockedPlayerRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockedPlayerRemovedNotification_descriptor_;
  metadata.reflection = BlockedPlayerRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RecentPlayersAddedNotification::kPlayerFieldNumber;
#endif  // !_MSC_VER

RecentPlayersAddedNotification::RecentPlayersAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.RecentPlayersAddedNotification)
}

void RecentPlayersAddedNotification::InitAsDefaultInstance() {
}

RecentPlayersAddedNotification::RecentPlayersAddedNotification(const RecentPlayersAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.RecentPlayersAddedNotification)
}

void RecentPlayersAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecentPlayersAddedNotification::~RecentPlayersAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.RecentPlayersAddedNotification)
  SharedDtor();
}

void RecentPlayersAddedNotification::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecentPlayersAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecentPlayersAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecentPlayersAddedNotification_descriptor_;
}

const RecentPlayersAddedNotification& RecentPlayersAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

RecentPlayersAddedNotification* RecentPlayersAddedNotification::default_instance_ = NULL;

RecentPlayersAddedNotification* RecentPlayersAddedNotification::New() const {
  return new RecentPlayersAddedNotification;
}

void RecentPlayersAddedNotification::Swap(RecentPlayersAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RecentPlayersAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecentPlayersAddedNotification_descriptor_;
  metadata.reflection = RecentPlayersAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RecentPlayersRemovedNotification::kPlayerFieldNumber;
#endif  // !_MSC_VER

RecentPlayersRemovedNotification::RecentPlayersRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification)
}

void RecentPlayersRemovedNotification::InitAsDefaultInstance() {
}

RecentPlayersRemovedNotification::RecentPlayersRemovedNotification(const RecentPlayersRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification)
}

void RecentPlayersRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecentPlayersRemovedNotification::~RecentPlayersRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification)
  SharedDtor();
}

void RecentPlayersRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecentPlayersRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecentPlayersRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecentPlayersRemovedNotification_descriptor_;
}

const RecentPlayersRemovedNotification& RecentPlayersRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_5fmanager_5fservice_2eproto();
  return *default_instance_;
}

RecentPlayersRemovedNotification* RecentPlayersRemovedNotification::default_instance_ = NULL;

RecentPlayersRemovedNotification* RecentPlayersRemovedNotification::New() const {
  return new RecentPlayersRemovedNotification;
}

void RecentPlayersRemovedNotification::Swap(RecentPlayersRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RecentPlayersRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecentPlayersRemovedNotification_descriptor_;
  metadata.reflection = RecentPlayersRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

UserManagerService::UserManagerService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

UserManagerService::~UserManagerService() {
}

google::protobuf::ServiceDescriptor const* UserManagerService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserManagerService_descriptor_;
}

void UserManagerService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 1:
      ParseAndHandleSubscribe(token, methodId, buffer);
      break;
    case 10:
      ParseAndHandleAddRecentPlayers(token, methodId, buffer);
      break;
    case 11:
      ParseAndHandleClearRecentPlayers(token, methodId, buffer);
      break;
    case 20:
      ParseAndHandleBlockPlayer(token, methodId, buffer);
      break;
    case 21:
      ParseAndHandleUnblockPlayer(token, methodId, buffer);
      break;
    case 40:
      ParseAndHandleBlockPlayerForSession(token, methodId, buffer);
      break;
    case 51:
      ParseAndHandleUnsubscribe(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 UserManagerService::HandleSubscribe(::bgs::protocol::user_manager::v1::SubscribeRequest const* request, ::bgs::protocol::user_manager::v1::SubscribeResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.Subscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleAddRecentPlayers(::bgs::protocol::user_manager::v1::AddRecentPlayersRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.AddRecentPlayers", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleClearRecentPlayers(::bgs::protocol::user_manager::v1::ClearRecentPlayersRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.ClearRecentPlayers", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleBlockPlayer(::bgs::protocol::user_manager::v1::BlockPlayerRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.BlockPlayer", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleUnblockPlayer(::bgs::protocol::user_manager::v1::UnblockPlayerRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.UnblockPlayer", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleBlockPlayerForSession(::bgs::protocol::user_manager::v1::BlockPlayerRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.BlockPlayerForSession", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 UserManagerService::HandleUnsubscribe(::bgs::protocol::user_manager::v1::UnsubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("UserManagerService.Unsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void UserManagerService::ParseAndHandleSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::SubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.Subscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.Subscribe", "bgs.protocol.user_manager.v1.SubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.Subscribe", ::bgs::protocol::user_manager::v1::SubscribeResponse::descriptor());
  ::bgs::protocol::user_manager::v1::SubscribeResponse response;
  uint32 status = HandleSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleAddRecentPlayers(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::AddRecentPlayersRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.AddRecentPlayers");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.AddRecentPlayers", "bgs.protocol.user_manager.v1.AddRecentPlayersRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.AddRecentPlayers", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleAddRecentPlayers(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleClearRecentPlayers(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::ClearRecentPlayersRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.ClearRecentPlayers");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.ClearRecentPlayers", "bgs.protocol.user_manager.v1.ClearRecentPlayersRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.ClearRecentPlayers", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleClearRecentPlayers(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleBlockPlayer(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::BlockPlayerRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.BlockPlayer");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.BlockPlayer", "bgs.protocol.user_manager.v1.BlockPlayerRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.BlockPlayer", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleBlockPlayer(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleUnblockPlayer(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::UnblockPlayerRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.UnblockPlayer");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.UnblockPlayer", "bgs.protocol.user_manager.v1.UnblockPlayerRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.UnblockPlayer", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnblockPlayer(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleBlockPlayerForSession(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::BlockPlayerRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.BlockPlayerForSession");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.BlockPlayerForSession", "bgs.protocol.user_manager.v1.BlockPlayerRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.BlockPlayerForSession", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleBlockPlayerForSession(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void UserManagerService::ParseAndHandleUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::user_manager::v1::UnsubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("UserManagerService.Unsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("UserManagerService.Unsubscribe", "bgs.protocol.user_manager.v1.UnsubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "UserManagerService.Unsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

// ===================================================================

UserManagerListener::UserManagerListener(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

UserManagerListener::~UserManagerListener() {
}

google::protobuf::ServiceDescriptor const* UserManagerListener::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserManagerListener_descriptor_;
}

void UserManagerListener::OnBlockedPlayerAdded(::bgs::protocol::user_manager::v1::BlockedPlayerAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("UserManagerListener.OnBlockedPlayerAdded", "bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification", request);
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void UserManagerListener::OnBlockedPlayerRemoved(::bgs::protocol::user_manager::v1::BlockedPlayerRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("UserManagerListener.OnBlockedPlayerRemoved", "bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification", request);
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void UserManagerListener::OnRecentPlayersAdded(::bgs::protocol::user_manager::v1::RecentPlayersAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("UserManagerListener.OnRecentPlayersAdded", "bgs.protocol.user_manager.v1.RecentPlayersAddedNotification", request);
  SendRequest(service_hash_, 11 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void UserManagerListener::OnRecentPlayersRemoved(::bgs::protocol::user_manager::v1::RecentPlayersRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("UserManagerListener.OnRecentPlayersRemoved", "bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification", request);
  SendRequest(service_hash_, 12 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void UserManagerListener::CallServerMethod(uint32 /*token*/, uint32 methodId, MessageBuffer /*buffer*/) {
  LogDisallowedMethod(methodId);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace user_manager
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
