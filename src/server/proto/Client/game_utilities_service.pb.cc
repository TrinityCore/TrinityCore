// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_utilities_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_utilities_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ClientRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PresenceChannelCreatedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PresenceChannelCreatedRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountOnlineNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountOnlineNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountOfflineNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountOfflineNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAllValuesForAttributeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAllValuesForAttributeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAllValuesForAttributeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAllValuesForAttributeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterUtilitiesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterUtilitiesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterUtilitiesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterUtilitiesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnregisterUtilitiesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnregisterUtilitiesRequest_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* GameUtilitiesService_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_game_5futilities_5fservice_2eproto() {
  protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_utilities_service.proto");
  GOOGLE_CHECK(file != NULL);
  ClientRequest_descriptor_ = file->message_type(0);
  static const int ClientRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, client_info_),
  };
  ClientRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientRequest_descriptor_,
      ClientRequest::default_instance_,
      ClientRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientRequest));
  ClientResponse_descriptor_ = file->message_type(1);
  static const int ClientResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientResponse, attribute_),
  };
  ClientResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientResponse_descriptor_,
      ClientResponse::default_instance_,
      ClientResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientResponse));
  ServerRequest_descriptor_ = file->message_type(2);
  static const int ServerRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRequest, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRequest, host_),
  };
  ServerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRequest_descriptor_,
      ServerRequest::default_instance_,
      ServerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRequest));
  ServerResponse_descriptor_ = file->message_type(3);
  static const int ServerResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResponse, attribute_),
  };
  ServerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerResponse_descriptor_,
      ServerResponse::default_instance_,
      ServerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerResponse));
  PresenceChannelCreatedRequest_descriptor_ = file->message_type(4);
  static const int PresenceChannelCreatedRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, host_),
  };
  PresenceChannelCreatedRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PresenceChannelCreatedRequest_descriptor_,
      PresenceChannelCreatedRequest::default_instance_,
      PresenceChannelCreatedRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PresenceChannelCreatedRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PresenceChannelCreatedRequest));
  GameAccountOnlineNotification_descriptor_ = file->message_type(5);
  static const int GameAccountOnlineNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOnlineNotification, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOnlineNotification, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOnlineNotification, session_id_),
  };
  GameAccountOnlineNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountOnlineNotification_descriptor_,
      GameAccountOnlineNotification::default_instance_,
      GameAccountOnlineNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOnlineNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOnlineNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountOnlineNotification));
  GameAccountOfflineNotification_descriptor_ = file->message_type(6);
  static const int GameAccountOfflineNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOfflineNotification, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOfflineNotification, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOfflineNotification, session_id_),
  };
  GameAccountOfflineNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountOfflineNotification_descriptor_,
      GameAccountOfflineNotification::default_instance_,
      GameAccountOfflineNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOfflineNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountOfflineNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountOfflineNotification));
  GetAllValuesForAttributeRequest_descriptor_ = file->message_type(7);
  static const int GetAllValuesForAttributeRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeRequest, attribute_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeRequest, program_),
  };
  GetAllValuesForAttributeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAllValuesForAttributeRequest_descriptor_,
      GetAllValuesForAttributeRequest::default_instance_,
      GetAllValuesForAttributeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAllValuesForAttributeRequest));
  GetAllValuesForAttributeResponse_descriptor_ = file->message_type(8);
  static const int GetAllValuesForAttributeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeResponse, attribute_value_),
  };
  GetAllValuesForAttributeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAllValuesForAttributeResponse_descriptor_,
      GetAllValuesForAttributeResponse::default_instance_,
      GetAllValuesForAttributeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllValuesForAttributeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAllValuesForAttributeResponse));
  RegisterUtilitiesRequest_descriptor_ = file->message_type(9);
  static const int RegisterUtilitiesRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesRequest, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesRequest, program_),
  };
  RegisterUtilitiesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegisterUtilitiesRequest_descriptor_,
      RegisterUtilitiesRequest::default_instance_,
      RegisterUtilitiesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegisterUtilitiesRequest));
  RegisterUtilitiesResponse_descriptor_ = file->message_type(10);
  static const int RegisterUtilitiesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesResponse, client_id_),
  };
  RegisterUtilitiesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegisterUtilitiesResponse_descriptor_,
      RegisterUtilitiesResponse::default_instance_,
      RegisterUtilitiesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterUtilitiesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegisterUtilitiesResponse));
  UnregisterUtilitiesRequest_descriptor_ = file->message_type(11);
  static const int UnregisterUtilitiesRequest_offsets_[1] = {
  };
  UnregisterUtilitiesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnregisterUtilitiesRequest_descriptor_,
      UnregisterUtilitiesRequest::default_instance_,
      UnregisterUtilitiesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterUtilitiesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnregisterUtilitiesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnregisterUtilitiesRequest));
  GameUtilitiesService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5futilities_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientRequest_descriptor_, &ClientRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientResponse_descriptor_, &ClientResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRequest_descriptor_, &ServerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerResponse_descriptor_, &ServerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PresenceChannelCreatedRequest_descriptor_, &PresenceChannelCreatedRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountOnlineNotification_descriptor_, &GameAccountOnlineNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountOfflineNotification_descriptor_, &GameAccountOfflineNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAllValuesForAttributeRequest_descriptor_, &GetAllValuesForAttributeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAllValuesForAttributeResponse_descriptor_, &GetAllValuesForAttributeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegisterUtilitiesRequest_descriptor_, &RegisterUtilitiesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegisterUtilitiesResponse_descriptor_, &RegisterUtilitiesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnregisterUtilitiesRequest_descriptor_, &UnregisterUtilitiesRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_5futilities_5fservice_2eproto() {
  delete ClientRequest::default_instance_;
  delete ClientRequest_reflection_;
  delete ClientResponse::default_instance_;
  delete ClientResponse_reflection_;
  delete ServerRequest::default_instance_;
  delete ServerRequest_reflection_;
  delete ServerResponse::default_instance_;
  delete ServerResponse_reflection_;
  delete PresenceChannelCreatedRequest::default_instance_;
  delete PresenceChannelCreatedRequest_reflection_;
  delete GameAccountOnlineNotification::default_instance_;
  delete GameAccountOnlineNotification_reflection_;
  delete GameAccountOfflineNotification::default_instance_;
  delete GameAccountOfflineNotification_reflection_;
  delete GetAllValuesForAttributeRequest::default_instance_;
  delete GetAllValuesForAttributeRequest_reflection_;
  delete GetAllValuesForAttributeResponse::default_instance_;
  delete GetAllValuesForAttributeResponse_reflection_;
  delete RegisterUtilitiesRequest::default_instance_;
  delete RegisterUtilitiesRequest_reflection_;
  delete RegisterUtilitiesResponse::default_instance_;
  delete RegisterUtilitiesResponse_reflection_;
  delete UnregisterUtilitiesRequest::default_instance_;
  delete UnregisterUtilitiesRequest_reflection_;
}

void protobuf_AddDesc_game_5futilities_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_attribute_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::game_utilities::v1::protobuf_AddDesc_game_5futilities_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034game_utilities_service.proto\022\036bgs.prot"
    "ocol.game_utilities.v1\032\025attribute_types."
    "proto\032\022entity_types.proto\032\032game_utilitie"
    "s_types.proto\032\017rpc_types.proto\"\235\002\n\rClien"
    "tRequest\022*\n\tattribute\030\001 \003(\0132\027.bgs.protoc"
    "ol.Attribute\022)\n\004host\030\002 \001(\0132\027.bgs.protoco"
    "l.ProcessIdB\002\030\001\022*\n\naccount_id\030\003 \001(\0132\026.bg"
    "s.protocol.EntityId\022/\n\017game_account_id\030\004"
    " \001(\0132\026.bgs.protocol.EntityId\022\017\n\007program\030"
    "\005 \001(\007\022\?\n\013client_info\030\006 \001(\0132*.bgs.protoco"
    "l.game_utilities.v1.ClientInfo:\006\202\371+\002\010\001\"<"
    "\n\016ClientResponse\022*\n\tattribute\030\001 \003(\0132\027.bg"
    "s.protocol.Attribute\"w\n\rServerRequest\022*\n"
    "\tattribute\030\001 \003(\0132\027.bgs.protocol.Attribut"
    "e\022\017\n\007program\030\002 \002(\007\022)\n\004host\030\003 \001(\0132\027.bgs.p"
    "rotocol.ProcessIdB\002\030\001\"<\n\016ServerResponse\022"
    "*\n\tattribute\030\001 \003(\0132\027.bgs.protocol.Attrib"
    "ute\"\313\001\n\035PresenceChannelCreatedRequest\022\"\n"
    "\002id\030\001 \002(\0132\026.bgs.protocol.EntityId\022/\n\017gam"
    "e_account_id\030\003 \001(\0132\026.bgs.protocol.Entity"
    "Id\022*\n\naccount_id\030\004 \001(\0132\026.bgs.protocol.En"
    "tityId\022)\n\004host\030\005 \001(\0132\027.bgs.protocol.Proc"
    "essIdB\002\030\001\"\217\001\n\035GameAccountOnlineNotificat"
    "ion\022/\n\017game_account_id\030\001 \002(\0132\026.bgs.proto"
    "col.EntityId\022)\n\004host\030\002 \001(\0132\027.bgs.protoco"
    "l.ProcessIdB\002\030\001\022\022\n\nsession_id\030\003 \001(\t\"\220\001\n\036"
    "GameAccountOfflineNotification\022/\n\017game_a"
    "ccount_id\030\001 \002(\0132\026.bgs.protocol.EntityId\022"
    ")\n\004host\030\002 \001(\0132\027.bgs.protocol.ProcessIdB\002"
    "\030\001\022\022\n\nsession_id\030\003 \001(\t\"\212\001\n\037GetAllValuesF"
    "orAttributeRequest\022$\n\rattribute_key\030\001 \001("
    "\tB\r\212\371+\t\"\007\n\005\010\001\020\200\002\022(\n\010agent_id\030\002 \001(\0132\026.bgs"
    ".protocol.EntityId\022\017\n\007program\030\005 \001(\007:\006\202\371+"
    "\002\010\001\"R\n GetAllValuesForAttributeResponse\022"
    ".\n\017attribute_value\030\001 \003(\0132\025.bgs.protocol."
    "Variant\"a\n\030RegisterUtilitiesRequest\022*\n\ta"
    "ttribute\030\001 \003(\0132\027.bgs.protocol.Attribute\022"
    "\031\n\007program\030\002 \001(\007B\010\212\371+\004\022\002\020\000\".\n\031RegisterUt"
    "ilitiesResponse\022\021\n\tclient_id\030\001 \001(\t\"\034\n\032Un"
    "registerUtilitiesRequest2\376\010\n\024GameUtiliti"
    "esService\022}\n\024ProcessClientRequest\022-.bgs."
    "protocol.game_utilities.v1.ClientRequest"
    "\032..bgs.protocol.game_utilities.v1.Client"
    "Response\"\006\202\371+\002\010\001\022u\n\026PresenceChannelCreat"
    "ed\022=.bgs.protocol.game_utilities.v1.Pres"
    "enceChannelCreatedRequest\032\024.bgs.protocol"
    ".NoData\"\006\202\371+\002\010\002\022}\n\024ProcessServerRequest\022"
    "-.bgs.protocol.game_utilities.v1.ServerR"
    "equest\032..bgs.protocol.game_utilities.v1."
    "ServerResponse\"\006\202\371+\002\010\006\022w\n\023OnGameAccountO"
    "nline\022=.bgs.protocol.game_utilities.v1.G"
    "ameAccountOnlineNotification\032\031.bgs.proto"
    "col.NO_RESPONSE\"\006\202\371+\002\010\007\022y\n\024OnGameAccount"
    "Offline\022>.bgs.protocol.game_utilities.v1"
    ".GameAccountOfflineNotification\032\031.bgs.pr"
    "otocol.NO_RESPONSE\"\006\202\371+\002\010\010\022\245\001\n\030GetAllVal"
    "uesForAttribute\022\?.bgs.protocol.game_util"
    "ities.v1.GetAllValuesForAttributeRequest"
    "\032@.bgs.protocol.game_utilities.v1.GetAll"
    "ValuesForAttributeResponse\"\006\202\371+\002\010\n\022\222\001\n\021R"
    "egisterUtilities\0228.bgs.protocol.game_uti"
    "lities.v1.RegisterUtilitiesRequest\0329.bgs"
    ".protocol.game_utilities.v1.RegisterUtil"
    "itiesResponse\"\010\202\371+\004\010\013\020\003\022v\n\023UnregisterUti"
    "lities\022:.bgs.protocol.game_utilities.v1."
    "UnregisterUtilitiesRequest\032\031.bgs.protoco"
    "l.NO_RESPONSE\"\010\202\371+\004\010\014\020\003\032H\202\371+<\n*bnet.prot"
    "ocol.game_utilities.GameUtilities*\016game_"
    "utilities\212\371+\004\010\001\020\001BD\n\037bnet.protocol.game_"
    "utilities.v1B\031GameUtilitiesServiceProtoH"
    "\002\200\001\000\210\001\001", 2807);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_utilities_service.proto", &protobuf_RegisterTypes);
  ClientRequest::default_instance_ = new ClientRequest();
  ClientResponse::default_instance_ = new ClientResponse();
  ServerRequest::default_instance_ = new ServerRequest();
  ServerResponse::default_instance_ = new ServerResponse();
  PresenceChannelCreatedRequest::default_instance_ = new PresenceChannelCreatedRequest();
  GameAccountOnlineNotification::default_instance_ = new GameAccountOnlineNotification();
  GameAccountOfflineNotification::default_instance_ = new GameAccountOfflineNotification();
  GetAllValuesForAttributeRequest::default_instance_ = new GetAllValuesForAttributeRequest();
  GetAllValuesForAttributeResponse::default_instance_ = new GetAllValuesForAttributeResponse();
  RegisterUtilitiesRequest::default_instance_ = new RegisterUtilitiesRequest();
  RegisterUtilitiesResponse::default_instance_ = new RegisterUtilitiesResponse();
  UnregisterUtilitiesRequest::default_instance_ = new UnregisterUtilitiesRequest();
  ClientRequest::default_instance_->InitAsDefaultInstance();
  ClientResponse::default_instance_->InitAsDefaultInstance();
  ServerRequest::default_instance_->InitAsDefaultInstance();
  ServerResponse::default_instance_->InitAsDefaultInstance();
  PresenceChannelCreatedRequest::default_instance_->InitAsDefaultInstance();
  GameAccountOnlineNotification::default_instance_->InitAsDefaultInstance();
  GameAccountOfflineNotification::default_instance_->InitAsDefaultInstance();
  GetAllValuesForAttributeRequest::default_instance_->InitAsDefaultInstance();
  GetAllValuesForAttributeResponse::default_instance_->InitAsDefaultInstance();
  RegisterUtilitiesRequest::default_instance_->InitAsDefaultInstance();
  RegisterUtilitiesResponse::default_instance_->InitAsDefaultInstance();
  UnregisterUtilitiesRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5futilities_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5futilities_5fservice_2eproto {
  StaticDescriptorInitializer_game_5futilities_5fservice_2eproto() {
    protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  }
} static_descriptor_initializer_game_5futilities_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int ClientRequest::kAttributeFieldNumber;
const int ClientRequest::kHostFieldNumber;
const int ClientRequest::kAccountIdFieldNumber;
const int ClientRequest::kGameAccountIdFieldNumber;
const int ClientRequest::kProgramFieldNumber;
const int ClientRequest::kClientInfoFieldNumber;
#endif  // !_MSC_VER

ClientRequest::ClientRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ClientRequest)
}

void ClientRequest::InitAsDefaultInstance() {
  host_ = const_cast< ::bgs::protocol::ProcessId*>(&::bgs::protocol::ProcessId::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  client_info_ = const_cast< ::bgs::protocol::game_utilities::v1::ClientInfo*>(&::bgs::protocol::game_utilities::v1::ClientInfo::default_instance());
}

ClientRequest::ClientRequest(const ClientRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ClientRequest)
}

void ClientRequest::SharedCtor() {
  _cached_size_ = 0;
  host_ = NULL;
  account_id_ = NULL;
  game_account_id_ = NULL;
  program_ = 0u;
  client_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ClientRequest)
  SharedDtor();
}

void ClientRequest::SharedDtor() {
  if (this != default_instance_) {
    delete host_;
    delete account_id_;
    delete game_account_id_;
    delete client_info_;
  }
}

void ClientRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientRequest_descriptor_;
}

const ClientRequest& ClientRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

ClientRequest* ClientRequest::default_instance_ = NULL;

ClientRequest* ClientRequest::New() const {
  return new ClientRequest;
}

void ClientRequest::Swap(ClientRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClientRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientRequest_descriptor_;
  metadata.reflection = ClientRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClientResponse::kAttributeFieldNumber;
#endif  // !_MSC_VER

ClientResponse::ClientResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ClientResponse)
}

void ClientResponse::InitAsDefaultInstance() {
}

ClientResponse::ClientResponse(const ClientResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ClientResponse)
}

void ClientResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientResponse::~ClientResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ClientResponse)
  SharedDtor();
}

void ClientResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientResponse_descriptor_;
}

const ClientResponse& ClientResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

ClientResponse* ClientResponse::default_instance_ = NULL;

ClientResponse* ClientResponse::New() const {
  return new ClientResponse;
}

void ClientResponse::Swap(ClientResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClientResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientResponse_descriptor_;
  metadata.reflection = ClientResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ServerRequest::kAttributeFieldNumber;
const int ServerRequest::kProgramFieldNumber;
const int ServerRequest::kHostFieldNumber;
#endif  // !_MSC_VER

ServerRequest::ServerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ServerRequest)
}

void ServerRequest::InitAsDefaultInstance() {
  host_ = const_cast< ::bgs::protocol::ProcessId*>(&::bgs::protocol::ProcessId::default_instance());
}

ServerRequest::ServerRequest(const ServerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ServerRequest)
}

void ServerRequest::SharedCtor() {
  _cached_size_ = 0;
  program_ = 0u;
  host_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRequest::~ServerRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ServerRequest)
  SharedDtor();
}

void ServerRequest::SharedDtor() {
  if (this != default_instance_) {
    delete host_;
  }
}

void ServerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRequest_descriptor_;
}

const ServerRequest& ServerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

ServerRequest* ServerRequest::default_instance_ = NULL;

ServerRequest* ServerRequest::New() const {
  return new ServerRequest;
}

void ServerRequest::Swap(ServerRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ServerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRequest_descriptor_;
  metadata.reflection = ServerRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ServerResponse::kAttributeFieldNumber;
#endif  // !_MSC_VER

ServerResponse::ServerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ServerResponse)
}

void ServerResponse::InitAsDefaultInstance() {
}

ServerResponse::ServerResponse(const ServerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ServerResponse)
}

void ServerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ServerResponse)
  SharedDtor();
}

void ServerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerResponse_descriptor_;
}

const ServerResponse& ServerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

ServerResponse* ServerResponse::default_instance_ = NULL;

ServerResponse* ServerResponse::New() const {
  return new ServerResponse;
}

void ServerResponse::Swap(ServerResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ServerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerResponse_descriptor_;
  metadata.reflection = ServerResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int PresenceChannelCreatedRequest::kIdFieldNumber;
const int PresenceChannelCreatedRequest::kGameAccountIdFieldNumber;
const int PresenceChannelCreatedRequest::kAccountIdFieldNumber;
const int PresenceChannelCreatedRequest::kHostFieldNumber;
#endif  // !_MSC_VER

PresenceChannelCreatedRequest::PresenceChannelCreatedRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
}

void PresenceChannelCreatedRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  host_ = const_cast< ::bgs::protocol::ProcessId*>(&::bgs::protocol::ProcessId::default_instance());
}

PresenceChannelCreatedRequest::PresenceChannelCreatedRequest(const PresenceChannelCreatedRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
}

void PresenceChannelCreatedRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  game_account_id_ = NULL;
  account_id_ = NULL;
  host_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PresenceChannelCreatedRequest::~PresenceChannelCreatedRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  SharedDtor();
}

void PresenceChannelCreatedRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
    delete game_account_id_;
    delete account_id_;
    delete host_;
  }
}

void PresenceChannelCreatedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PresenceChannelCreatedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PresenceChannelCreatedRequest_descriptor_;
}

const PresenceChannelCreatedRequest& PresenceChannelCreatedRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

PresenceChannelCreatedRequest* PresenceChannelCreatedRequest::default_instance_ = NULL;

PresenceChannelCreatedRequest* PresenceChannelCreatedRequest::New() const {
  return new PresenceChannelCreatedRequest;
}

void PresenceChannelCreatedRequest::Swap(PresenceChannelCreatedRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata PresenceChannelCreatedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PresenceChannelCreatedRequest_descriptor_;
  metadata.reflection = PresenceChannelCreatedRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountOnlineNotification::kGameAccountIdFieldNumber;
const int GameAccountOnlineNotification::kHostFieldNumber;
const int GameAccountOnlineNotification::kSessionIdFieldNumber;
#endif  // !_MSC_VER

GameAccountOnlineNotification::GameAccountOnlineNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
}

void GameAccountOnlineNotification::InitAsDefaultInstance() {
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  host_ = const_cast< ::bgs::protocol::ProcessId*>(&::bgs::protocol::ProcessId::default_instance());
}

GameAccountOnlineNotification::GameAccountOnlineNotification(const GameAccountOnlineNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
}

void GameAccountOnlineNotification::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  game_account_id_ = NULL;
  host_ = NULL;
  session_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountOnlineNotification::~GameAccountOnlineNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  SharedDtor();
}

void GameAccountOnlineNotification::SharedDtor() {
  if (session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_id_;
  }
  if (this != default_instance_) {
    delete game_account_id_;
    delete host_;
  }
}

void GameAccountOnlineNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountOnlineNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountOnlineNotification_descriptor_;
}

const GameAccountOnlineNotification& GameAccountOnlineNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

GameAccountOnlineNotification* GameAccountOnlineNotification::default_instance_ = NULL;

GameAccountOnlineNotification* GameAccountOnlineNotification::New() const {
  return new GameAccountOnlineNotification;
}

void GameAccountOnlineNotification::Swap(GameAccountOnlineNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountOnlineNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountOnlineNotification_descriptor_;
  metadata.reflection = GameAccountOnlineNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountOfflineNotification::kGameAccountIdFieldNumber;
const int GameAccountOfflineNotification::kHostFieldNumber;
const int GameAccountOfflineNotification::kSessionIdFieldNumber;
#endif  // !_MSC_VER

GameAccountOfflineNotification::GameAccountOfflineNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
}

void GameAccountOfflineNotification::InitAsDefaultInstance() {
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  host_ = const_cast< ::bgs::protocol::ProcessId*>(&::bgs::protocol::ProcessId::default_instance());
}

GameAccountOfflineNotification::GameAccountOfflineNotification(const GameAccountOfflineNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
}

void GameAccountOfflineNotification::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  game_account_id_ = NULL;
  host_ = NULL;
  session_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountOfflineNotification::~GameAccountOfflineNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  SharedDtor();
}

void GameAccountOfflineNotification::SharedDtor() {
  if (session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_id_;
  }
  if (this != default_instance_) {
    delete game_account_id_;
    delete host_;
  }
}

void GameAccountOfflineNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountOfflineNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountOfflineNotification_descriptor_;
}

const GameAccountOfflineNotification& GameAccountOfflineNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

GameAccountOfflineNotification* GameAccountOfflineNotification::default_instance_ = NULL;

GameAccountOfflineNotification* GameAccountOfflineNotification::New() const {
  return new GameAccountOfflineNotification;
}

void GameAccountOfflineNotification::Swap(GameAccountOfflineNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountOfflineNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountOfflineNotification_descriptor_;
  metadata.reflection = GameAccountOfflineNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAllValuesForAttributeRequest::kAttributeKeyFieldNumber;
const int GetAllValuesForAttributeRequest::kAgentIdFieldNumber;
const int GetAllValuesForAttributeRequest::kProgramFieldNumber;
#endif  // !_MSC_VER

GetAllValuesForAttributeRequest::GetAllValuesForAttributeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
}

void GetAllValuesForAttributeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetAllValuesForAttributeRequest::GetAllValuesForAttributeRequest(const GetAllValuesForAttributeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
}

void GetAllValuesForAttributeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  attribute_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_id_ = NULL;
  program_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAllValuesForAttributeRequest::~GetAllValuesForAttributeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  SharedDtor();
}

void GetAllValuesForAttributeRequest::SharedDtor() {
  if (attribute_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attribute_key_;
  }
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetAllValuesForAttributeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllValuesForAttributeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAllValuesForAttributeRequest_descriptor_;
}

const GetAllValuesForAttributeRequest& GetAllValuesForAttributeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

GetAllValuesForAttributeRequest* GetAllValuesForAttributeRequest::default_instance_ = NULL;

GetAllValuesForAttributeRequest* GetAllValuesForAttributeRequest::New() const {
  return new GetAllValuesForAttributeRequest;
}

void GetAllValuesForAttributeRequest::Swap(GetAllValuesForAttributeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAllValuesForAttributeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAllValuesForAttributeRequest_descriptor_;
  metadata.reflection = GetAllValuesForAttributeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAllValuesForAttributeResponse::kAttributeValueFieldNumber;
#endif  // !_MSC_VER

GetAllValuesForAttributeResponse::GetAllValuesForAttributeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
}

void GetAllValuesForAttributeResponse::InitAsDefaultInstance() {
}

GetAllValuesForAttributeResponse::GetAllValuesForAttributeResponse(const GetAllValuesForAttributeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
}

void GetAllValuesForAttributeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAllValuesForAttributeResponse::~GetAllValuesForAttributeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  SharedDtor();
}

void GetAllValuesForAttributeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAllValuesForAttributeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllValuesForAttributeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAllValuesForAttributeResponse_descriptor_;
}

const GetAllValuesForAttributeResponse& GetAllValuesForAttributeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

GetAllValuesForAttributeResponse* GetAllValuesForAttributeResponse::default_instance_ = NULL;

GetAllValuesForAttributeResponse* GetAllValuesForAttributeResponse::New() const {
  return new GetAllValuesForAttributeResponse;
}

void GetAllValuesForAttributeResponse::Swap(GetAllValuesForAttributeResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAllValuesForAttributeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAllValuesForAttributeResponse_descriptor_;
  metadata.reflection = GetAllValuesForAttributeResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RegisterUtilitiesRequest::kAttributeFieldNumber;
const int RegisterUtilitiesRequest::kProgramFieldNumber;
#endif  // !_MSC_VER

RegisterUtilitiesRequest::RegisterUtilitiesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
}

void RegisterUtilitiesRequest::InitAsDefaultInstance() {
}

RegisterUtilitiesRequest::RegisterUtilitiesRequest(const RegisterUtilitiesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
}

void RegisterUtilitiesRequest::SharedCtor() {
  _cached_size_ = 0;
  program_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterUtilitiesRequest::~RegisterUtilitiesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  SharedDtor();
}

void RegisterUtilitiesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RegisterUtilitiesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUtilitiesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterUtilitiesRequest_descriptor_;
}

const RegisterUtilitiesRequest& RegisterUtilitiesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

RegisterUtilitiesRequest* RegisterUtilitiesRequest::default_instance_ = NULL;

RegisterUtilitiesRequest* RegisterUtilitiesRequest::New() const {
  return new RegisterUtilitiesRequest;
}

void RegisterUtilitiesRequest::Swap(RegisterUtilitiesRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RegisterUtilitiesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterUtilitiesRequest_descriptor_;
  metadata.reflection = RegisterUtilitiesRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RegisterUtilitiesResponse::kClientIdFieldNumber;
#endif  // !_MSC_VER

RegisterUtilitiesResponse::RegisterUtilitiesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
}

void RegisterUtilitiesResponse::InitAsDefaultInstance() {
}

RegisterUtilitiesResponse::RegisterUtilitiesResponse(const RegisterUtilitiesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
}

void RegisterUtilitiesResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterUtilitiesResponse::~RegisterUtilitiesResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  SharedDtor();
}

void RegisterUtilitiesResponse::SharedDtor() {
  if (client_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete client_id_;
  }
  if (this != default_instance_) {
  }
}

void RegisterUtilitiesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterUtilitiesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterUtilitiesResponse_descriptor_;
}

const RegisterUtilitiesResponse& RegisterUtilitiesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

RegisterUtilitiesResponse* RegisterUtilitiesResponse::default_instance_ = NULL;

RegisterUtilitiesResponse* RegisterUtilitiesResponse::New() const {
  return new RegisterUtilitiesResponse;
}

void RegisterUtilitiesResponse::Swap(RegisterUtilitiesResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RegisterUtilitiesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterUtilitiesResponse_descriptor_;
  metadata.reflection = RegisterUtilitiesResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UnregisterUtilitiesRequest::UnregisterUtilitiesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
}

void UnregisterUtilitiesRequest::InitAsDefaultInstance() {
}

UnregisterUtilitiesRequest::UnregisterUtilitiesRequest(const UnregisterUtilitiesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
}

void UnregisterUtilitiesRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnregisterUtilitiesRequest::~UnregisterUtilitiesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  SharedDtor();
}

void UnregisterUtilitiesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnregisterUtilitiesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnregisterUtilitiesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnregisterUtilitiesRequest_descriptor_;
}

const UnregisterUtilitiesRequest& UnregisterUtilitiesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5futilities_5fservice_2eproto();
  return *default_instance_;
}

UnregisterUtilitiesRequest* UnregisterUtilitiesRequest::default_instance_ = NULL;

UnregisterUtilitiesRequest* UnregisterUtilitiesRequest::New() const {
  return new UnregisterUtilitiesRequest;
}

void UnregisterUtilitiesRequest::Swap(UnregisterUtilitiesRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnregisterUtilitiesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnregisterUtilitiesRequest_descriptor_;
  metadata.reflection = UnregisterUtilitiesRequest_reflection_;
  return metadata;
}

// ===================================================================

GameUtilitiesService::GameUtilitiesService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

GameUtilitiesService::~GameUtilitiesService() {
}

google::protobuf::ServiceDescriptor const* GameUtilitiesService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameUtilitiesService_descriptor_;
}

void GameUtilitiesService::ProcessClientRequest(::bgs::protocol::game_utilities::v1::ClientRequest const* request, std::function<void(::bgs::protocol::game_utilities::v1::ClientResponse const*)> responseCallback, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.ProcessClientRequest", "bgs.protocol.game_utilities.v1.ClientRequest", request);
  std::function<void(MessageBuffer)> callback = [responseCallback](MessageBuffer buffer) -> void {
    ::bgs::protocol::game_utilities::v1::ClientResponse response;
    if (response.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize()))
      responseCallback(&response);
  };
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request, std::move(callback));
}

void GameUtilitiesService::PresenceChannelCreated(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest const* request, std::function<void(::bgs::protocol::NoData const*)> responseCallback, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.PresenceChannelCreated", "bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest", request);
  std::function<void(MessageBuffer)> callback = [responseCallback](MessageBuffer buffer) -> void {
    ::bgs::protocol::NoData response;
    if (response.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize()))
      responseCallback(&response);
  };
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request, std::move(callback));
}

void GameUtilitiesService::ProcessServerRequest(::bgs::protocol::game_utilities::v1::ServerRequest const* request, std::function<void(::bgs::protocol::game_utilities::v1::ServerResponse const*)> responseCallback, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.ProcessServerRequest", "bgs.protocol.game_utilities.v1.ServerRequest", request);
  std::function<void(MessageBuffer)> callback = [responseCallback](MessageBuffer buffer) -> void {
    ::bgs::protocol::game_utilities::v1::ServerResponse response;
    if (response.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize()))
      responseCallback(&response);
  };
  SendRequest(service_hash_, 6 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request, std::move(callback));
}

void GameUtilitiesService::OnGameAccountOnline(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.OnGameAccountOnline", "bgs.protocol.game_utilities.v1.GameAccountOnlineNotification", request);
  SendRequest(service_hash_, 7 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void GameUtilitiesService::OnGameAccountOffline(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.OnGameAccountOffline", "bgs.protocol.game_utilities.v1.GameAccountOfflineNotification", request);
  SendRequest(service_hash_, 8 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void GameUtilitiesService::GetAllValuesForAttribute(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest const* request, std::function<void(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse const*)> responseCallback, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.GetAllValuesForAttribute", "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest", request);
  std::function<void(MessageBuffer)> callback = [responseCallback](MessageBuffer buffer) -> void {
    ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse response;
    if (response.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize()))
      responseCallback(&response);
  };
  SendRequest(service_hash_, 10 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request, std::move(callback));
}

void GameUtilitiesService::RegisterUtilities(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest const* request, std::function<void(::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse const*)> responseCallback, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.RegisterUtilities", "bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest", request);
  std::function<void(MessageBuffer)> callback = [responseCallback](MessageBuffer buffer) -> void {
    ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse response;
    if (response.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize()))
      responseCallback(&response);
  };
  SendRequest(service_hash_, 11 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request, std::move(callback));
}

void GameUtilitiesService::UnregisterUtilities(::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("GameUtilitiesService.UnregisterUtilities", "bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest", request);
  SendRequest(service_hash_, 12 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void GameUtilitiesService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 1:
      ParseAndHandleProcessClientRequest(token, methodId, buffer);
      break;
    case 2:
      ParseAndHandlePresenceChannelCreated(token, methodId, buffer);
      break;
    case 6:
      ParseAndHandleProcessServerRequest(token, methodId, buffer);
      break;
    case 7:
      ParseAndHandleOnGameAccountOnline(token, methodId, buffer);
      break;
    case 8:
      ParseAndHandleOnGameAccountOffline(token, methodId, buffer);
      break;
    case 10:
      ParseAndHandleGetAllValuesForAttribute(token, methodId, buffer);
      break;
    case 11:
      ParseAndHandleRegisterUtilities(token, methodId, buffer);
      break;
    case 12:
      ParseAndHandleUnregisterUtilities(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 GameUtilitiesService::HandleProcessClientRequest(::bgs::protocol::game_utilities::v1::ClientRequest const* request, ::bgs::protocol::game_utilities::v1::ClientResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("GameUtilitiesService.ProcessClientRequest", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandlePresenceChannelCreated(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("GameUtilitiesService.PresenceChannelCreated", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleProcessServerRequest(::bgs::protocol::game_utilities::v1::ServerRequest const* request, ::bgs::protocol::game_utilities::v1::ServerResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("GameUtilitiesService.ProcessServerRequest", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleOnGameAccountOnline(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification const* request) {
  LogUnimplementedServerMethod("GameUtilitiesService.OnGameAccountOnline", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleOnGameAccountOffline(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification const* request) {
  LogUnimplementedServerMethod("GameUtilitiesService.OnGameAccountOffline", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleGetAllValuesForAttribute(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest const* request, ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("GameUtilitiesService.GetAllValuesForAttribute", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleRegisterUtilities(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest const* request, ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("GameUtilitiesService.RegisterUtilities", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 GameUtilitiesService::HandleUnregisterUtilities(::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest const* request) {
  LogUnimplementedServerMethod("GameUtilitiesService.UnregisterUtilities", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void GameUtilitiesService::ParseAndHandleProcessClientRequest(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::ClientRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.ProcessClientRequest");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("GameUtilitiesService.ProcessClientRequest", "bgs.protocol.game_utilities.v1.ClientRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "GameUtilitiesService.ProcessClientRequest", ::bgs::protocol::game_utilities::v1::ClientResponse::descriptor());
  ::bgs::protocol::game_utilities::v1::ClientResponse response;
  uint32 status = HandleProcessClientRequest(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void GameUtilitiesService::ParseAndHandlePresenceChannelCreated(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.PresenceChannelCreated");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("GameUtilitiesService.PresenceChannelCreated", "bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "GameUtilitiesService.PresenceChannelCreated", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandlePresenceChannelCreated(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void GameUtilitiesService::ParseAndHandleProcessServerRequest(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::ServerRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.ProcessServerRequest");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("GameUtilitiesService.ProcessServerRequest", "bgs.protocol.game_utilities.v1.ServerRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "GameUtilitiesService.ProcessServerRequest", ::bgs::protocol::game_utilities::v1::ServerResponse::descriptor());
  ::bgs::protocol::game_utilities::v1::ServerResponse response;
  uint32 status = HandleProcessServerRequest(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void GameUtilitiesService::ParseAndHandleOnGameAccountOnline(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.OnGameAccountOnline");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  uint32 status = HandleOnGameAccountOnline(&request);
  LogCallServerMethod("GameUtilitiesService.OnGameAccountOnline", "bgs.protocol.game_utilities.v1.GameAccountOnlineNotification", &request);
  if (status)
    SendResponse(service_hash_, methodId, token, status);
}

void GameUtilitiesService::ParseAndHandleOnGameAccountOffline(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.OnGameAccountOffline");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  uint32 status = HandleOnGameAccountOffline(&request);
  LogCallServerMethod("GameUtilitiesService.OnGameAccountOffline", "bgs.protocol.game_utilities.v1.GameAccountOfflineNotification", &request);
  if (status)
    SendResponse(service_hash_, methodId, token, status);
}

void GameUtilitiesService::ParseAndHandleGetAllValuesForAttribute(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.GetAllValuesForAttribute");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("GameUtilitiesService.GetAllValuesForAttribute", "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "GameUtilitiesService.GetAllValuesForAttribute", ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse::descriptor());
  ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse response;
  uint32 status = HandleGetAllValuesForAttribute(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void GameUtilitiesService::ParseAndHandleRegisterUtilities(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.RegisterUtilities");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("GameUtilitiesService.RegisterUtilities", "bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "GameUtilitiesService.RegisterUtilities", ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse::descriptor());
  ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse response;
  uint32 status = HandleRegisterUtilities(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void GameUtilitiesService::ParseAndHandleUnregisterUtilities(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("GameUtilitiesService.UnregisterUtilities");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  uint32 status = HandleUnregisterUtilities(&request);
  LogCallServerMethod("GameUtilitiesService.UnregisterUtilities", "bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest", &request);
  if (status)
    SendResponse(service_hash_, methodId, token, status);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
