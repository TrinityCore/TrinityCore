// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_membership_listener.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "club_membership_listener.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
namespace membership {

namespace {

const ::google::protobuf::Descriptor* ClubAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReceivedInvitationAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReceivedInvitationAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReceivedInvitationRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReceivedInvitationRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SharedSettingsChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SharedSettingsChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamMentionAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamMentionAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamMentionRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamMentionRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamMentionAdvanceViewTimeNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamMentionAdvanceViewTimeNotification_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* ClubMembershipListener_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_club_5fmembership_5flistener_2eproto() {
  protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "club_membership_listener.proto");
  GOOGLE_CHECK(file != NULL);
  ClubAddedNotification_descriptor_ = file->message_type(0);
  static const int ClubAddedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubAddedNotification, membership_),
  };
  ClubAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubAddedNotification_descriptor_,
      ClubAddedNotification::default_instance_,
      ClubAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubAddedNotification));
  ClubRemovedNotification_descriptor_ = file->message_type(1);
  static const int ClubRemovedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, member_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, reason_),
  };
  ClubRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubRemovedNotification_descriptor_,
      ClubRemovedNotification::default_instance_,
      ClubRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubRemovedNotification));
  ReceivedInvitationAddedNotification_descriptor_ = file->message_type(2);
  static const int ReceivedInvitationAddedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationAddedNotification, invitation_),
  };
  ReceivedInvitationAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReceivedInvitationAddedNotification_descriptor_,
      ReceivedInvitationAddedNotification::default_instance_,
      ReceivedInvitationAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReceivedInvitationAddedNotification));
  ReceivedInvitationRemovedNotification_descriptor_ = file->message_type(3);
  static const int ReceivedInvitationRemovedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationRemovedNotification, invitation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationRemovedNotification, reason_),
  };
  ReceivedInvitationRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReceivedInvitationRemovedNotification_descriptor_,
      ReceivedInvitationRemovedNotification::default_instance_,
      ReceivedInvitationRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceivedInvitationRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReceivedInvitationRemovedNotification));
  SharedSettingsChangedNotification_descriptor_ = file->message_type(4);
  static const int SharedSettingsChangedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedSettingsChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedSettingsChangedNotification, assignment_),
  };
  SharedSettingsChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SharedSettingsChangedNotification_descriptor_,
      SharedSettingsChangedNotification::default_instance_,
      SharedSettingsChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedSettingsChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedSettingsChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SharedSettingsChangedNotification));
  StreamMentionAddedNotification_descriptor_ = file->message_type(5);
  static const int StreamMentionAddedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAddedNotification, mention_),
  };
  StreamMentionAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamMentionAddedNotification_descriptor_,
      StreamMentionAddedNotification::default_instance_,
      StreamMentionAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamMentionAddedNotification));
  StreamMentionRemovedNotification_descriptor_ = file->message_type(6);
  static const int StreamMentionRemovedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionRemovedNotification, mention_id_),
  };
  StreamMentionRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamMentionRemovedNotification_descriptor_,
      StreamMentionRemovedNotification::default_instance_,
      StreamMentionRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamMentionRemovedNotification));
  StreamMentionAdvanceViewTimeNotification_descriptor_ = file->message_type(7);
  static const int StreamMentionAdvanceViewTimeNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAdvanceViewTimeNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAdvanceViewTimeNotification, view_time_),
  };
  StreamMentionAdvanceViewTimeNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamMentionAdvanceViewTimeNotification_descriptor_,
      StreamMentionAdvanceViewTimeNotification::default_instance_,
      StreamMentionAdvanceViewTimeNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAdvanceViewTimeNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMentionAdvanceViewTimeNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamMentionAdvanceViewTimeNotification));
  ClubMembershipListener_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_club_5fmembership_5flistener_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubAddedNotification_descriptor_, &ClubAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubRemovedNotification_descriptor_, &ClubRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReceivedInvitationAddedNotification_descriptor_, &ReceivedInvitationAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReceivedInvitationRemovedNotification_descriptor_, &ReceivedInvitationRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SharedSettingsChangedNotification_descriptor_, &SharedSettingsChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamMentionAddedNotification_descriptor_, &StreamMentionAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamMentionRemovedNotification_descriptor_, &StreamMentionRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamMentionAdvanceViewTimeNotification_descriptor_, &StreamMentionAdvanceViewTimeNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_club_5fmembership_5flistener_2eproto() {
  delete ClubAddedNotification::default_instance_;
  delete ClubAddedNotification_reflection_;
  delete ClubRemovedNotification::default_instance_;
  delete ClubRemovedNotification_reflection_;
  delete ReceivedInvitationAddedNotification::default_instance_;
  delete ReceivedInvitationAddedNotification_reflection_;
  delete ReceivedInvitationRemovedNotification::default_instance_;
  delete ReceivedInvitationRemovedNotification_reflection_;
  delete SharedSettingsChangedNotification::default_instance_;
  delete SharedSettingsChangedNotification_reflection_;
  delete StreamMentionAddedNotification::default_instance_;
  delete StreamMentionAddedNotification_reflection_;
  delete StreamMentionRemovedNotification::default_instance_;
  delete StreamMentionRemovedNotification_reflection_;
  delete StreamMentionAdvanceViewTimeNotification::default_instance_;
  delete StreamMentionAdvanceViewTimeNotification_reflection_;
}

void protobuf_AddDesc_club_5fmembership_5flistener_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::protobuf_AddDesc_club_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036club_membership_listener.proto\022\037bgs.pr"
    "otocol.club.v1.membership\032\020club_types.pr"
    "oto\"\216\001\n\025ClubAddedNotification\0220\n\010agent_i"
    "d\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022"
    "C\n\nmembership\030\003 \001(\0132/.bgs.protocol.club."
    "v1.ClubMembershipDescription\"\310\001\n\027ClubRem"
    "ovedNotification\0220\n\010agent_id\030\001 \001(\0132\036.bgs"
    ".protocol.club.v1.MemberId\0221\n\tmember_id\030"
    "\003 \001(\0132\036.bgs.protocol.club.v1.MemberId\022\017\n"
    "\007club_id\030\004 \001(\004\0227\n\006reason\030\005 \001(\0162\'.bgs.pro"
    "tocol.club.v1.ClubRemovedReason\"\221\001\n#Rece"
    "ivedInvitationAddedNotification\0220\n\010agent"
    "_id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberI"
    "d\0228\n\ninvitation\030\003 \001(\0132$.bgs.protocol.clu"
    "b.v1.ClubInvitation\"\247\001\n%ReceivedInvitati"
    "onRemovedNotification\0220\n\010agent_id\030\001 \001(\0132"
    "\036.bgs.protocol.club.v1.MemberId\022\025\n\rinvit"
    "ation_id\030\003 \001(\006\0225\n\006reason\030\004 \001(\0162%.bgs.pro"
    "tocol.InvitationRemovedReason\"\241\001\n!Shared"
    "SettingsChangedNotification\0224\n\010agent_id\030"
    "\001 \001(\0132\".bgs.protocol.account.v1.AccountI"
    "d\022F\n\nassignment\030\004 \001(\01322.bgs.protocol.clu"
    "b.v1.ClubSharedSettingsAssignment\"\210\001\n\036St"
    "reamMentionAddedNotification\0220\n\010agent_id"
    "\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\0224"
    "\n\007mention\030\003 \001(\0132#.bgs.protocol.club.v1.S"
    "treamMention\"\210\001\n StreamMentionRemovedNot"
    "ification\0224\n\010agent_id\030\001 \001(\0132\".bgs.protoc"
    "ol.account.v1.AccountId\022.\n\nmention_id\030\003 "
    "\001(\0132\032.bgs.protocol.TimeSeriesId\"s\n(Strea"
    "mMentionAdvanceViewTimeNotification\0224\n\010a"
    "gent_id\030\001 \001(\0132\".bgs.protocol.account.v1."
    "AccountId\022\021\n\tview_time\030\003 \001(\0042\337\010\n\026ClubMem"
    "bershipListener\022j\n\013OnClubAdded\0226.bgs.pro"
    "tocol.club.v1.membership.ClubAddedNotifi"
    "cation\032\031.bgs.protocol.NO_RESPONSE\"\010\202\371+\004\010"
    "\001\030\001\022n\n\rOnClubRemoved\0228.bgs.protocol.club"
    ".v1.membership.ClubRemovedNotification\032\031"
    ".bgs.protocol.NO_RESPONSE\"\010\202\371+\004\010\002\030\001\022\206\001\n\031"
    "OnReceivedInvitationAdded\022D.bgs.protocol"
    ".club.v1.membership.ReceivedInvitationAd"
    "dedNotification\032\031.bgs.protocol.NO_RESPON"
    "SE\"\010\202\371+\004\010\003\030\001\022\212\001\n\033OnReceivedInvitationRem"
    "oved\022F.bgs.protocol.club.v1.membership.R"
    "eceivedInvitationRemovedNotification\032\031.b"
    "gs.protocol.NO_RESPONSE\"\010\202\371+\004\010\004\030\001\022\202\001\n\027On"
    "SharedSettingsChanged\022B.bgs.protocol.clu"
    "b.v1.membership.SharedSettingsChangedNot"
    "ification\032\031.bgs.protocol.NO_RESPONSE\"\010\202\371"
    "+\004\010\005\030\001\022|\n\024OnStreamMentionAdded\022\?.bgs.pro"
    "tocol.club.v1.membership.StreamMentionAd"
    "dedNotification\032\031.bgs.protocol.NO_RESPON"
    "SE\"\010\202\371+\004\010\006\030\001\022\200\001\n\026OnStreamMentionRemoved\022"
    "A.bgs.protocol.club.v1.membership.Stream"
    "MentionRemovedNotification\032\031.bgs.protoco"
    "l.NO_RESPONSE\"\010\202\371+\004\010\007\030\001\022\220\001\n\036OnStreamMent"
    "ionAdvanceViewTime\022I.bgs.protocol.club.v"
    "1.membership.StreamMentionAdvanceViewTim"
    "eNotification\032\031.bgs.protocol.NO_RESPONSE"
    "\"\010\202\371+\004\010\010\030\001\032:\202\371+.\n,bnet.protocol.club.v1."
    "ClubMembershipListener\212\371+\004\010\001\030\001B\005H\002\200\001\000", 2437);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "club_membership_listener.proto", &protobuf_RegisterTypes);
  ClubAddedNotification::default_instance_ = new ClubAddedNotification();
  ClubRemovedNotification::default_instance_ = new ClubRemovedNotification();
  ReceivedInvitationAddedNotification::default_instance_ = new ReceivedInvitationAddedNotification();
  ReceivedInvitationRemovedNotification::default_instance_ = new ReceivedInvitationRemovedNotification();
  SharedSettingsChangedNotification::default_instance_ = new SharedSettingsChangedNotification();
  StreamMentionAddedNotification::default_instance_ = new StreamMentionAddedNotification();
  StreamMentionRemovedNotification::default_instance_ = new StreamMentionRemovedNotification();
  StreamMentionAdvanceViewTimeNotification::default_instance_ = new StreamMentionAdvanceViewTimeNotification();
  ClubAddedNotification::default_instance_->InitAsDefaultInstance();
  ClubRemovedNotification::default_instance_->InitAsDefaultInstance();
  ReceivedInvitationAddedNotification::default_instance_->InitAsDefaultInstance();
  ReceivedInvitationRemovedNotification::default_instance_->InitAsDefaultInstance();
  SharedSettingsChangedNotification::default_instance_->InitAsDefaultInstance();
  StreamMentionAddedNotification::default_instance_->InitAsDefaultInstance();
  StreamMentionRemovedNotification::default_instance_->InitAsDefaultInstance();
  StreamMentionAdvanceViewTimeNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_club_5fmembership_5flistener_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_club_5fmembership_5flistener_2eproto {
  StaticDescriptorInitializer_club_5fmembership_5flistener_2eproto() {
    protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  }
} static_descriptor_initializer_club_5fmembership_5flistener_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int ClubAddedNotification::kAgentIdFieldNumber;
const int ClubAddedNotification::kMembershipFieldNumber;
#endif  // !_MSC_VER

ClubAddedNotification::ClubAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.ClubAddedNotification)
}

void ClubAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  membership_ = const_cast< ::bgs::protocol::club::v1::ClubMembershipDescription*>(&::bgs::protocol::club::v1::ClubMembershipDescription::default_instance());
}

ClubAddedNotification::ClubAddedNotification(const ClubAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.ClubAddedNotification)
}

void ClubAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  membership_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubAddedNotification::~ClubAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.ClubAddedNotification)
  SharedDtor();
}

void ClubAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete membership_;
  }
}

void ClubAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubAddedNotification_descriptor_;
}

const ClubAddedNotification& ClubAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

ClubAddedNotification* ClubAddedNotification::default_instance_ = NULL;

ClubAddedNotification* ClubAddedNotification::New() const {
  return new ClubAddedNotification;
}

void ClubAddedNotification::Swap(ClubAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubAddedNotification_descriptor_;
  metadata.reflection = ClubAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubRemovedNotification::kAgentIdFieldNumber;
const int ClubRemovedNotification::kMemberIdFieldNumber;
const int ClubRemovedNotification::kClubIdFieldNumber;
const int ClubRemovedNotification::kReasonFieldNumber;
#endif  // !_MSC_VER

ClubRemovedNotification::ClubRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.ClubRemovedNotification)
}

void ClubRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  member_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

ClubRemovedNotification::ClubRemovedNotification(const ClubRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.ClubRemovedNotification)
}

void ClubRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  member_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubRemovedNotification::~ClubRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.ClubRemovedNotification)
  SharedDtor();
}

void ClubRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete member_id_;
  }
}

void ClubRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubRemovedNotification_descriptor_;
}

const ClubRemovedNotification& ClubRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

ClubRemovedNotification* ClubRemovedNotification::default_instance_ = NULL;

ClubRemovedNotification* ClubRemovedNotification::New() const {
  return new ClubRemovedNotification;
}

void ClubRemovedNotification::Swap(ClubRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubRemovedNotification_descriptor_;
  metadata.reflection = ClubRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ReceivedInvitationAddedNotification::kAgentIdFieldNumber;
const int ReceivedInvitationAddedNotification::kInvitationFieldNumber;
#endif  // !_MSC_VER

ReceivedInvitationAddedNotification::ReceivedInvitationAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification)
}

void ReceivedInvitationAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  invitation_ = const_cast< ::bgs::protocol::club::v1::ClubInvitation*>(&::bgs::protocol::club::v1::ClubInvitation::default_instance());
}

ReceivedInvitationAddedNotification::ReceivedInvitationAddedNotification(const ReceivedInvitationAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification)
}

void ReceivedInvitationAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReceivedInvitationAddedNotification::~ReceivedInvitationAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification)
  SharedDtor();
}

void ReceivedInvitationAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete invitation_;
  }
}

void ReceivedInvitationAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceivedInvitationAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceivedInvitationAddedNotification_descriptor_;
}

const ReceivedInvitationAddedNotification& ReceivedInvitationAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

ReceivedInvitationAddedNotification* ReceivedInvitationAddedNotification::default_instance_ = NULL;

ReceivedInvitationAddedNotification* ReceivedInvitationAddedNotification::New() const {
  return new ReceivedInvitationAddedNotification;
}

void ReceivedInvitationAddedNotification::Swap(ReceivedInvitationAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ReceivedInvitationAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReceivedInvitationAddedNotification_descriptor_;
  metadata.reflection = ReceivedInvitationAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ReceivedInvitationRemovedNotification::kAgentIdFieldNumber;
const int ReceivedInvitationRemovedNotification::kInvitationIdFieldNumber;
const int ReceivedInvitationRemovedNotification::kReasonFieldNumber;
#endif  // !_MSC_VER

ReceivedInvitationRemovedNotification::ReceivedInvitationRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification)
}

void ReceivedInvitationRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

ReceivedInvitationRemovedNotification::ReceivedInvitationRemovedNotification(const ReceivedInvitationRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification)
}

void ReceivedInvitationRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReceivedInvitationRemovedNotification::~ReceivedInvitationRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification)
  SharedDtor();
}

void ReceivedInvitationRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void ReceivedInvitationRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceivedInvitationRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceivedInvitationRemovedNotification_descriptor_;
}

const ReceivedInvitationRemovedNotification& ReceivedInvitationRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

ReceivedInvitationRemovedNotification* ReceivedInvitationRemovedNotification::default_instance_ = NULL;

ReceivedInvitationRemovedNotification* ReceivedInvitationRemovedNotification::New() const {
  return new ReceivedInvitationRemovedNotification;
}

void ReceivedInvitationRemovedNotification::Swap(ReceivedInvitationRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ReceivedInvitationRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReceivedInvitationRemovedNotification_descriptor_;
  metadata.reflection = ReceivedInvitationRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SharedSettingsChangedNotification::kAgentIdFieldNumber;
const int SharedSettingsChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

SharedSettingsChangedNotification::SharedSettingsChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.SharedSettingsChangedNotification)
}

void SharedSettingsChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  assignment_ = const_cast< ::bgs::protocol::club::v1::ClubSharedSettingsAssignment*>(&::bgs::protocol::club::v1::ClubSharedSettingsAssignment::default_instance());
}

SharedSettingsChangedNotification::SharedSettingsChangedNotification(const SharedSettingsChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.SharedSettingsChangedNotification)
}

void SharedSettingsChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  assignment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SharedSettingsChangedNotification::~SharedSettingsChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.SharedSettingsChangedNotification)
  SharedDtor();
}

void SharedSettingsChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete assignment_;
  }
}

void SharedSettingsChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharedSettingsChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SharedSettingsChangedNotification_descriptor_;
}

const SharedSettingsChangedNotification& SharedSettingsChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

SharedSettingsChangedNotification* SharedSettingsChangedNotification::default_instance_ = NULL;

SharedSettingsChangedNotification* SharedSettingsChangedNotification::New() const {
  return new SharedSettingsChangedNotification;
}

void SharedSettingsChangedNotification::Swap(SharedSettingsChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SharedSettingsChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SharedSettingsChangedNotification_descriptor_;
  metadata.reflection = SharedSettingsChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamMentionAddedNotification::kAgentIdFieldNumber;
const int StreamMentionAddedNotification::kMentionFieldNumber;
#endif  // !_MSC_VER

StreamMentionAddedNotification::StreamMentionAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.StreamMentionAddedNotification)
}

void StreamMentionAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  mention_ = const_cast< ::bgs::protocol::club::v1::StreamMention*>(&::bgs::protocol::club::v1::StreamMention::default_instance());
}

StreamMentionAddedNotification::StreamMentionAddedNotification(const StreamMentionAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.StreamMentionAddedNotification)
}

void StreamMentionAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  mention_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamMentionAddedNotification::~StreamMentionAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.StreamMentionAddedNotification)
  SharedDtor();
}

void StreamMentionAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete mention_;
  }
}

void StreamMentionAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamMentionAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamMentionAddedNotification_descriptor_;
}

const StreamMentionAddedNotification& StreamMentionAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

StreamMentionAddedNotification* StreamMentionAddedNotification::default_instance_ = NULL;

StreamMentionAddedNotification* StreamMentionAddedNotification::New() const {
  return new StreamMentionAddedNotification;
}

void StreamMentionAddedNotification::Swap(StreamMentionAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamMentionAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamMentionAddedNotification_descriptor_;
  metadata.reflection = StreamMentionAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamMentionRemovedNotification::kAgentIdFieldNumber;
const int StreamMentionRemovedNotification::kMentionIdFieldNumber;
#endif  // !_MSC_VER

StreamMentionRemovedNotification::StreamMentionRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.StreamMentionRemovedNotification)
}

void StreamMentionRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  mention_id_ = const_cast< ::bgs::protocol::TimeSeriesId*>(&::bgs::protocol::TimeSeriesId::default_instance());
}

StreamMentionRemovedNotification::StreamMentionRemovedNotification(const StreamMentionRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.StreamMentionRemovedNotification)
}

void StreamMentionRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  mention_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamMentionRemovedNotification::~StreamMentionRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.StreamMentionRemovedNotification)
  SharedDtor();
}

void StreamMentionRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete mention_id_;
  }
}

void StreamMentionRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamMentionRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamMentionRemovedNotification_descriptor_;
}

const StreamMentionRemovedNotification& StreamMentionRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

StreamMentionRemovedNotification* StreamMentionRemovedNotification::default_instance_ = NULL;

StreamMentionRemovedNotification* StreamMentionRemovedNotification::New() const {
  return new StreamMentionRemovedNotification;
}

void StreamMentionRemovedNotification::Swap(StreamMentionRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamMentionRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamMentionRemovedNotification_descriptor_;
  metadata.reflection = StreamMentionRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamMentionAdvanceViewTimeNotification::kAgentIdFieldNumber;
const int StreamMentionAdvanceViewTimeNotification::kViewTimeFieldNumber;
#endif  // !_MSC_VER

StreamMentionAdvanceViewTimeNotification::StreamMentionAdvanceViewTimeNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification)
}

void StreamMentionAdvanceViewTimeNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

StreamMentionAdvanceViewTimeNotification::StreamMentionAdvanceViewTimeNotification(const StreamMentionAdvanceViewTimeNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification)
}

void StreamMentionAdvanceViewTimeNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  view_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamMentionAdvanceViewTimeNotification::~StreamMentionAdvanceViewTimeNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification)
  SharedDtor();
}

void StreamMentionAdvanceViewTimeNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void StreamMentionAdvanceViewTimeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamMentionAdvanceViewTimeNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamMentionAdvanceViewTimeNotification_descriptor_;
}

const StreamMentionAdvanceViewTimeNotification& StreamMentionAdvanceViewTimeNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fmembership_5flistener_2eproto();
  return *default_instance_;
}

StreamMentionAdvanceViewTimeNotification* StreamMentionAdvanceViewTimeNotification::default_instance_ = NULL;

StreamMentionAdvanceViewTimeNotification* StreamMentionAdvanceViewTimeNotification::New() const {
  return new StreamMentionAdvanceViewTimeNotification;
}

void StreamMentionAdvanceViewTimeNotification::Swap(StreamMentionAdvanceViewTimeNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamMentionAdvanceViewTimeNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamMentionAdvanceViewTimeNotification_descriptor_;
  metadata.reflection = StreamMentionAdvanceViewTimeNotification_reflection_;
  return metadata;
}

// ===================================================================

ClubMembershipListener::ClubMembershipListener(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

ClubMembershipListener::~ClubMembershipListener() {
}

google::protobuf::ServiceDescriptor const* ClubMembershipListener::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubMembershipListener_descriptor_;
}

void ClubMembershipListener::OnClubAdded(::bgs::protocol::club::v1::membership::ClubAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnClubAdded", "bgs.protocol.club.v1.membership.ClubAddedNotification", request);
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnClubRemoved(::bgs::protocol::club::v1::membership::ClubRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnClubRemoved", "bgs.protocol.club.v1.membership.ClubRemovedNotification", request);
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnReceivedInvitationAdded(::bgs::protocol::club::v1::membership::ReceivedInvitationAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnReceivedInvitationAdded", "bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification", request);
  SendRequest(service_hash_, 3 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnReceivedInvitationRemoved(::bgs::protocol::club::v1::membership::ReceivedInvitationRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnReceivedInvitationRemoved", "bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification", request);
  SendRequest(service_hash_, 4 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnSharedSettingsChanged(::bgs::protocol::club::v1::membership::SharedSettingsChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnSharedSettingsChanged", "bgs.protocol.club.v1.membership.SharedSettingsChangedNotification", request);
  SendRequest(service_hash_, 5 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnStreamMentionAdded(::bgs::protocol::club::v1::membership::StreamMentionAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnStreamMentionAdded", "bgs.protocol.club.v1.membership.StreamMentionAddedNotification", request);
  SendRequest(service_hash_, 6 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnStreamMentionRemoved(::bgs::protocol::club::v1::membership::StreamMentionRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnStreamMentionRemoved", "bgs.protocol.club.v1.membership.StreamMentionRemovedNotification", request);
  SendRequest(service_hash_, 7 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::OnStreamMentionAdvanceViewTime(::bgs::protocol::club::v1::membership::StreamMentionAdvanceViewTimeNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubMembershipListener.OnStreamMentionAdvanceViewTime", "bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification", request);
  SendRequest(service_hash_, 8 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubMembershipListener::CallServerMethod(uint32 /*token*/, uint32 methodId, MessageBuffer /*buffer*/) {
  LogDisallowedMethod(methodId);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace membership
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
