// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invitation_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "invitation_types.pb.h"

#include <algorithm>
#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "Log.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* Invitation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Invitation_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvitationParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvitationParams_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InvitationRemovedReason_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SuggestionRemovedReason_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_invitation_5ftypes_2eproto() {
  protobuf_AddDesc_invitation_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "invitation_types.proto");
  GOOGLE_CHECK(file != NULL);
  Invitation_descriptor_ = file->message_type(0);
  static const int Invitation_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, inviter_identity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, invitee_identity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, inviter_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, invitee_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, invitation_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, creation_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, expiration_time_),
  };
  Invitation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Invitation_descriptor_,
      Invitation::default_instance_,
      Invitation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Invitation, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Invitation));
  InvitationParams_descriptor_ = file->message_type(1);
  static const int InvitationParams_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationParams, invitation_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationParams, expiration_time_),
  };
  InvitationParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvitationParams_descriptor_,
      InvitationParams::default_instance_,
      InvitationParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationParams, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationParams, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvitationParams));
  InvitationRemovedReason_descriptor_ = file->enum_type(0);
  SuggestionRemovedReason_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_invitation_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Invitation_descriptor_, &Invitation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvitationParams_descriptor_, &InvitationParams::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_invitation_5ftypes_2eproto() {
  delete Invitation::default_instance_;
  delete Invitation_reflection_;
  delete InvitationParams::default_instance_;
  delete InvitationParams_reflection_;
}

void protobuf_AddDesc_invitation_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026invitation_types.proto\022\014bgs.protocol\032\022"
    "entity_types.proto\"\373\001\n\nInvitation\022\n\n\002id\030"
    "\001 \002(\006\0220\n\020inviter_identity\030\002 \002(\0132\026.bgs.pr"
    "otocol.Identity\0220\n\020invitee_identity\030\003 \002("
    "\0132\026.bgs.protocol.Identity\022\024\n\014inviter_nam"
    "e\030\004 \001(\t\022\024\n\014invitee_name\030\005 \001(\t\022\032\n\022invitat"
    "ion_message\030\006 \001(\t\022\025\n\rcreation_time\030\007 \001(\004"
    "\022\027\n\017expiration_time\030\010 \001(\004*\005\010d\020\220N\"R\n\020Invi"
    "tationParams\022\036\n\022invitation_message\030\001 \001(\t"
    "B\002\030\001\022\027\n\017expiration_time\030\002 \001(\004*\005\010d\020\220N*\206\002\n"
    "\027InvitationRemovedReason\022&\n\"INVITATION_R"
    "EMOVED_REASON_ACCEPTED\020\000\022&\n\"INVITATION_R"
    "EMOVED_REASON_DECLINED\020\001\022%\n!INVITATION_R"
    "EMOVED_REASON_REVOKED\020\002\022%\n!INVITATION_RE"
    "MOVED_REASON_IGNORED\020\003\022%\n!INVITATION_REM"
    "OVED_REASON_EXPIRED\020\004\022&\n\"INVITATION_REMO"
    "VED_REASON_CANCELED\020\005*\270\001\n\027SuggestionRemo"
    "vedReason\022&\n\"SUGGESTION_REMOVED_REASON_A"
    "PPROVED\020\000\022&\n\"SUGGESTION_REMOVED_REASON_D"
    "ECLINED\020\001\022%\n!SUGGESTION_REMOVED_REASON_E"
    "XPIRED\020\002\022&\n\"SUGGESTION_REMOVED_REASON_CA"
    "NCELED\020\003B\'\n\rbnet.protocolB\024InvitationTyp"
    "esProtoH\001", 889);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "invitation_types.proto", &protobuf_RegisterTypes);
  Invitation::default_instance_ = new Invitation();
  InvitationParams::default_instance_ = new InvitationParams();
  Invitation::default_instance_->InitAsDefaultInstance();
  InvitationParams::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_invitation_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_invitation_5ftypes_2eproto {
  StaticDescriptorInitializer_invitation_5ftypes_2eproto() {
    protobuf_AddDesc_invitation_5ftypes_2eproto();
  }
} static_descriptor_initializer_invitation_5ftypes_2eproto_;
const ::google::protobuf::EnumDescriptor* InvitationRemovedReason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvitationRemovedReason_descriptor_;
}
bool InvitationRemovedReason_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SuggestionRemovedReason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SuggestionRemovedReason_descriptor_;
}
bool SuggestionRemovedReason_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Invitation::kIdFieldNumber;
const int Invitation::kInviterIdentityFieldNumber;
const int Invitation::kInviteeIdentityFieldNumber;
const int Invitation::kInviterNameFieldNumber;
const int Invitation::kInviteeNameFieldNumber;
const int Invitation::kInvitationMessageFieldNumber;
const int Invitation::kCreationTimeFieldNumber;
const int Invitation::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

Invitation::Invitation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.Invitation)
}

void Invitation::InitAsDefaultInstance() {
  inviter_identity_ = const_cast< ::bgs::protocol::Identity*>(&::bgs::protocol::Identity::default_instance());
  invitee_identity_ = const_cast< ::bgs::protocol::Identity*>(&::bgs::protocol::Identity::default_instance());
}

Invitation::Invitation(const Invitation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.Invitation)
}

void Invitation::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  inviter_identity_ = NULL;
  invitee_identity_ = NULL;
  inviter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitation_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_time_ = GOOGLE_ULONGLONG(0);
  expiration_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Invitation::~Invitation() {
  // @@protoc_insertion_point(destructor:bgs.protocol.Invitation)
  SharedDtor();
}

void Invitation::SharedDtor() {
  if (inviter_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inviter_name_;
  }
  if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitee_name_;
  }
  if (invitation_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitation_message_;
  }
  if (this != default_instance_) {
    delete inviter_identity_;
    delete invitee_identity_;
  }
}

void Invitation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Invitation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Invitation_descriptor_;
}

const Invitation& Invitation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_invitation_5ftypes_2eproto();
  return *default_instance_;
}

Invitation* Invitation::default_instance_ = NULL;

Invitation* Invitation::New() const {
  return new Invitation;
}

void Invitation::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Invitation*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(creation_time_, expiration_time_);
    id_ = GOOGLE_ULONGLONG(0);
    if (has_inviter_identity()) {
      if (inviter_identity_ != NULL) inviter_identity_->::bgs::protocol::Identity::Clear();
    }
    if (has_invitee_identity()) {
      if (invitee_identity_ != NULL) invitee_identity_->::bgs::protocol::Identity::Clear();
    }
    if (has_inviter_name()) {
      if (inviter_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        inviter_name_->clear();
      }
    }
    if (has_invitee_name()) {
      if (invitee_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        invitee_name_->clear();
      }
    }
    if (has_invitation_message()) {
      if (invitation_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        invitation_message_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Invitation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bgs.protocol.Invitation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_inviter_identity;
        break;
      }

      // required .bgs.protocol.Identity inviter_identity = 2;
      case 2: {
        if (tag == 18) {
         parse_inviter_identity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inviter_identity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_invitee_identity;
        break;
      }

      // required .bgs.protocol.Identity invitee_identity = 3;
      case 3: {
        if (tag == 26) {
         parse_invitee_identity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invitee_identity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_inviter_name;
        break;
      }

      // optional string inviter_name = 4;
      case 4: {
        if (tag == 34) {
         parse_inviter_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inviter_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inviter_name().data(), this->inviter_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inviter_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_invitee_name;
        break;
      }

      // optional string invitee_name = 5;
      case 5: {
        if (tag == 42) {
         parse_invitee_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitee_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitee_name().data(), this->invitee_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "invitee_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_invitation_message;
        break;
      }

      // optional string invitation_message = 6;
      case 6: {
        if (tag == 50) {
         parse_invitation_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitation_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitation_message().data(), this->invitation_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "invitation_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_creation_time;
        break;
      }

      // optional uint64 creation_time = 7;
      case 7: {
        if (tag == 56) {
         parse_creation_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &creation_time_)));
          set_has_creation_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_expiration_time;
        break;
      }

      // optional uint64 expiration_time = 8;
      case 8: {
        if (tag == 64) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag && tag < 80000u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bgs.protocol.Invitation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bgs.protocol.Invitation)
  return false;
#undef DO_
}

void Invitation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bgs.protocol.Invitation)
  // required fixed64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->id(), output);
  }

  // required .bgs.protocol.Identity inviter_identity = 2;
  if (has_inviter_identity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->inviter_identity(), output);
  }

  // required .bgs.protocol.Identity invitee_identity = 3;
  if (has_invitee_identity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->invitee_identity(), output);
  }

  // optional string inviter_name = 4;
  if (has_inviter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_name().data(), this->inviter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inviter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->inviter_name(), output);
  }

  // optional string invitee_name = 5;
  if (has_invitee_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitee_name().data(), this->invitee_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitee_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->invitee_name(), output);
  }

  // optional string invitation_message = 6;
  if (has_invitation_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_message().data(), this->invitation_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitation_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->invitation_message(), output);
  }

  // optional uint64 creation_time = 7;
  if (has_creation_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->creation_time(), output);
  }

  // optional uint64 expiration_time = 8;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->expiration_time(), output);
  }

  // Extension range [100, 10000)
  _extensions_.SerializeWithCachedSizes(
      100, 10000, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bgs.protocol.Invitation)
}

::google::protobuf::uint8* Invitation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.Invitation)
  // required fixed64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->id(), target);
  }

  // required .bgs.protocol.Identity inviter_identity = 2;
  if (has_inviter_identity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->inviter_identity(), target);
  }

  // required .bgs.protocol.Identity invitee_identity = 3;
  if (has_invitee_identity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->invitee_identity(), target);
  }

  // optional string inviter_name = 4;
  if (has_inviter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_name().data(), this->inviter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inviter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->inviter_name(), target);
  }

  // optional string invitee_name = 5;
  if (has_invitee_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitee_name().data(), this->invitee_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitee_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invitee_name(), target);
  }

  // optional string invitation_message = 6;
  if (has_invitation_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_message().data(), this->invitation_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitation_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->invitation_message(), target);
  }

  // optional uint64 creation_time = 7;
  if (has_creation_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->creation_time(), target);
  }

  // optional uint64 expiration_time = 8;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->expiration_time(), target);
  }

  // Extension range [100, 10000)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 10000, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.Invitation)
  return target;
}

int Invitation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required fixed64 id = 1;
    if (has_id()) {
      total_size += 1 + 8;
    }

    // required .bgs.protocol.Identity inviter_identity = 2;
    if (has_inviter_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inviter_identity());
    }

    // required .bgs.protocol.Identity invitee_identity = 3;
    if (has_invitee_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invitee_identity());
    }

    // optional string inviter_name = 4;
    if (has_inviter_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inviter_name());
    }

    // optional string invitee_name = 5;
    if (has_invitee_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitee_name());
    }

    // optional string invitation_message = 6;
    if (has_invitation_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitation_message());
    }

    // optional uint64 creation_time = 7;
    if (has_creation_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->creation_time());
    }

    // optional uint64 expiration_time = 8;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiration_time());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Invitation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Invitation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Invitation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Invitation::MergeFrom(const Invitation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_inviter_identity()) {
      mutable_inviter_identity()->::bgs::protocol::Identity::MergeFrom(from.inviter_identity());
    }
    if (from.has_invitee_identity()) {
      mutable_invitee_identity()->::bgs::protocol::Identity::MergeFrom(from.invitee_identity());
    }
    if (from.has_inviter_name()) {
      set_inviter_name(from.inviter_name());
    }
    if (from.has_invitee_name()) {
      set_invitee_name(from.invitee_name());
    }
    if (from.has_invitation_message()) {
      set_invitation_message(from.invitation_message());
    }
    if (from.has_creation_time()) {
      set_creation_time(from.creation_time());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Invitation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Invitation::CopyFrom(const Invitation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Invitation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_inviter_identity()) {
    if (!this->inviter_identity().IsInitialized()) return false;
  }
  if (has_invitee_identity()) {
    if (!this->invitee_identity().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Invitation::Swap(Invitation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(inviter_identity_, other->inviter_identity_);
    std::swap(invitee_identity_, other->invitee_identity_);
    std::swap(inviter_name_, other->inviter_name_);
    std::swap(invitee_name_, other->invitee_name_);
    std::swap(invitation_message_, other->invitation_message_);
    std::swap(creation_time_, other->creation_time_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Invitation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Invitation_descriptor_;
  metadata.reflection = Invitation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvitationParams::kInvitationMessageFieldNumber;
const int InvitationParams::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

InvitationParams::InvitationParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.InvitationParams)
}

void InvitationParams::InitAsDefaultInstance() {
}

InvitationParams::InvitationParams(const InvitationParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.InvitationParams)
}

void InvitationParams::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  invitation_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvitationParams::~InvitationParams() {
  // @@protoc_insertion_point(destructor:bgs.protocol.InvitationParams)
  SharedDtor();
}

void InvitationParams::SharedDtor() {
  if (invitation_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitation_message_;
  }
  if (this != default_instance_) {
  }
}

void InvitationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitationParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvitationParams_descriptor_;
}

const InvitationParams& InvitationParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_invitation_5ftypes_2eproto();
  return *default_instance_;
}

InvitationParams* InvitationParams::default_instance_ = NULL;

InvitationParams* InvitationParams::New() const {
  return new InvitationParams;
}

void InvitationParams::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_invitation_message()) {
      if (invitation_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        invitation_message_->clear();
      }
    }
    expiration_time_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvitationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bgs.protocol.InvitationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string invitation_message = 1 [deprecated = true];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitation_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitation_message().data(), this->invitation_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "invitation_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_expiration_time;
        break;
      }

      // optional uint64 expiration_time = 2;
      case 2: {
        if (tag == 16) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag && tag < 80000u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bgs.protocol.InvitationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bgs.protocol.InvitationParams)
  return false;
#undef DO_
}

void InvitationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bgs.protocol.InvitationParams)
  // optional string invitation_message = 1 [deprecated = true];
  if (has_invitation_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_message().data(), this->invitation_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitation_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->invitation_message(), output);
  }

  // optional uint64 expiration_time = 2;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->expiration_time(), output);
  }

  // Extension range [100, 10000)
  _extensions_.SerializeWithCachedSizes(
      100, 10000, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bgs.protocol.InvitationParams)
}

::google::protobuf::uint8* InvitationParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.InvitationParams)
  // optional string invitation_message = 1 [deprecated = true];
  if (has_invitation_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_message().data(), this->invitation_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "invitation_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->invitation_message(), target);
  }

  // optional uint64 expiration_time = 2;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->expiration_time(), target);
  }

  // Extension range [100, 10000)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 10000, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.InvitationParams)
  return target;
}

int InvitationParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string invitation_message = 1 [deprecated = true];
    if (has_invitation_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitation_message());
    }

    // optional uint64 expiration_time = 2;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiration_time());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvitationParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvitationParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvitationParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvitationParams::MergeFrom(const InvitationParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invitation_message()) {
      set_invitation_message(from.invitation_message());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvitationParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvitationParams::CopyFrom(const InvitationParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitationParams::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void InvitationParams::Swap(InvitationParams* other) {
  if (other != this) {
    std::swap(invitation_message_, other->invitation_message_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata InvitationParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvitationParams_descriptor_;
  metadata.reflection = InvitationParams_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
