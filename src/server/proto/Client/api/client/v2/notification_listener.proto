syntax = "proto2";

import "rpc_types.proto";
import "api/client/v2/notification_types.proto";
package bgs.protocol.notification.v2.client;

option optimize_for = CODE_SIZE;
option cc_generic_services = false;

message NotificationReceivedNotification {
  repeated .bgs.protocol.notification.v2.client.Notification notifications = 1;
}

service NotificationListener {
  option (.bgs.protocol.service_options) = {
    descriptor_name: "bnet.protocol.notification.v2.client.NotificationListener"
    type: SERVICE_TYPE_RPC_DIRECT
  };
  option (.bgs.protocol.sdk_service_options) = {
    inbound: true
    use_client_id: true
  };
  rpc OnNotificationReceived(.bgs.protocol.notification.v2.client.NotificationReceivedNotification) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 1
    };
  }
}
