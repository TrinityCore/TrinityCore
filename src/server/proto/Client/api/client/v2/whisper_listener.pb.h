// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v2/whisper_listener.proto

#ifndef PROTOBUF_api_2fclient_2fv2_2fwhisper_5flistener_2eproto__INCLUDED
#define PROTOBUF_api_2fclient_2fv2_2fwhisper_5flistener_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "api/common/v1/message_types.pb.h"
#include "api/common/v2/game_account_handle.pb.h"
#include "api/common/v2/whisper_types.pb.h"
#include "rpc_types.pb.h"
#include "ServiceBase.h"
#include "MessageBuffer.h"
#include <functional>
#include <type_traits>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace whisper {
namespace v2 {
namespace client {

// Internal implementation detail -- do not call these.
void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

class WhisperNotification;
class WhisperEchoNotification;
class WhisperUpdatedNotification;
class TypingIndicatorNotification;
class AdvanceViewTimeNotification;
class AdvanceClearTimeNotification;

// ===================================================================

class TC_PROTO_API WhisperNotification : public ::google::protobuf::Message {
 public:
  WhisperNotification();
  virtual ~WhisperNotification();

  WhisperNotification(const WhisperNotification& from);

  inline WhisperNotification& operator=(const WhisperNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhisperNotification& default_instance();

  void Swap(WhisperNotification* other);

  // implements Message ----------------------------------------------

  WhisperNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
  inline bool has_whisper() const;
  inline void clear_whisper();
  static const int kWhisperFieldNumber = 2;
  inline const ::bgs::protocol::whisper::v2::Whisper& whisper() const;
  inline ::bgs::protocol::whisper::v2::Whisper* mutable_whisper();
  inline ::bgs::protocol::whisper::v2::Whisper* release_whisper();
  inline void set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper);

  // optional string target_battle_tag = 3;
  inline bool has_target_battle_tag() const;
  inline void clear_target_battle_tag();
  static const int kTargetBattleTagFieldNumber = 3;
  inline const ::std::string& target_battle_tag() const;
  inline void set_target_battle_tag(const ::std::string& value);
  inline void set_target_battle_tag(const char* value);
  inline void set_target_battle_tag(const char* value, size_t size);
  inline ::std::string* mutable_target_battle_tag();
  inline ::std::string* release_target_battle_tag();
  inline void set_allocated_target_battle_tag(::std::string* target_battle_tag);

  // optional .bgs.protocol.account.v2.GameAccountHandle target_game_account = 4;
  inline bool has_target_game_account() const;
  inline void clear_target_game_account();
  static const int kTargetGameAccountFieldNumber = 4;
  inline const ::bgs::protocol::account::v2::GameAccountHandle& target_game_account() const;
  inline ::bgs::protocol::account::v2::GameAccountHandle* mutable_target_game_account();
  inline ::bgs::protocol::account::v2::GameAccountHandle* release_target_game_account();
  inline void set_allocated_target_game_account(::bgs::protocol::account::v2::GameAccountHandle* target_game_account);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.WhisperNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_whisper();
  inline void clear_has_whisper();
  inline void set_has_target_battle_tag();
  inline void clear_has_target_battle_tag();
  inline void set_has_target_game_account();
  inline void clear_has_target_game_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::bgs::protocol::whisper::v2::Whisper* whisper_;
  ::std::string* target_battle_tag_;
  ::bgs::protocol::account::v2::GameAccountHandle* target_game_account_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static WhisperNotification* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API WhisperEchoNotification : public ::google::protobuf::Message {
 public:
  WhisperEchoNotification();
  virtual ~WhisperEchoNotification();

  WhisperEchoNotification(const WhisperEchoNotification& from);

  inline WhisperEchoNotification& operator=(const WhisperEchoNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhisperEchoNotification& default_instance();

  void Swap(WhisperEchoNotification* other);

  // implements Message ----------------------------------------------

  WhisperEchoNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
  inline bool has_whisper() const;
  inline void clear_whisper();
  static const int kWhisperFieldNumber = 2;
  inline const ::bgs::protocol::whisper::v2::Whisper& whisper() const;
  inline ::bgs::protocol::whisper::v2::Whisper* mutable_whisper();
  inline ::bgs::protocol::whisper::v2::Whisper* release_whisper();
  inline void set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper);

  // optional uint32 message_origin = 3;
  inline bool has_message_origin() const;
  inline void clear_message_origin();
  static const int kMessageOriginFieldNumber = 3;
  inline ::google::protobuf::uint32 message_origin() const;
  inline void set_message_origin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.WhisperEchoNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_whisper();
  inline void clear_has_whisper();
  inline void set_has_message_origin();
  inline void clear_has_message_origin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::bgs::protocol::whisper::v2::Whisper* whisper_;
  ::google::protobuf::uint32 message_origin_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static WhisperEchoNotification* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API WhisperUpdatedNotification : public ::google::protobuf::Message {
 public:
  WhisperUpdatedNotification();
  virtual ~WhisperUpdatedNotification();

  WhisperUpdatedNotification(const WhisperUpdatedNotification& from);

  inline WhisperUpdatedNotification& operator=(const WhisperUpdatedNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhisperUpdatedNotification& default_instance();

  void Swap(WhisperUpdatedNotification* other);

  // implements Message ----------------------------------------------

  WhisperUpdatedNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
  inline bool has_whisper() const;
  inline void clear_whisper();
  static const int kWhisperFieldNumber = 2;
  inline const ::bgs::protocol::whisper::v2::Whisper& whisper() const;
  inline ::bgs::protocol::whisper::v2::Whisper* mutable_whisper();
  inline ::bgs::protocol::whisper::v2::Whisper* release_whisper();
  inline void set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_whisper();
  inline void clear_has_whisper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::bgs::protocol::whisper::v2::Whisper* whisper_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static WhisperUpdatedNotification* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API TypingIndicatorNotification : public ::google::protobuf::Message {
 public:
  TypingIndicatorNotification();
  virtual ~TypingIndicatorNotification();

  TypingIndicatorNotification(const TypingIndicatorNotification& from);

  inline TypingIndicatorNotification& operator=(const TypingIndicatorNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypingIndicatorNotification& default_instance();

  void Swap(TypingIndicatorNotification* other);

  // implements Message ----------------------------------------------

  TypingIndicatorNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional uint64 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.TypingIndicator indicator = 3;
  inline bool has_indicator() const;
  inline void clear_indicator();
  static const int kIndicatorFieldNumber = 3;
  inline ::bgs::protocol::TypingIndicator indicator() const;
  inline void set_indicator(::bgs::protocol::TypingIndicator value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.TypingIndicatorNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_indicator();
  inline void clear_has_indicator();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::google::protobuf::uint64 target_account_id_;
  int indicator_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static TypingIndicatorNotification* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AdvanceViewTimeNotification : public ::google::protobuf::Message {
 public:
  AdvanceViewTimeNotification();
  virtual ~AdvanceViewTimeNotification();

  AdvanceViewTimeNotification(const AdvanceViewTimeNotification& from);

  inline AdvanceViewTimeNotification& operator=(const AdvanceViewTimeNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvanceViewTimeNotification& default_instance();

  void Swap(AdvanceViewTimeNotification* other);

  // implements Message ----------------------------------------------

  AdvanceViewTimeNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional uint64 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint64 value);

  // optional uint64 view_time_us = 3;
  inline bool has_view_time_us() const;
  inline void clear_view_time_us();
  static const int kViewTimeUsFieldNumber = 3;
  inline ::google::protobuf::uint64 view_time_us() const;
  inline void set_view_time_us(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_view_time_us();
  inline void clear_has_view_time_us();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::google::protobuf::uint64 target_account_id_;
  ::google::protobuf::uint64 view_time_us_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static AdvanceViewTimeNotification* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AdvanceClearTimeNotification : public ::google::protobuf::Message {
 public:
  AdvanceClearTimeNotification();
  virtual ~AdvanceClearTimeNotification();

  AdvanceClearTimeNotification(const AdvanceClearTimeNotification& from);

  inline AdvanceClearTimeNotification& operator=(const AdvanceClearTimeNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvanceClearTimeNotification& default_instance();

  void Swap(AdvanceClearTimeNotification* other);

  // implements Message ----------------------------------------------

  AdvanceClearTimeNotification* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 subscriber_account_id = 1;
  inline bool has_subscriber_account_id() const;
  inline void clear_subscriber_account_id();
  static const int kSubscriberAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber_account_id() const;
  inline void set_subscriber_account_id(::google::protobuf::uint64 value);

  // optional uint64 target_account_id = 2;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::uint64 value);

  // optional uint64 clear_time_us = 3;
  inline bool has_clear_time_us() const;
  inline void clear_clear_time_us();
  static const int kClearTimeUsFieldNumber = 3;
  inline ::google::protobuf::uint64 clear_time_us() const;
  inline void set_clear_time_us(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification)
 private:
  inline void set_has_subscriber_account_id();
  inline void clear_has_subscriber_account_id();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();
  inline void set_has_clear_time_us();
  inline void clear_has_clear_time_us();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_account_id_;
  ::google::protobuf::uint64 target_account_id_;
  ::google::protobuf::uint64 clear_time_us_;
  friend void TC_PROTO_API protobuf_AddDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_AssignDesc_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();
  friend void protobuf_ShutdownFile_api_2fclient_2fv2_2fwhisper_5flistener_2eproto();

  void InitAsDefaultInstance();
  static AdvanceClearTimeNotification* default_instance_;
};
// ===================================================================

class TC_PROTO_API WhisperListener : public ServiceBase
{
 public:

  explicit WhisperListener(bool use_original_hash);
  WhisperListener(WhisperListener const&) = delete;
  WhisperListener(WhisperListener&&) = delete;
  WhisperListener& operator=(WhisperListener const&) = delete;
  WhisperListener& operator=(WhisperListener&&) = delete;
  virtual ~WhisperListener();

  typedef std::integral_constant<uint32, 0x62615E21u> OriginalHash;
  typedef std::integral_constant<uint32, 0x2A6F55F4u> NameHash;

  static google::protobuf::ServiceDescriptor const* descriptor();

  // client methods --------------------------------------------------
  void OnWhisper(::bgs::protocol::whisper::v2::client::WhisperNotification const* request, bool client = false, bool server = false);
  void OnWhisperEcho(::bgs::protocol::whisper::v2::client::WhisperEchoNotification const* request, bool client = false, bool server = false);
  void OnWhisperUpdated(::bgs::protocol::whisper::v2::client::WhisperUpdatedNotification const* request, bool client = false, bool server = false);
  void OnAdvanceViewTime(::bgs::protocol::whisper::v2::client::AdvanceViewTimeNotification const* request, bool client = false, bool server = false);
  void OnAdvanceClearTime(::bgs::protocol::whisper::v2::client::AdvanceClearTimeNotification const* request, bool client = false, bool server = false);
  void OnTypingIndicator(::bgs::protocol::whisper::v2::client::TypingIndicatorNotification const* request, bool client = false, bool server = false);

  void CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) final;
};

// ===================================================================

// ===================================================================

// WhisperNotification

// optional uint64 subscriber_account_id = 1;
inline bool WhisperNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WhisperNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WhisperNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WhisperNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 WhisperNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void WhisperNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.WhisperNotification.subscriber_account_id)
}

// optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
inline bool WhisperNotification::has_whisper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WhisperNotification::set_has_whisper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WhisperNotification::clear_has_whisper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WhisperNotification::clear_whisper() {
  if (whisper_ != NULL) whisper_->::bgs::protocol::whisper::v2::Whisper::Clear();
  clear_has_whisper();
}
inline const ::bgs::protocol::whisper::v2::Whisper& WhisperNotification::whisper() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperNotification.whisper)
  return whisper_ != NULL ? *whisper_ : *default_instance_->whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperNotification::mutable_whisper() {
  set_has_whisper();
  if (whisper_ == NULL) whisper_ = new ::bgs::protocol::whisper::v2::Whisper;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.whisper.v2.client.WhisperNotification.whisper)
  return whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperNotification::release_whisper() {
  clear_has_whisper();
  ::bgs::protocol::whisper::v2::Whisper* temp = whisper_;
  whisper_ = NULL;
  return temp;
}
inline void WhisperNotification::set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper) {
  delete whisper_;
  whisper_ = whisper;
  if (whisper) {
    set_has_whisper();
  } else {
    clear_has_whisper();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.whisper.v2.client.WhisperNotification.whisper)
}

// optional string target_battle_tag = 3;
inline bool WhisperNotification::has_target_battle_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WhisperNotification::set_has_target_battle_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WhisperNotification::clear_has_target_battle_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WhisperNotification::clear_target_battle_tag() {
  if (target_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_->clear();
  }
  clear_has_target_battle_tag();
}
inline const ::std::string& WhisperNotification::target_battle_tag() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
  return *target_battle_tag_;
}
inline void WhisperNotification::set_target_battle_tag(const ::std::string& value) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
}
inline void WhisperNotification::set_target_battle_tag(const char* value) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
}
inline void WhisperNotification::set_target_battle_tag(const char* value, size_t size) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
}
inline ::std::string* WhisperNotification::mutable_target_battle_tag() {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
  return target_battle_tag_;
}
inline ::std::string* WhisperNotification::release_target_battle_tag() {
  clear_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_battle_tag_;
    target_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WhisperNotification::set_allocated_target_battle_tag(::std::string* target_battle_tag) {
  if (target_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_battle_tag_;
  }
  if (target_battle_tag) {
    set_has_target_battle_tag();
    target_battle_tag_ = target_battle_tag;
  } else {
    clear_has_target_battle_tag();
    target_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.whisper.v2.client.WhisperNotification.target_battle_tag)
}

// optional .bgs.protocol.account.v2.GameAccountHandle target_game_account = 4;
inline bool WhisperNotification::has_target_game_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WhisperNotification::set_has_target_game_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WhisperNotification::clear_has_target_game_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WhisperNotification::clear_target_game_account() {
  if (target_game_account_ != NULL) target_game_account_->::bgs::protocol::account::v2::GameAccountHandle::Clear();
  clear_has_target_game_account();
}
inline const ::bgs::protocol::account::v2::GameAccountHandle& WhisperNotification::target_game_account() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperNotification.target_game_account)
  return target_game_account_ != NULL ? *target_game_account_ : *default_instance_->target_game_account_;
}
inline ::bgs::protocol::account::v2::GameAccountHandle* WhisperNotification::mutable_target_game_account() {
  set_has_target_game_account();
  if (target_game_account_ == NULL) target_game_account_ = new ::bgs::protocol::account::v2::GameAccountHandle;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.whisper.v2.client.WhisperNotification.target_game_account)
  return target_game_account_;
}
inline ::bgs::protocol::account::v2::GameAccountHandle* WhisperNotification::release_target_game_account() {
  clear_has_target_game_account();
  ::bgs::protocol::account::v2::GameAccountHandle* temp = target_game_account_;
  target_game_account_ = NULL;
  return temp;
}
inline void WhisperNotification::set_allocated_target_game_account(::bgs::protocol::account::v2::GameAccountHandle* target_game_account) {
  delete target_game_account_;
  target_game_account_ = target_game_account;
  if (target_game_account) {
    set_has_target_game_account();
  } else {
    clear_has_target_game_account();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.whisper.v2.client.WhisperNotification.target_game_account)
}

// -------------------------------------------------------------------

// WhisperEchoNotification

// optional uint64 subscriber_account_id = 1;
inline bool WhisperEchoNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WhisperEchoNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WhisperEchoNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WhisperEchoNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 WhisperEchoNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperEchoNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void WhisperEchoNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.WhisperEchoNotification.subscriber_account_id)
}

// optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
inline bool WhisperEchoNotification::has_whisper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WhisperEchoNotification::set_has_whisper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WhisperEchoNotification::clear_has_whisper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WhisperEchoNotification::clear_whisper() {
  if (whisper_ != NULL) whisper_->::bgs::protocol::whisper::v2::Whisper::Clear();
  clear_has_whisper();
}
inline const ::bgs::protocol::whisper::v2::Whisper& WhisperEchoNotification::whisper() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperEchoNotification.whisper)
  return whisper_ != NULL ? *whisper_ : *default_instance_->whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperEchoNotification::mutable_whisper() {
  set_has_whisper();
  if (whisper_ == NULL) whisper_ = new ::bgs::protocol::whisper::v2::Whisper;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.whisper.v2.client.WhisperEchoNotification.whisper)
  return whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperEchoNotification::release_whisper() {
  clear_has_whisper();
  ::bgs::protocol::whisper::v2::Whisper* temp = whisper_;
  whisper_ = NULL;
  return temp;
}
inline void WhisperEchoNotification::set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper) {
  delete whisper_;
  whisper_ = whisper;
  if (whisper) {
    set_has_whisper();
  } else {
    clear_has_whisper();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.whisper.v2.client.WhisperEchoNotification.whisper)
}

// optional uint32 message_origin = 3;
inline bool WhisperEchoNotification::has_message_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WhisperEchoNotification::set_has_message_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WhisperEchoNotification::clear_has_message_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WhisperEchoNotification::clear_message_origin() {
  message_origin_ = 0u;
  clear_has_message_origin();
}
inline ::google::protobuf::uint32 WhisperEchoNotification::message_origin() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperEchoNotification.message_origin)
  return message_origin_;
}
inline void WhisperEchoNotification::set_message_origin(::google::protobuf::uint32 value) {
  set_has_message_origin();
  message_origin_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.WhisperEchoNotification.message_origin)
}

// -------------------------------------------------------------------

// WhisperUpdatedNotification

// optional uint64 subscriber_account_id = 1;
inline bool WhisperUpdatedNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WhisperUpdatedNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WhisperUpdatedNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WhisperUpdatedNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 WhisperUpdatedNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void WhisperUpdatedNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification.subscriber_account_id)
}

// optional .bgs.protocol.whisper.v2.Whisper whisper = 2;
inline bool WhisperUpdatedNotification::has_whisper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WhisperUpdatedNotification::set_has_whisper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WhisperUpdatedNotification::clear_has_whisper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WhisperUpdatedNotification::clear_whisper() {
  if (whisper_ != NULL) whisper_->::bgs::protocol::whisper::v2::Whisper::Clear();
  clear_has_whisper();
}
inline const ::bgs::protocol::whisper::v2::Whisper& WhisperUpdatedNotification::whisper() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification.whisper)
  return whisper_ != NULL ? *whisper_ : *default_instance_->whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperUpdatedNotification::mutable_whisper() {
  set_has_whisper();
  if (whisper_ == NULL) whisper_ = new ::bgs::protocol::whisper::v2::Whisper;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification.whisper)
  return whisper_;
}
inline ::bgs::protocol::whisper::v2::Whisper* WhisperUpdatedNotification::release_whisper() {
  clear_has_whisper();
  ::bgs::protocol::whisper::v2::Whisper* temp = whisper_;
  whisper_ = NULL;
  return temp;
}
inline void WhisperUpdatedNotification::set_allocated_whisper(::bgs::protocol::whisper::v2::Whisper* whisper) {
  delete whisper_;
  whisper_ = whisper;
  if (whisper) {
    set_has_whisper();
  } else {
    clear_has_whisper();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.whisper.v2.client.WhisperUpdatedNotification.whisper)
}

// -------------------------------------------------------------------

// TypingIndicatorNotification

// optional uint64 subscriber_account_id = 1;
inline bool TypingIndicatorNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypingIndicatorNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypingIndicatorNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypingIndicatorNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 TypingIndicatorNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void TypingIndicatorNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.subscriber_account_id)
}

// optional uint64 target_account_id = 2;
inline bool TypingIndicatorNotification::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypingIndicatorNotification::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypingIndicatorNotification::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypingIndicatorNotification::clear_target_account_id() {
  target_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_account_id();
}
inline ::google::protobuf::uint64 TypingIndicatorNotification::target_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.target_account_id)
  return target_account_id_;
}
inline void TypingIndicatorNotification::set_target_account_id(::google::protobuf::uint64 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.target_account_id)
}

// optional .bgs.protocol.TypingIndicator indicator = 3;
inline bool TypingIndicatorNotification::has_indicator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TypingIndicatorNotification::set_has_indicator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TypingIndicatorNotification::clear_has_indicator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TypingIndicatorNotification::clear_indicator() {
  indicator_ = 0;
  clear_has_indicator();
}
inline ::bgs::protocol::TypingIndicator TypingIndicatorNotification::indicator() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.indicator)
  return static_cast< ::bgs::protocol::TypingIndicator >(indicator_);
}
inline void TypingIndicatorNotification::set_indicator(::bgs::protocol::TypingIndicator value) {
  assert(::bgs::protocol::TypingIndicator_IsValid(value));
  set_has_indicator();
  indicator_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.TypingIndicatorNotification.indicator)
}

// -------------------------------------------------------------------

// AdvanceViewTimeNotification

// optional uint64 subscriber_account_id = 1;
inline bool AdvanceViewTimeNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvanceViewTimeNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvanceViewTimeNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvanceViewTimeNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 AdvanceViewTimeNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void AdvanceViewTimeNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.subscriber_account_id)
}

// optional uint64 target_account_id = 2;
inline bool AdvanceViewTimeNotification::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvanceViewTimeNotification::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvanceViewTimeNotification::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvanceViewTimeNotification::clear_target_account_id() {
  target_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_account_id();
}
inline ::google::protobuf::uint64 AdvanceViewTimeNotification::target_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.target_account_id)
  return target_account_id_;
}
inline void AdvanceViewTimeNotification::set_target_account_id(::google::protobuf::uint64 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.target_account_id)
}

// optional uint64 view_time_us = 3;
inline bool AdvanceViewTimeNotification::has_view_time_us() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdvanceViewTimeNotification::set_has_view_time_us() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdvanceViewTimeNotification::clear_has_view_time_us() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdvanceViewTimeNotification::clear_view_time_us() {
  view_time_us_ = GOOGLE_ULONGLONG(0);
  clear_has_view_time_us();
}
inline ::google::protobuf::uint64 AdvanceViewTimeNotification::view_time_us() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.view_time_us)
  return view_time_us_;
}
inline void AdvanceViewTimeNotification::set_view_time_us(::google::protobuf::uint64 value) {
  set_has_view_time_us();
  view_time_us_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceViewTimeNotification.view_time_us)
}

// -------------------------------------------------------------------

// AdvanceClearTimeNotification

// optional uint64 subscriber_account_id = 1;
inline bool AdvanceClearTimeNotification::has_subscriber_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvanceClearTimeNotification::set_has_subscriber_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvanceClearTimeNotification::clear_has_subscriber_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvanceClearTimeNotification::clear_subscriber_account_id() {
  subscriber_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber_account_id();
}
inline ::google::protobuf::uint64 AdvanceClearTimeNotification::subscriber_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.subscriber_account_id)
  return subscriber_account_id_;
}
inline void AdvanceClearTimeNotification::set_subscriber_account_id(::google::protobuf::uint64 value) {
  set_has_subscriber_account_id();
  subscriber_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.subscriber_account_id)
}

// optional uint64 target_account_id = 2;
inline bool AdvanceClearTimeNotification::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvanceClearTimeNotification::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvanceClearTimeNotification::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvanceClearTimeNotification::clear_target_account_id() {
  target_account_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_account_id();
}
inline ::google::protobuf::uint64 AdvanceClearTimeNotification::target_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.target_account_id)
  return target_account_id_;
}
inline void AdvanceClearTimeNotification::set_target_account_id(::google::protobuf::uint64 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.target_account_id)
}

// optional uint64 clear_time_us = 3;
inline bool AdvanceClearTimeNotification::has_clear_time_us() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdvanceClearTimeNotification::set_has_clear_time_us() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdvanceClearTimeNotification::clear_has_clear_time_us() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdvanceClearTimeNotification::clear_clear_time_us() {
  clear_time_us_ = GOOGLE_ULONGLONG(0);
  clear_has_clear_time_us();
}
inline ::google::protobuf::uint64 AdvanceClearTimeNotification::clear_time_us() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.clear_time_us)
  return clear_time_us_;
}
inline void AdvanceClearTimeNotification::set_clear_time_us(::google::protobuf::uint64 value) {
  set_has_clear_time_us();
  clear_time_us_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.whisper.v2.client.AdvanceClearTimeNotification.clear_time_us)
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace v2
}  // namespace whisper
}  // namespace protocol
}  // namespace bgs

#ifndef SWIG
namespace google {
namespace protobuf {
}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2fclient_2fv2_2fwhisper_5flistener_2eproto__INCLUDED
