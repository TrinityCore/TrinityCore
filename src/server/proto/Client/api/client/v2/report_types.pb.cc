// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v2/report_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/client/v2/report_types.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace report {
namespace v2 {

namespace {

const ::google::protobuf::Descriptor* ReportItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportItem_reflection_ = NULL;
struct ReportItemOneofInstance {
  const ::bgs::protocol::MessageId* message_id_;
}* ReportItem_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* UserOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityOptions_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* IssueType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* UserSource_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ClubSource_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto() {
  protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/client/v2/report_types.proto");
  GOOGLE_CHECK(file != NULL);
  ReportItem_descriptor_ = file->message_type(0);
  static const int ReportItem_offsets_[2] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportItem_default_oneof_instance_, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportItem, type_),
  };
  ReportItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReportItem_descriptor_,
      ReportItem::default_instance_,
      ReportItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportItem, _unknown_fields_),
      -1,
      ReportItem_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportItem, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReportItem));
  UserOptions_descriptor_ = file->message_type(1);
  static const int UserOptions_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, item_),
  };
  UserOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserOptions_descriptor_,
      UserOptions::default_instance_,
      UserOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserOptions));
  ClubOptions_descriptor_ = file->message_type(2);
  static const int ClubOptions_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, item_),
  };
  ClubOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubOptions_descriptor_,
      ClubOptions::default_instance_,
      ClubOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubOptions));
  EntityOptions_descriptor_ = file->message_type(3);
  static const int EntityOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityOptions, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityOptions, entity_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityOptions, attribute_),
  };
  EntityOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EntityOptions_descriptor_,
      EntityOptions::default_instance_,
      EntityOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EntityOptions));
  IssueType_descriptor_ = file->enum_type(0);
  UserSource_descriptor_ = file->enum_type(1);
  ClubSource_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReportItem_descriptor_, &ReportItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserOptions_descriptor_, &UserOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubOptions_descriptor_, &ClubOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EntityOptions_descriptor_, &EntityOptions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2fclient_2fv2_2freport_5ftypes_2eproto() {
  delete ReportItem::default_instance_;
  delete ReportItem_default_oneof_instance_;
  delete ReportItem_reflection_;
  delete UserOptions::default_instance_;
  delete UserOptions_reflection_;
  delete ClubOptions::default_instance_;
  delete ClubOptions_reflection_;
  delete EntityOptions::default_instance_;
  delete EntityOptions_reflection_;
}

void protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::v2::protobuf_AddDesc_api_2fclient_2fv2_2fattribute_5ftypes_2eproto();
  ::bgs::protocol::account::v1::protobuf_AddDesc_account_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_message_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n api/client/v2/report_types.proto\022\026bgs."
    "protocol.report.v2\032#api/client/v2/attrib"
    "ute_types.proto\032\023account_types.proto\032\017rp"
    "c_types.proto\032\023message_types.proto\"C\n\nRe"
    "portItem\022-\n\nmessage_id\030\001 \001(\0132\027.bgs.proto"
    "col.MessageIdH\000B\006\n\004type\"\333\001\n\013UserOptions\022"
    "5\n\ttarget_id\030\001 \001(\0132\".bgs.protocol.accoun"
    "t.v1.AccountId\022/\n\004type\030\002 \001(\0162!.bgs.proto"
    "col.report.v2.IssueType\0222\n\006source\030\003 \001(\0162"
    "\".bgs.protocol.report.v2.UserSource\0220\n\004i"
    "tem\030\004 \001(\0132\".bgs.protocol.report.v2.Repor"
    "tItem\"\310\001\n\013ClubOptions\022\017\n\007club_id\030\001 \001(\004\022\021"
    "\n\tstream_id\030\002 \001(\004\022/\n\004type\030\003 \001(\0162!.bgs.pr"
    "otocol.report.v2.IssueType\0222\n\006source\030\004 \001"
    "(\0162\".bgs.protocol.report.v2.ClubSource\0220"
    "\n\004item\030\005 \001(\0132\".bgs.protocol.report.v2.Re"
    "portItem\"\203\001\n\rEntityOptions\022 \n\tentity_id\030"
    "\001 \001(\tB\r\212\371+\t\"\007\n\005\010\001\020\310\001\022!\n\013entity_type\030\002 \001("
    "\tB\014\212\371+\010\"\006\n\004\010\001\020d\022-\n\tattribute\030\005 \003(\0132\032.bgs"
    ".protocol.v2.Attribute*\215\001\n\tIssueType\022\023\n\017"
    "ISSUE_TYPE_SPAM\020\000\022\031\n\025ISSUE_TYPE_HARASSME"
    "NT\020\001\022 \n\034ISSUE_TYPE_OFFENSIVE_CONTENT\020\003\022\026"
    "\n\022ISSUE_TYPE_HACKING\020\004\022\026\n\022ISSUE_TYPE_BOT"
    "TING\020\005*\301\001\n\nUserSource\022\025\n\021USER_SOURCE_OTH"
    "ER\020\000\022\027\n\023USER_SOURCE_WHISPER\020\001\022\027\n\023USER_SO"
    "URCE_PROFILE\020\002\022\032\n\026USER_SOURCE_BATTLE_TAG"
    "\020\003\022\024\n\020USER_SOURCE_CHAT\020\004\022!\n\035USER_SOURCE_"
    "FRIEND_INVITATION\020\005\022\025\n\021USER_SOURCE_VOICE"
    "\020\006*t\n\nClubSource\022\025\n\021CLUB_SOURCE_OTHER\020\000\022"
    "\027\n\023CLUB_SOURCE_MESSAGE\020\001\022\031\n\025CLUB_SOURCE_"
    "CLUB_NAME\020\002\022\033\n\027CLUB_SOURCE_STREAM_NAME\020\003"
    "B\005H\002\200\001\000", 1247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/client/v2/report_types.proto", &protobuf_RegisterTypes);
  ReportItem::default_instance_ = new ReportItem();
  ReportItem_default_oneof_instance_ = new ReportItemOneofInstance;
  UserOptions::default_instance_ = new UserOptions();
  ClubOptions::default_instance_ = new ClubOptions();
  EntityOptions::default_instance_ = new EntityOptions();
  ReportItem::default_instance_->InitAsDefaultInstance();
  UserOptions::default_instance_->InitAsDefaultInstance();
  ClubOptions::default_instance_->InitAsDefaultInstance();
  EntityOptions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fclient_2fv2_2freport_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fclient_2fv2_2freport_5ftypes_2eproto {
  StaticDescriptorInitializer_api_2fclient_2fv2_2freport_5ftypes_2eproto() {
    protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  }
} static_descriptor_initializer_api_2fclient_2fv2_2freport_5ftypes_2eproto_;
const ::google::protobuf::EnumDescriptor* IssueType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IssueType_descriptor_;
}
bool IssueType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UserSource_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserSource_descriptor_;
}
bool UserSource_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClubSource_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubSource_descriptor_;
}
bool ClubSource_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

// ===================================================================

#ifndef _MSC_VER
const int ReportItem::kMessageIdFieldNumber;
#endif  // !_MSC_VER

ReportItem::ReportItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v2.ReportItem)
}

void ReportItem::InitAsDefaultInstance() {
  ReportItem_default_oneof_instance_->message_id_ = const_cast< ::bgs::protocol::MessageId*>(&::bgs::protocol::MessageId::default_instance());
}

ReportItem::ReportItem(const ReportItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v2.ReportItem)
}

void ReportItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_type();
}

ReportItem::~ReportItem() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v2.ReportItem)
  SharedDtor();
}

void ReportItem::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
  if (this != default_instance_) {
  }
}

void ReportItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportItem_descriptor_;
}

const ReportItem& ReportItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  return *default_instance_;
}

ReportItem* ReportItem::default_instance_ = NULL;

ReportItem* ReportItem::New() const {
  return new ReportItem;
}

void ReportItem::clear_type() {
  switch(type_case()) {
    case kMessageId: {
      delete type_.message_id_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}

void ReportItem::Swap(ReportItem* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ReportItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportItem_descriptor_;
  metadata.reflection = ReportItem_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UserOptions::kTargetIdFieldNumber;
const int UserOptions::kTypeFieldNumber;
const int UserOptions::kSourceFieldNumber;
const int UserOptions::kItemFieldNumber;
#endif  // !_MSC_VER

UserOptions::UserOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v2.UserOptions)
}

void UserOptions::InitAsDefaultInstance() {
  target_id_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  item_ = const_cast< ::bgs::protocol::report::v2::ReportItem*>(&::bgs::protocol::report::v2::ReportItem::default_instance());
}

UserOptions::UserOptions(const UserOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v2.UserOptions)
}

void UserOptions::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = NULL;
  type_ = 0;
  source_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserOptions::~UserOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v2.UserOptions)
  SharedDtor();
}

void UserOptions::SharedDtor() {
  if (this != default_instance_) {
    delete target_id_;
    delete item_;
  }
}

void UserOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserOptions_descriptor_;
}

const UserOptions& UserOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  return *default_instance_;
}

UserOptions* UserOptions::default_instance_ = NULL;

UserOptions* UserOptions::New() const {
  return new UserOptions;
}

void UserOptions::Swap(UserOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UserOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserOptions_descriptor_;
  metadata.reflection = UserOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubOptions::kClubIdFieldNumber;
const int ClubOptions::kStreamIdFieldNumber;
const int ClubOptions::kTypeFieldNumber;
const int ClubOptions::kSourceFieldNumber;
const int ClubOptions::kItemFieldNumber;
#endif  // !_MSC_VER

ClubOptions::ClubOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v2.ClubOptions)
}

void ClubOptions::InitAsDefaultInstance() {
  item_ = const_cast< ::bgs::protocol::report::v2::ReportItem*>(&::bgs::protocol::report::v2::ReportItem::default_instance());
}

ClubOptions::ClubOptions(const ClubOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v2.ClubOptions)
}

void ClubOptions::SharedCtor() {
  _cached_size_ = 0;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  type_ = 0;
  source_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubOptions::~ClubOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v2.ClubOptions)
  SharedDtor();
}

void ClubOptions::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void ClubOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubOptions_descriptor_;
}

const ClubOptions& ClubOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  return *default_instance_;
}

ClubOptions* ClubOptions::default_instance_ = NULL;

ClubOptions* ClubOptions::New() const {
  return new ClubOptions;
}

void ClubOptions::Swap(ClubOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubOptions_descriptor_;
  metadata.reflection = ClubOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int EntityOptions::kEntityIdFieldNumber;
const int EntityOptions::kEntityTypeFieldNumber;
const int EntityOptions::kAttributeFieldNumber;
#endif  // !_MSC_VER

EntityOptions::EntityOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v2.EntityOptions)
}

void EntityOptions::InitAsDefaultInstance() {
}

EntityOptions::EntityOptions(const EntityOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v2.EntityOptions)
}

void EntityOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entity_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityOptions::~EntityOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v2.EntityOptions)
  SharedDtor();
}

void EntityOptions::SharedDtor() {
  if (entity_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entity_id_;
  }
  if (entity_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entity_type_;
  }
  if (this != default_instance_) {
  }
}

void EntityOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityOptions_descriptor_;
}

const EntityOptions& EntityOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv2_2freport_5ftypes_2eproto();
  return *default_instance_;
}

EntityOptions* EntityOptions::default_instance_ = NULL;

EntityOptions* EntityOptions::New() const {
  return new EntityOptions;
}

void EntityOptions::Swap(EntityOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata EntityOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityOptions_descriptor_;
  metadata.reflection = EntityOptions_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace report
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
