// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v1/club_core.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/client/v1/club_core.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
namespace client {

namespace {

const ::google::protobuf::Descriptor* SetBroadcastOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetBroadcastOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* Broadcast_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Broadcast_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubCreateOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubCreateOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* Club_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Club_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubView_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubView_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubStateOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubStateOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubStateAssignment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubStateAssignment_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubSettingsOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubSettingsOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubSettingsAssignment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubSettingsAssignment_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto() {
  protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/client/v1/club_core.proto");
  GOOGLE_CHECK(file != NULL);
  SetBroadcastOptions_descriptor_ = file->message_type(0);
  static const int SetBroadcastOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBroadcastOptions, content_),
  };
  SetBroadcastOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetBroadcastOptions_descriptor_,
      SetBroadcastOptions::default_instance_,
      SetBroadcastOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBroadcastOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBroadcastOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetBroadcastOptions));
  Broadcast_descriptor_ = file->message_type(1);
  static const int Broadcast_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Broadcast, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Broadcast, creator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Broadcast, creation_time_),
  };
  Broadcast_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Broadcast_descriptor_,
      Broadcast::default_instance_,
      Broadcast_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Broadcast, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Broadcast, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Broadcast));
  ClubCreateOptions_descriptor_ = file->message_type(2);
  static const int ClubCreateOptions_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, visibility_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, search_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, timezone_),
  };
  ClubCreateOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubCreateOptions_descriptor_,
      ClubCreateOptions::default_instance_,
      ClubCreateOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubCreateOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubCreateOptions));
  Club_descriptor_ = file->message_type(3);
  static const int Club_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, visibility_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, member_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, creation_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, stream_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, role_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, search_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, timezone_),
  };
  Club_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Club_descriptor_,
      Club::default_instance_,
      Club_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Club, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Club));
  ClubView_descriptor_ = file->message_type(4);
  static const int ClubView_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubView, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubView, marker_),
  };
  ClubView_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubView_descriptor_,
      ClubView::default_instance_,
      ClubView_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubView, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubView, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubView));
  ClubStateOptions_descriptor_ = file->message_type(5);
  static const int ClubStateOptions_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, stream_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, visibility_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, timezone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, tag_options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, search_attribute_),
  };
  ClubStateOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubStateOptions_descriptor_,
      ClubStateOptions::default_instance_,
      ClubStateOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubStateOptions));
  ClubStateAssignment_descriptor_ = file->message_type(6);
  static const int ClubStateAssignment_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, stream_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, visibility_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, timezone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, search_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, tag_cleared_),
  };
  ClubStateAssignment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubStateAssignment_descriptor_,
      ClubStateAssignment::default_instance_,
      ClubStateAssignment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubStateAssignment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubStateAssignment));
  StreamSettings_descriptor_ = file->message_type(7);
  static const int StreamSettings_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSettings, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSettings, filter_),
  };
  StreamSettings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamSettings_descriptor_,
      StreamSettings::default_instance_,
      StreamSettings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSettings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSettings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamSettings));
  ClubSettings_descriptor_ = file->message_type(8);
  static const int ClubSettings_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, stream_notification_filter_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, push_notification_filter_all_),
  };
  ClubSettings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubSettings_descriptor_,
      ClubSettings::default_instance_,
      ClubSettings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubSettings));
  ClubSettingsOptions_descriptor_ = file->message_type(9);
  static const int ClubSettingsOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsOptions, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsOptions, settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsOptions, version_),
  };
  ClubSettingsOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubSettingsOptions_descriptor_,
      ClubSettingsOptions::default_instance_,
      ClubSettingsOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubSettingsOptions));
  ClubSettingsAssignment_descriptor_ = file->message_type(10);
  static const int ClubSettingsAssignment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsAssignment, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsAssignment, settings_),
  };
  ClubSettingsAssignment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubSettingsAssignment_descriptor_,
      ClubSettingsAssignment::default_instance_,
      ClubSettingsAssignment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsAssignment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubSettingsAssignment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubSettingsAssignment));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetBroadcastOptions_descriptor_, &SetBroadcastOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Broadcast_descriptor_, &Broadcast::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubCreateOptions_descriptor_, &ClubCreateOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Club_descriptor_, &Club::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubView_descriptor_, &ClubView::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubStateOptions_descriptor_, &ClubStateOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubStateAssignment_descriptor_, &ClubStateAssignment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamSettings_descriptor_, &StreamSettings::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubSettings_descriptor_, &ClubSettings::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubSettingsOptions_descriptor_, &ClubSettingsOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubSettingsAssignment_descriptor_, &ClubSettingsAssignment::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5fcore_2eproto() {
  delete SetBroadcastOptions::default_instance_;
  delete SetBroadcastOptions_reflection_;
  delete Broadcast::default_instance_;
  delete Broadcast_reflection_;
  delete ClubCreateOptions::default_instance_;
  delete ClubCreateOptions_reflection_;
  delete Club::default_instance_;
  delete Club_reflection_;
  delete ClubView::default_instance_;
  delete ClubView_reflection_;
  delete ClubStateOptions::default_instance_;
  delete ClubStateOptions_reflection_;
  delete ClubStateAssignment::default_instance_;
  delete ClubStateAssignment_reflection_;
  delete StreamSettings::default_instance_;
  delete StreamSettings_reflection_;
  delete ClubSettings::default_instance_;
  delete ClubSettings_reflection_;
  delete ClubSettingsOptions::default_instance_;
  delete ClubSettingsOptions_reflection_;
  delete ClubSettingsAssignment::default_instance_;
  delete ClubSettingsAssignment_reflection_;
}

void protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fenum_2eproto();
  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5frole_2eproto();
  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmember_2eproto();
  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fstream_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5ftag_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5ftype_2eproto();
  ::bgs::protocol::v2::protobuf_AddDesc_api_2fcommon_2fv2_2fattribute_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_event_5fview_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035api/client/v1/club_core.proto\022\033bgs.pro"
    "tocol.club.v1.client\032\035api/client/v1/club"
    "_enum.proto\032\035api/client/v1/club_role.pro"
    "to\032\037api/client/v1/club_member.proto\032\037api"
    "/client/v1/club_stream.proto\032\035api/common"
    "/v1/club_core.proto\032\035api/common/v1/club_"
    "enum.proto\032\034api/common/v1/club_tag.proto"
    "\032\035api/common/v1/club_type.proto\032#api/com"
    "mon/v2/attribute_types.proto\032\026event_view"
    "_types.proto\"&\n\023SetBroadcastOptions\022\017\n\007c"
    "ontent\030\001 \001(\t\"t\n\tBroadcast\022\017\n\007content\030\001 \001"
    "(\t\022\?\n\007creator\030\002 \001(\0132..bgs.protocol.club."
    "v1.client.MemberDescription\022\025\n\rcreation_"
    "time\030\003 \001(\004\"\344\004\n\021ClubCreateOptions\0222\n\004type"
    "\030\001 \001(\0132$.bgs.protocol.club.v1.UniqueClub"
    "Type\022-\n\tattribute\030\002 \003(\0132\032.bgs.protocol.v"
    "2.Attribute\022\014\n\004name\030\003 \001(\t\022\023\n\013description"
    "\030\004 \001(\t\022.\n\006avatar\030\005 \001(\0132\036.bgs.protocol.cl"
    "ub.v1.AvatarId\0229\n\rprivacy_level\030\006 \001(\0162\"."
    "bgs.protocol.club.v1.PrivacyLevel\022\022\n\nsho"
    "rt_name\030\007 \001(\t\022\?\n\020visibility_level\030\010 \001(\0162"
    "%.bgs.protocol.club.v1.VisibilityLevel\022@"
    "\n\006member\030\n \001(\01320.bgs.protocol.club.v1.cl"
    "ient.CreateMemberOptions\022@\n\006stream\030\013 \001(\013"
    "20.bgs.protocol.club.v1.client.CreateStr"
    "eamOptions\022-\n\003tag\030\014 \001(\0132 .bgs.protocol.c"
    "lub.v1.TagOptions\0224\n\020search_attribute\030\r "
    "\003(\0132\032.bgs.protocol.v2.Attribute\022\016\n\006local"
    "e\030\016 \001(\t\022\020\n\010timezone\030\017 \001(\t\"\214\006\n\004Club\022\n\n\002id"
    "\030\001 \001(\004\0222\n\004type\030\002 \001(\0132$.bgs.protocol.club"
    ".v1.UniqueClubType\022-\n\tattribute\030\003 \003(\0132\032."
    "bgs.protocol.v2.Attribute\022\014\n\004name\030\004 \001(\t\022"
    "\023\n\013description\030\005 \001(\t\0229\n\tbroadcast\030\006 \001(\0132"
    "&.bgs.protocol.club.v1.client.Broadcast\022"
    ".\n\006avatar\030\007 \001(\0132\036.bgs.protocol.club.v1.A"
    "vatarId\0229\n\rprivacy_level\030\010 \001(\0162\".bgs.pro"
    "tocol.club.v1.PrivacyLevel\022\?\n\020visibility"
    "_level\030\t \001(\0162%.bgs.protocol.club.v1.Visi"
    "bilityLevel\022\024\n\014member_count\030\n \001(\r\022\025\n\rcre"
    "ation_time\030\013 \001(\004\022D\n\017stream_position\030\014 \001("
    "\0132+.bgs.protocol.club.v1.client.StreamPo"
    "sition\022:\n\010role_set\030\r \001(\0132(.bgs.protocol."
    "club.v1.client.ClubRoleSet\022>\n\006leader\030\016 \003"
    "(\0132..bgs.protocol.club.v1.client.MemberD"
    "escription\022\022\n\nshort_name\030\017 \001(\t\0224\n\020search"
    "_attribute\030\020 \003(\0132\032.bgs.protocol.v2.Attri"
    "bute\0220\n\003tag\030\021 \003(\0132#.bgs.protocol.club.v1"
    ".TagIdentifier\022\016\n\006locale\030\022 \001(\t\022\020\n\010timezo"
    "ne\030\023 \001(\t\"E\n\010ClubView\022\017\n\007club_id\030\001 \001(\004\022(\n"
    "\006marker\030\002 \001(\0132\030.bgs.protocol.ViewMarker\""
    "\276\004\n\020ClubStateOptions\022-\n\tattribute\030\001 \003(\0132"
    "\032.bgs.protocol.v2.Attribute\022\014\n\004name\030\002 \001("
    "\t\022\023\n\013description\030\003 \001(\t\022C\n\tbroadcast\030\004 \001("
    "\01320.bgs.protocol.club.v1.client.SetBroad"
    "castOptions\022.\n\006avatar\030\005 \001(\0132\036.bgs.protoc"
    "ol.club.v1.AvatarId\0229\n\rprivacy_level\030\006 \001"
    "(\0162\".bgs.protocol.club.v1.PrivacyLevel\022D"
    "\n\017stream_position\030\007 \001(\0132+.bgs.protocol.c"
    "lub.v1.client.StreamPosition\022\022\n\nshort_na"
    "me\030\010 \001(\t\022\?\n\020visibility_level\030\t \001(\0162%.bgs"
    ".protocol.club.v1.VisibilityLevel\022\016\n\006loc"
    "ale\030\n \001(\t\022\020\n\010timezone\030\013 \001(\t\0225\n\013tag_optio"
    "ns\030\014 \001(\0132 .bgs.protocol.club.v1.TagOptio"
    "ns\0224\n\020search_attribute\030\r \003(\0132\032.bgs.proto"
    "col.v2.Attribute\"\330\004\n\023ClubStateAssignment"
    "\022\017\n\007club_id\030\001 \001(\004\022-\n\tattribute\030\002 \003(\0132\032.b"
    "gs.protocol.v2.Attribute\022\014\n\004name\030\003 \001(\t\022\023"
    "\n\013description\030\004 \001(\t\0229\n\tbroadcast\030\005 \001(\0132&"
    ".bgs.protocol.club.v1.client.Broadcast\022."
    "\n\006avatar\030\006 \001(\0132\036.bgs.protocol.club.v1.Av"
    "atarId\0229\n\rprivacy_level\030\007 \001(\0162\".bgs.prot"
    "ocol.club.v1.PrivacyLevel\022D\n\017stream_posi"
    "tion\030\010 \001(\0132+.bgs.protocol.club.v1.client"
    ".StreamPosition\022\022\n\nshort_name\030\t \001(\t\022\?\n\020v"
    "isibility_level\030\n \001(\0162%.bgs.protocol.clu"
    "b.v1.VisibilityLevel\022\016\n\006locale\030\013 \001(\t\022\020\n\010"
    "timezone\030\014 \001(\t\0220\n\003tag\030\r \003(\0132#.bgs.protoc"
    "ol.club.v1.TagIdentifier\0224\n\020search_attri"
    "bute\030\016 \003(\0132\032.bgs.protocol.v2.Attribute\022\023"
    "\n\013tag_cleared\030\017 \001(\010\"j\n\016StreamSettings\022\021\n"
    "\tstream_id\030\001 \001(\004\022E\n\006filter\030\002 \001(\01625.bgs.p"
    "rotocol.club.v1.client.StreamNotificatio"
    "nFilter\"\310\001\n\014ClubSettings\022;\n\006stream\030\001 \003(\013"
    "2+.bgs.protocol.club.v1.client.StreamSet"
    "tings\022&\n\036stream_notification_filter_all\030"
    "\002 \001(\010\022-\n\tattribute\030\003 \003(\0132\032.bgs.protocol."
    "v2.Attribute\022$\n\034push_notification_filter"
    "_all\030\004 \001(\010\"\244\001\n\023ClubSettingsOptions\022\?\n\006st"
    "ream\030\001 \003(\0132+.bgs.protocol.club.v1.client"
    ".StreamSettingsB\002\030\001\022;\n\010settings\030\002 \001(\0132)."
    "bgs.protocol.club.v1.client.ClubSettings"
    "\022\017\n\007version\030\003 \001(\r\"\226\001\n\026ClubSettingsAssign"
    "ment\022\?\n\006stream\030\001 \003(\0132+.bgs.protocol.club"
    ".v1.client.StreamSettingsB\002\030\001\022;\n\010setting"
    "s\030\002 \001(\0132).bgs.protocol.club.v1.client.Cl"
    "ubSettingsB\002H\002", 3814);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/client/v1/club_core.proto", &protobuf_RegisterTypes);
  SetBroadcastOptions::default_instance_ = new SetBroadcastOptions();
  Broadcast::default_instance_ = new Broadcast();
  ClubCreateOptions::default_instance_ = new ClubCreateOptions();
  Club::default_instance_ = new Club();
  ClubView::default_instance_ = new ClubView();
  ClubStateOptions::default_instance_ = new ClubStateOptions();
  ClubStateAssignment::default_instance_ = new ClubStateAssignment();
  StreamSettings::default_instance_ = new StreamSettings();
  ClubSettings::default_instance_ = new ClubSettings();
  ClubSettingsOptions::default_instance_ = new ClubSettingsOptions();
  ClubSettingsAssignment::default_instance_ = new ClubSettingsAssignment();
  SetBroadcastOptions::default_instance_->InitAsDefaultInstance();
  Broadcast::default_instance_->InitAsDefaultInstance();
  ClubCreateOptions::default_instance_->InitAsDefaultInstance();
  Club::default_instance_->InitAsDefaultInstance();
  ClubView::default_instance_->InitAsDefaultInstance();
  ClubStateOptions::default_instance_->InitAsDefaultInstance();
  ClubStateAssignment::default_instance_->InitAsDefaultInstance();
  StreamSettings::default_instance_->InitAsDefaultInstance();
  ClubSettings::default_instance_->InitAsDefaultInstance();
  ClubSettingsOptions::default_instance_->InitAsDefaultInstance();
  ClubSettingsAssignment::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5fcore_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5fcore_2eproto {
  StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5fcore_2eproto() {
    protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  }
} static_descriptor_initializer_api_2fclient_2fv1_2fclub_5fcore_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SetBroadcastOptions::kContentFieldNumber;
#endif  // !_MSC_VER

SetBroadcastOptions::SetBroadcastOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.SetBroadcastOptions)
}

void SetBroadcastOptions::InitAsDefaultInstance() {
}

SetBroadcastOptions::SetBroadcastOptions(const SetBroadcastOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.SetBroadcastOptions)
}

void SetBroadcastOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetBroadcastOptions::~SetBroadcastOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.SetBroadcastOptions)
  SharedDtor();
}

void SetBroadcastOptions::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void SetBroadcastOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetBroadcastOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetBroadcastOptions_descriptor_;
}

const SetBroadcastOptions& SetBroadcastOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

SetBroadcastOptions* SetBroadcastOptions::default_instance_ = NULL;

SetBroadcastOptions* SetBroadcastOptions::New() const {
  return new SetBroadcastOptions;
}

void SetBroadcastOptions::Swap(SetBroadcastOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SetBroadcastOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetBroadcastOptions_descriptor_;
  metadata.reflection = SetBroadcastOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int Broadcast::kContentFieldNumber;
const int Broadcast::kCreatorFieldNumber;
const int Broadcast::kCreationTimeFieldNumber;
#endif  // !_MSC_VER

Broadcast::Broadcast()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.Broadcast)
}

void Broadcast::InitAsDefaultInstance() {
  creator_ = const_cast< ::bgs::protocol::club::v1::client::MemberDescription*>(&::bgs::protocol::club::v1::client::MemberDescription::default_instance());
}

Broadcast::Broadcast(const Broadcast& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.Broadcast)
}

void Broadcast::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creator_ = NULL;
  creation_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Broadcast::~Broadcast() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.Broadcast)
  SharedDtor();
}

void Broadcast::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
    delete creator_;
  }
}

void Broadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Broadcast::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Broadcast_descriptor_;
}

const Broadcast& Broadcast::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

Broadcast* Broadcast::default_instance_ = NULL;

Broadcast* Broadcast::New() const {
  return new Broadcast;
}

void Broadcast::Swap(Broadcast* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Broadcast::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Broadcast_descriptor_;
  metadata.reflection = Broadcast_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubCreateOptions::kTypeFieldNumber;
const int ClubCreateOptions::kAttributeFieldNumber;
const int ClubCreateOptions::kNameFieldNumber;
const int ClubCreateOptions::kDescriptionFieldNumber;
const int ClubCreateOptions::kAvatarFieldNumber;
const int ClubCreateOptions::kPrivacyLevelFieldNumber;
const int ClubCreateOptions::kShortNameFieldNumber;
const int ClubCreateOptions::kVisibilityLevelFieldNumber;
const int ClubCreateOptions::kMemberFieldNumber;
const int ClubCreateOptions::kStreamFieldNumber;
const int ClubCreateOptions::kTagFieldNumber;
const int ClubCreateOptions::kSearchAttributeFieldNumber;
const int ClubCreateOptions::kLocaleFieldNumber;
const int ClubCreateOptions::kTimezoneFieldNumber;
#endif  // !_MSC_VER

ClubCreateOptions::ClubCreateOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubCreateOptions)
}

void ClubCreateOptions::InitAsDefaultInstance() {
  type_ = const_cast< ::bgs::protocol::club::v1::UniqueClubType*>(&::bgs::protocol::club::v1::UniqueClubType::default_instance());
  avatar_ = const_cast< ::bgs::protocol::club::v1::AvatarId*>(&::bgs::protocol::club::v1::AvatarId::default_instance());
  member_ = const_cast< ::bgs::protocol::club::v1::client::CreateMemberOptions*>(&::bgs::protocol::club::v1::client::CreateMemberOptions::default_instance());
  stream_ = const_cast< ::bgs::protocol::club::v1::client::CreateStreamOptions*>(&::bgs::protocol::club::v1::client::CreateStreamOptions::default_instance());
  tag_ = const_cast< ::bgs::protocol::club::v1::TagOptions*>(&::bgs::protocol::club::v1::TagOptions::default_instance());
}

ClubCreateOptions::ClubCreateOptions(const ClubCreateOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubCreateOptions)
}

void ClubCreateOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_ = NULL;
  privacy_level_ = 0;
  short_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visibility_level_ = 0;
  member_ = NULL;
  stream_ = NULL;
  tag_ = NULL;
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubCreateOptions::~ClubCreateOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubCreateOptions)
  SharedDtor();
}

void ClubCreateOptions::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (short_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete short_name_;
  }
  if (locale_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete locale_;
  }
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (this != default_instance_) {
    delete type_;
    delete avatar_;
    delete member_;
    delete stream_;
    delete tag_;
  }
}

void ClubCreateOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubCreateOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubCreateOptions_descriptor_;
}

const ClubCreateOptions& ClubCreateOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubCreateOptions* ClubCreateOptions::default_instance_ = NULL;

ClubCreateOptions* ClubCreateOptions::New() const {
  return new ClubCreateOptions;
}

void ClubCreateOptions::Swap(ClubCreateOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubCreateOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubCreateOptions_descriptor_;
  metadata.reflection = ClubCreateOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int Club::kIdFieldNumber;
const int Club::kTypeFieldNumber;
const int Club::kAttributeFieldNumber;
const int Club::kNameFieldNumber;
const int Club::kDescriptionFieldNumber;
const int Club::kBroadcastFieldNumber;
const int Club::kAvatarFieldNumber;
const int Club::kPrivacyLevelFieldNumber;
const int Club::kVisibilityLevelFieldNumber;
const int Club::kMemberCountFieldNumber;
const int Club::kCreationTimeFieldNumber;
const int Club::kStreamPositionFieldNumber;
const int Club::kRoleSetFieldNumber;
const int Club::kLeaderFieldNumber;
const int Club::kShortNameFieldNumber;
const int Club::kSearchAttributeFieldNumber;
const int Club::kTagFieldNumber;
const int Club::kLocaleFieldNumber;
const int Club::kTimezoneFieldNumber;
#endif  // !_MSC_VER

Club::Club()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.Club)
}

void Club::InitAsDefaultInstance() {
  type_ = const_cast< ::bgs::protocol::club::v1::UniqueClubType*>(&::bgs::protocol::club::v1::UniqueClubType::default_instance());
  broadcast_ = const_cast< ::bgs::protocol::club::v1::client::Broadcast*>(&::bgs::protocol::club::v1::client::Broadcast::default_instance());
  avatar_ = const_cast< ::bgs::protocol::club::v1::AvatarId*>(&::bgs::protocol::club::v1::AvatarId::default_instance());
  stream_position_ = const_cast< ::bgs::protocol::club::v1::client::StreamPosition*>(&::bgs::protocol::club::v1::client::StreamPosition::default_instance());
  role_set_ = const_cast< ::bgs::protocol::club::v1::client::ClubRoleSet*>(&::bgs::protocol::club::v1::client::ClubRoleSet::default_instance());
}

Club::Club(const Club& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.Club)
}

void Club::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  type_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_ = NULL;
  avatar_ = NULL;
  privacy_level_ = 0;
  visibility_level_ = 0;
  member_count_ = 0u;
  creation_time_ = GOOGLE_ULONGLONG(0);
  stream_position_ = NULL;
  role_set_ = NULL;
  short_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Club::~Club() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.Club)
  SharedDtor();
}

void Club::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (short_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete short_name_;
  }
  if (locale_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete locale_;
  }
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (this != default_instance_) {
    delete type_;
    delete broadcast_;
    delete avatar_;
    delete stream_position_;
    delete role_set_;
  }
}

void Club::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Club::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Club_descriptor_;
}

const Club& Club::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

Club* Club::default_instance_ = NULL;

Club* Club::New() const {
  return new Club;
}

void Club::Swap(Club* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Club::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Club_descriptor_;
  metadata.reflection = Club_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubView::kClubIdFieldNumber;
const int ClubView::kMarkerFieldNumber;
#endif  // !_MSC_VER

ClubView::ClubView()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubView)
}

void ClubView::InitAsDefaultInstance() {
  marker_ = const_cast< ::bgs::protocol::ViewMarker*>(&::bgs::protocol::ViewMarker::default_instance());
}

ClubView::ClubView(const ClubView& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubView)
}

void ClubView::SharedCtor() {
  _cached_size_ = 0;
  club_id_ = GOOGLE_ULONGLONG(0);
  marker_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubView::~ClubView() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubView)
  SharedDtor();
}

void ClubView::SharedDtor() {
  if (this != default_instance_) {
    delete marker_;
  }
}

void ClubView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubView::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubView_descriptor_;
}

const ClubView& ClubView::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubView* ClubView::default_instance_ = NULL;

ClubView* ClubView::New() const {
  return new ClubView;
}

void ClubView::Swap(ClubView* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubView::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubView_descriptor_;
  metadata.reflection = ClubView_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubStateOptions::kAttributeFieldNumber;
const int ClubStateOptions::kNameFieldNumber;
const int ClubStateOptions::kDescriptionFieldNumber;
const int ClubStateOptions::kBroadcastFieldNumber;
const int ClubStateOptions::kAvatarFieldNumber;
const int ClubStateOptions::kPrivacyLevelFieldNumber;
const int ClubStateOptions::kStreamPositionFieldNumber;
const int ClubStateOptions::kShortNameFieldNumber;
const int ClubStateOptions::kVisibilityLevelFieldNumber;
const int ClubStateOptions::kLocaleFieldNumber;
const int ClubStateOptions::kTimezoneFieldNumber;
const int ClubStateOptions::kTagOptionsFieldNumber;
const int ClubStateOptions::kSearchAttributeFieldNumber;
#endif  // !_MSC_VER

ClubStateOptions::ClubStateOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubStateOptions)
}

void ClubStateOptions::InitAsDefaultInstance() {
  broadcast_ = const_cast< ::bgs::protocol::club::v1::client::SetBroadcastOptions*>(&::bgs::protocol::club::v1::client::SetBroadcastOptions::default_instance());
  avatar_ = const_cast< ::bgs::protocol::club::v1::AvatarId*>(&::bgs::protocol::club::v1::AvatarId::default_instance());
  stream_position_ = const_cast< ::bgs::protocol::club::v1::client::StreamPosition*>(&::bgs::protocol::club::v1::client::StreamPosition::default_instance());
  tag_options_ = const_cast< ::bgs::protocol::club::v1::TagOptions*>(&::bgs::protocol::club::v1::TagOptions::default_instance());
}

ClubStateOptions::ClubStateOptions(const ClubStateOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubStateOptions)
}

void ClubStateOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_ = NULL;
  avatar_ = NULL;
  privacy_level_ = 0;
  stream_position_ = NULL;
  short_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visibility_level_ = 0;
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubStateOptions::~ClubStateOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubStateOptions)
  SharedDtor();
}

void ClubStateOptions::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (short_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete short_name_;
  }
  if (locale_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete locale_;
  }
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (this != default_instance_) {
    delete broadcast_;
    delete avatar_;
    delete stream_position_;
    delete tag_options_;
  }
}

void ClubStateOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubStateOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubStateOptions_descriptor_;
}

const ClubStateOptions& ClubStateOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubStateOptions* ClubStateOptions::default_instance_ = NULL;

ClubStateOptions* ClubStateOptions::New() const {
  return new ClubStateOptions;
}

void ClubStateOptions::Swap(ClubStateOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubStateOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubStateOptions_descriptor_;
  metadata.reflection = ClubStateOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubStateAssignment::kClubIdFieldNumber;
const int ClubStateAssignment::kAttributeFieldNumber;
const int ClubStateAssignment::kNameFieldNumber;
const int ClubStateAssignment::kDescriptionFieldNumber;
const int ClubStateAssignment::kBroadcastFieldNumber;
const int ClubStateAssignment::kAvatarFieldNumber;
const int ClubStateAssignment::kPrivacyLevelFieldNumber;
const int ClubStateAssignment::kStreamPositionFieldNumber;
const int ClubStateAssignment::kShortNameFieldNumber;
const int ClubStateAssignment::kVisibilityLevelFieldNumber;
const int ClubStateAssignment::kLocaleFieldNumber;
const int ClubStateAssignment::kTimezoneFieldNumber;
const int ClubStateAssignment::kTagFieldNumber;
const int ClubStateAssignment::kSearchAttributeFieldNumber;
const int ClubStateAssignment::kTagClearedFieldNumber;
#endif  // !_MSC_VER

ClubStateAssignment::ClubStateAssignment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubStateAssignment)
}

void ClubStateAssignment::InitAsDefaultInstance() {
  broadcast_ = const_cast< ::bgs::protocol::club::v1::client::Broadcast*>(&::bgs::protocol::club::v1::client::Broadcast::default_instance());
  avatar_ = const_cast< ::bgs::protocol::club::v1::AvatarId*>(&::bgs::protocol::club::v1::AvatarId::default_instance());
  stream_position_ = const_cast< ::bgs::protocol::club::v1::client::StreamPosition*>(&::bgs::protocol::club::v1::client::StreamPosition::default_instance());
}

ClubStateAssignment::ClubStateAssignment(const ClubStateAssignment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubStateAssignment)
}

void ClubStateAssignment::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  club_id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_ = NULL;
  avatar_ = NULL;
  privacy_level_ = 0;
  stream_position_ = NULL;
  short_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visibility_level_ = 0;
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_cleared_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubStateAssignment::~ClubStateAssignment() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubStateAssignment)
  SharedDtor();
}

void ClubStateAssignment::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (short_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete short_name_;
  }
  if (locale_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete locale_;
  }
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (this != default_instance_) {
    delete broadcast_;
    delete avatar_;
    delete stream_position_;
  }
}

void ClubStateAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubStateAssignment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubStateAssignment_descriptor_;
}

const ClubStateAssignment& ClubStateAssignment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubStateAssignment* ClubStateAssignment::default_instance_ = NULL;

ClubStateAssignment* ClubStateAssignment::New() const {
  return new ClubStateAssignment;
}

void ClubStateAssignment::Swap(ClubStateAssignment* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubStateAssignment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubStateAssignment_descriptor_;
  metadata.reflection = ClubStateAssignment_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamSettings::kStreamIdFieldNumber;
const int StreamSettings::kFilterFieldNumber;
#endif  // !_MSC_VER

StreamSettings::StreamSettings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.StreamSettings)
}

void StreamSettings::InitAsDefaultInstance() {
}

StreamSettings::StreamSettings(const StreamSettings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.StreamSettings)
}

void StreamSettings::SharedCtor() {
  _cached_size_ = 0;
  stream_id_ = GOOGLE_ULONGLONG(0);
  filter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamSettings::~StreamSettings() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.StreamSettings)
  SharedDtor();
}

void StreamSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StreamSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamSettings_descriptor_;
}

const StreamSettings& StreamSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

StreamSettings* StreamSettings::default_instance_ = NULL;

StreamSettings* StreamSettings::New() const {
  return new StreamSettings;
}

void StreamSettings::Swap(StreamSettings* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamSettings_descriptor_;
  metadata.reflection = StreamSettings_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubSettings::kStreamFieldNumber;
const int ClubSettings::kStreamNotificationFilterAllFieldNumber;
const int ClubSettings::kAttributeFieldNumber;
const int ClubSettings::kPushNotificationFilterAllFieldNumber;
#endif  // !_MSC_VER

ClubSettings::ClubSettings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubSettings)
}

void ClubSettings::InitAsDefaultInstance() {
}

ClubSettings::ClubSettings(const ClubSettings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubSettings)
}

void ClubSettings::SharedCtor() {
  _cached_size_ = 0;
  stream_notification_filter_all_ = false;
  push_notification_filter_all_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubSettings::~ClubSettings() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubSettings)
  SharedDtor();
}

void ClubSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClubSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubSettings_descriptor_;
}

const ClubSettings& ClubSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubSettings* ClubSettings::default_instance_ = NULL;

ClubSettings* ClubSettings::New() const {
  return new ClubSettings;
}

void ClubSettings::Swap(ClubSettings* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubSettings_descriptor_;
  metadata.reflection = ClubSettings_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubSettingsOptions::kStreamFieldNumber;
const int ClubSettingsOptions::kSettingsFieldNumber;
const int ClubSettingsOptions::kVersionFieldNumber;
#endif  // !_MSC_VER

ClubSettingsOptions::ClubSettingsOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubSettingsOptions)
}

void ClubSettingsOptions::InitAsDefaultInstance() {
  settings_ = const_cast< ::bgs::protocol::club::v1::client::ClubSettings*>(&::bgs::protocol::club::v1::client::ClubSettings::default_instance());
}

ClubSettingsOptions::ClubSettingsOptions(const ClubSettingsOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubSettingsOptions)
}

void ClubSettingsOptions::SharedCtor() {
  _cached_size_ = 0;
  settings_ = NULL;
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubSettingsOptions::~ClubSettingsOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubSettingsOptions)
  SharedDtor();
}

void ClubSettingsOptions::SharedDtor() {
  if (this != default_instance_) {
    delete settings_;
  }
}

void ClubSettingsOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubSettingsOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubSettingsOptions_descriptor_;
}

const ClubSettingsOptions& ClubSettingsOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubSettingsOptions* ClubSettingsOptions::default_instance_ = NULL;

ClubSettingsOptions* ClubSettingsOptions::New() const {
  return new ClubSettingsOptions;
}

void ClubSettingsOptions::Swap(ClubSettingsOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubSettingsOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubSettingsOptions_descriptor_;
  metadata.reflection = ClubSettingsOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubSettingsAssignment::kStreamFieldNumber;
const int ClubSettingsAssignment::kSettingsFieldNumber;
#endif  // !_MSC_VER

ClubSettingsAssignment::ClubSettingsAssignment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.client.ClubSettingsAssignment)
}

void ClubSettingsAssignment::InitAsDefaultInstance() {
  settings_ = const_cast< ::bgs::protocol::club::v1::client::ClubSettings*>(&::bgs::protocol::club::v1::client::ClubSettings::default_instance());
}

ClubSettingsAssignment::ClubSettingsAssignment(const ClubSettingsAssignment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.client.ClubSettingsAssignment)
}

void ClubSettingsAssignment::SharedCtor() {
  _cached_size_ = 0;
  settings_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubSettingsAssignment::~ClubSettingsAssignment() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.client.ClubSettingsAssignment)
  SharedDtor();
}

void ClubSettingsAssignment::SharedDtor() {
  if (this != default_instance_) {
    delete settings_;
  }
}

void ClubSettingsAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubSettingsAssignment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubSettingsAssignment_descriptor_;
}

const ClubSettingsAssignment& ClubSettingsAssignment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubSettingsAssignment* ClubSettingsAssignment::default_instance_ = NULL;

ClubSettingsAssignment* ClubSettingsAssignment::New() const {
  return new ClubSettingsAssignment;
}

void ClubSettingsAssignment::Swap(ClubSettingsAssignment* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubSettingsAssignment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubSettingsAssignment_descriptor_;
  metadata.reflection = ClubSettingsAssignment_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
