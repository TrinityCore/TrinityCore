// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v1/club_listener.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/client/v1/club_listener.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
namespace client {

namespace {

const ::google::protobuf::ServiceDescriptor* ClubListener_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5flistener_2eproto() {
  protobuf_AddDesc_api_2fclient_2fv1_2fclub_5flistener_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/client/v1/club_listener.proto");
  GOOGLE_CHECK(file != NULL);
  ClubListener_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5flistener_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5flistener_2eproto() {
}

void protobuf_AddDesc_api_2fclient_2fv1_2fclub_5flistener_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fnotification_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!api/client/v1/club_listener.proto\022\033bgs"
    ".protocol.club.v1.client\032%api/client/v1/"
    "club_notification.proto2\305\023\n\014ClubListener"
    "\022d\n\013OnSubscribe\0222.bgs.protocol.club.v1.c"
    "lient.SubscribeNotification\032\031.bgs.protoc"
    "ol.NO_RESPONSE\"\006\202\371+\002\010\001\022h\n\rOnUnsubscribe\022"
    "4.bgs.protocol.club.v1.client.Unsubscrib"
    "eNotification\032\031.bgs.protocol.NO_RESPONSE"
    "\"\006\202\371+\002\010\002\022j\n\016OnStateChanged\0225.bgs.protoco"
    "l.club.v1.client.StateChangedNotificatio"
    "n\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010\003\022p\n\021"
    "OnSettingsChanged\0228.bgs.protocol.club.v1"
    ".client.SettingsChangedNotification\032\031.bg"
    "s.protocol.NO_RESPONSE\"\006\202\371+\002\010\004\022h\n\rOnMemb"
    "erAdded\0224.bgs.protocol.club.v1.client.Me"
    "mberAddedNotification\032\031.bgs.protocol.NO_"
    "RESPONSE\"\006\202\371+\002\010\036\022l\n\017OnMemberRemoved\0226.bg"
    "s.protocol.club.v1.client.MemberRemovedN"
    "otification\032\031.bgs.protocol.NO_RESPONSE\"\006"
    "\202\371+\002\010\037\022v\n\024OnMemberStateChanged\022;.bgs.pro"
    "tocol.club.v1.client.MemberStateChangedN"
    "otification\032\031.bgs.protocol.NO_RESPONSE\"\006"
    "\202\371+\002\010 \022~\n\030OnSubscriberStateChanged\022\?.bgs"
    ".protocol.club.v1.client.SubscriberState"
    "ChangedNotification\032\031.bgs.protocol.NO_RE"
    "SPONSE\"\006\202\371+\002\010!\022t\n\023OnMemberRoleChanged\022:."
    "bgs.protocol.club.v1.client.MemberRoleCh"
    "angedNotification\032\031.bgs.protocol.NO_RESP"
    "ONSE\"\006\202\371+\002\010\"\022p\n\021OnInvitationAdded\0228.bgs."
    "protocol.club.v1.client.InvitationAddedN"
    "otification\032\031.bgs.protocol.NO_RESPONSE\"\006"
    "\202\371+\002\0102\022t\n\023OnInvitationRemoved\022:.bgs.prot"
    "ocol.club.v1.client.InvitationRemovedNot"
    "ification\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371"
    "+\002\0103\022p\n\021OnSuggestionAdded\0228.bgs.protocol"
    ".club.v1.client.SuggestionAddedNotificat"
    "ion\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010F\022t"
    "\n\023OnSuggestionRemoved\022:.bgs.protocol.clu"
    "b.v1.client.SuggestionRemovedNotificatio"
    "n\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010G\022h\n\r"
    "OnStreamAdded\0224.bgs.protocol.club.v1.cli"
    "ent.StreamAddedNotification\032\031.bgs.protoc"
    "ol.NO_RESPONSE\"\006\202\371+\002\010d\022l\n\017OnStreamRemove"
    "d\0226.bgs.protocol.club.v1.client.StreamRe"
    "movedNotification\032\031.bgs.protocol.NO_RESP"
    "ONSE\"\006\202\371+\002\010e\022v\n\024OnStreamStateChanged\022;.b"
    "gs.protocol.club.v1.client.StreamStateCh"
    "angedNotification\032\031.bgs.protocol.NO_RESP"
    "ONSE\"\006\202\371+\002\010f\022w\n\024OnStreamMessageAdded\022;.b"
    "gs.protocol.club.v1.client.StreamMessage"
    "AddedNotification\032\031.bgs.protocol.NO_RESP"
    "ONSE\"\007\202\371+\003\010\226\001\022{\n\026OnStreamMessageUpdated\022"
    "=.bgs.protocol.club.v1.client.StreamMess"
    "ageUpdatedNotification\032\031.bgs.protocol.NO"
    "_RESPONSE\"\007\202\371+\003\010\230\001\022}\n\027OnStreamTypingIndi"
    "cator\022>.bgs.protocol.club.v1.client.Stre"
    "amTypingIndicatorNotification\032\031.bgs.prot"
    "ocol.NO_RESPONSE\"\007\202\371+\003\010\231\001\022}\n\027OnStreamUnr"
    "eadIndicator\022>.bgs.protocol.club.v1.clie"
    "nt.StreamUnreadIndicatorNotification\032\031.b"
    "gs.protocol.NO_RESPONSE\"\007\202\371+\003\010\232\001\022}\n\027OnSt"
    "reamAdvanceViewTime\022>.bgs.protocol.club."
    "v1.client.StreamAdvanceViewTimeNotificat"
    "ion\032\031.bgs.protocol.NO_RESPONSE\"\007\202\371+\003\010\233\001\032"
    ".\202\371+$\n\"bnet.protocol.club.v1.ClubListene"
    "r\212\371+\002\010\001B\005H\002\200\001\000", 2614);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/client/v1/club_listener.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5flistener_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5flistener_2eproto {
  StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5flistener_2eproto() {
    protobuf_AddDesc_api_2fclient_2fv1_2fclub_5flistener_2eproto();
  }
} static_descriptor_initializer_api_2fclient_2fv1_2fclub_5flistener_2eproto_;
// ===================================================================

ClubListener::ClubListener(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

ClubListener::~ClubListener() {
}

google::protobuf::ServiceDescriptor const* ClubListener::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubListener_descriptor_;
}

void ClubListener::OnSubscribe(::bgs::protocol::club::v1::client::SubscribeNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnSubscribe", "bgs.protocol.club.v1.client.SubscribeNotification", request);
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnUnsubscribe(::bgs::protocol::club::v1::client::UnsubscribeNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnUnsubscribe", "bgs.protocol.club.v1.client.UnsubscribeNotification", request);
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStateChanged(::bgs::protocol::club::v1::client::StateChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStateChanged", "bgs.protocol.club.v1.client.StateChangedNotification", request);
  SendRequest(service_hash_, 3 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnSettingsChanged(::bgs::protocol::club::v1::client::SettingsChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnSettingsChanged", "bgs.protocol.club.v1.client.SettingsChangedNotification", request);
  SendRequest(service_hash_, 4 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnMemberAdded(::bgs::protocol::club::v1::client::MemberAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnMemberAdded", "bgs.protocol.club.v1.client.MemberAddedNotification", request);
  SendRequest(service_hash_, 30 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnMemberRemoved(::bgs::protocol::club::v1::client::MemberRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnMemberRemoved", "bgs.protocol.club.v1.client.MemberRemovedNotification", request);
  SendRequest(service_hash_, 31 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnMemberStateChanged(::bgs::protocol::club::v1::client::MemberStateChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnMemberStateChanged", "bgs.protocol.club.v1.client.MemberStateChangedNotification", request);
  SendRequest(service_hash_, 32 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnSubscriberStateChanged(::bgs::protocol::club::v1::client::SubscriberStateChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnSubscriberStateChanged", "bgs.protocol.club.v1.client.SubscriberStateChangedNotification", request);
  SendRequest(service_hash_, 33 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnMemberRoleChanged(::bgs::protocol::club::v1::client::MemberRoleChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnMemberRoleChanged", "bgs.protocol.club.v1.client.MemberRoleChangedNotification", request);
  SendRequest(service_hash_, 34 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnInvitationAdded(::bgs::protocol::club::v1::client::InvitationAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnInvitationAdded", "bgs.protocol.club.v1.client.InvitationAddedNotification", request);
  SendRequest(service_hash_, 50 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnInvitationRemoved(::bgs::protocol::club::v1::client::InvitationRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnInvitationRemoved", "bgs.protocol.club.v1.client.InvitationRemovedNotification", request);
  SendRequest(service_hash_, 51 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnSuggestionAdded(::bgs::protocol::club::v1::client::SuggestionAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnSuggestionAdded", "bgs.protocol.club.v1.client.SuggestionAddedNotification", request);
  SendRequest(service_hash_, 70 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnSuggestionRemoved(::bgs::protocol::club::v1::client::SuggestionRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnSuggestionRemoved", "bgs.protocol.club.v1.client.SuggestionRemovedNotification", request);
  SendRequest(service_hash_, 71 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamAdded(::bgs::protocol::club::v1::client::StreamAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamAdded", "bgs.protocol.club.v1.client.StreamAddedNotification", request);
  SendRequest(service_hash_, 100 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamRemoved(::bgs::protocol::club::v1::client::StreamRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamRemoved", "bgs.protocol.club.v1.client.StreamRemovedNotification", request);
  SendRequest(service_hash_, 101 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamStateChanged(::bgs::protocol::club::v1::client::StreamStateChangedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamStateChanged", "bgs.protocol.club.v1.client.StreamStateChangedNotification", request);
  SendRequest(service_hash_, 102 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamMessageAdded(::bgs::protocol::club::v1::client::StreamMessageAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamMessageAdded", "bgs.protocol.club.v1.client.StreamMessageAddedNotification", request);
  SendRequest(service_hash_, 150 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamMessageUpdated(::bgs::protocol::club::v1::client::StreamMessageUpdatedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamMessageUpdated", "bgs.protocol.club.v1.client.StreamMessageUpdatedNotification", request);
  SendRequest(service_hash_, 152 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamTypingIndicator(::bgs::protocol::club::v1::client::StreamTypingIndicatorNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamTypingIndicator", "bgs.protocol.club.v1.client.StreamTypingIndicatorNotification", request);
  SendRequest(service_hash_, 153 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamUnreadIndicator(::bgs::protocol::club::v1::client::StreamUnreadIndicatorNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamUnreadIndicator", "bgs.protocol.club.v1.client.StreamUnreadIndicatorNotification", request);
  SendRequest(service_hash_, 154 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::OnStreamAdvanceViewTime(::bgs::protocol::club::v1::client::StreamAdvanceViewTimeNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("ClubListener.OnStreamAdvanceViewTime", "bgs.protocol.club.v1.client.StreamAdvanceViewTimeNotification", request);
  SendRequest(service_hash_, 155 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void ClubListener::CallServerMethod(uint32 /*token*/, uint32 methodId, MessageBuffer /*buffer*/) {
  LogDisallowedMethod(methodId);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
