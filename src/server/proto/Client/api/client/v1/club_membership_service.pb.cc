// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v1/club_membership_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/client/v1/club_membership_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club_membership {
namespace v1 {
namespace client {

namespace {

const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateClubSharedSettingsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateClubSharedSettingsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamMentionsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamMentionsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamMentionsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamMentionsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveStreamMentionsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveStreamMentionsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdvanceStreamMentionViewTimeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdvanceStreamMentionViewTimeRequest_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* ClubMembershipService_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto() {
  protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/client/v1/club_membership_service.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeRequest_descriptor_ = file->message_type(0);
  static const int SubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, agent_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, options_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  SubscribeResponse_descriptor_ = file->message_type(1);
  static const int SubscribeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, state_),
  };
  SubscribeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeResponse_descriptor_,
      SubscribeResponse::default_instance_,
      SubscribeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeResponse));
  UnsubscribeRequest_descriptor_ = file->message_type(2);
  static const int UnsubscribeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, agent_id_deprecated_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  GetStateRequest_descriptor_ = file->message_type(3);
  static const int GetStateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateRequest, agent_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateRequest, options_),
  };
  GetStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStateRequest_descriptor_,
      GetStateRequest::default_instance_,
      GetStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStateRequest));
  GetStateResponse_descriptor_ = file->message_type(4);
  static const int GetStateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponse, state_),
  };
  GetStateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStateResponse_descriptor_,
      GetStateResponse::default_instance_,
      GetStateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStateResponse));
  UpdateClubSharedSettingsRequest_descriptor_ = file->message_type(5);
  static const int UpdateClubSharedSettingsRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSharedSettingsRequest, agent_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSharedSettingsRequest, options_),
  };
  UpdateClubSharedSettingsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateClubSharedSettingsRequest_descriptor_,
      UpdateClubSharedSettingsRequest::default_instance_,
      UpdateClubSharedSettingsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSharedSettingsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSharedSettingsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateClubSharedSettingsRequest));
  GetStreamMentionsRequest_descriptor_ = file->message_type(6);
  static const int GetStreamMentionsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsRequest, agent_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsRequest, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsRequest, fetch_messages_),
  };
  GetStreamMentionsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamMentionsRequest_descriptor_,
      GetStreamMentionsRequest::default_instance_,
      GetStreamMentionsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamMentionsRequest));
  GetStreamMentionsResponse_descriptor_ = file->message_type(7);
  static const int GetStreamMentionsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsResponse, mention_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsResponse, continuation_),
  };
  GetStreamMentionsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamMentionsResponse_descriptor_,
      GetStreamMentionsResponse::default_instance_,
      GetStreamMentionsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMentionsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamMentionsResponse));
  RemoveStreamMentionsRequest_descriptor_ = file->message_type(8);
  static const int RemoveStreamMentionsRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveStreamMentionsRequest, agent_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveStreamMentionsRequest, mention_id_),
  };
  RemoveStreamMentionsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveStreamMentionsRequest_descriptor_,
      RemoveStreamMentionsRequest::default_instance_,
      RemoveStreamMentionsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveStreamMentionsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveStreamMentionsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveStreamMentionsRequest));
  AdvanceStreamMentionViewTimeRequest_descriptor_ = file->message_type(9);
  static const int AdvanceStreamMentionViewTimeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, agent_id_deprecated_),
  };
  AdvanceStreamMentionViewTimeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdvanceStreamMentionViewTimeRequest_descriptor_,
      AdvanceStreamMentionViewTimeRequest::default_instance_,
      AdvanceStreamMentionViewTimeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdvanceStreamMentionViewTimeRequest));
  ClubMembershipService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeResponse_descriptor_, &SubscribeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStateRequest_descriptor_, &GetStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStateResponse_descriptor_, &GetStateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateClubSharedSettingsRequest_descriptor_, &UpdateClubSharedSettingsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamMentionsRequest_descriptor_, &GetStreamMentionsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamMentionsResponse_descriptor_, &GetStreamMentionsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveStreamMentionsRequest_descriptor_, &RemoveStreamMentionsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdvanceStreamMentionViewTimeRequest_descriptor_, &AdvanceStreamMentionViewTimeRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto() {
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete SubscribeResponse::default_instance_;
  delete SubscribeResponse_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete GetStateRequest::default_instance_;
  delete GetStateRequest_reflection_;
  delete GetStateResponse::default_instance_;
  delete GetStateResponse_reflection_;
  delete UpdateClubSharedSettingsRequest::default_instance_;
  delete UpdateClubSharedSettingsRequest_reflection_;
  delete GetStreamMentionsRequest::default_instance_;
  delete GetStreamMentionsRequest_reflection_;
  delete GetStreamMentionsResponse::default_instance_;
  delete GetStreamMentionsResponse_reflection_;
  delete RemoveStreamMentionsRequest::default_instance_;
  delete RemoveStreamMentionsRequest_reflection_;
  delete AdvanceStreamMentionViewTimeRequest::default_instance_;
  delete AdvanceStreamMentionViewTimeRequest_reflection_;
}

void protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5ftypes_2eproto();
  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fstream_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+api/client/v1/club_membership_service."
    "proto\022&bgs.protocol.club_membership.v1.c"
    "lient\032\036api/client/v1/club_types.proto\032\037a"
    "pi/client/v1/club_stream.proto\"\266\001\n\020Subsc"
    "ribeRequest\022I\n\023agent_id_deprecated\030\001 \001(\013"
    "2\".bgs.protocol.account.v1.AccountIdB\010\030\001"
    "\222\371+\002 \001\022W\n\007options\030\002 \001(\0132F.bgs.protocol.c"
    "lub_membership.v1.client.ClubMembershipS"
    "ubscribeOptions\"_\n\021SubscribeResponse\022J\n\005"
    "state\030\001 \001(\0132;.bgs.protocol.club_membersh"
    "ip.v1.client.ClubMembershipState\"_\n\022Unsu"
    "bscribeRequest\022I\n\023agent_id_deprecated\030\001 "
    "\001(\0132\".bgs.protocol.account.v1.AccountIdB"
    "\010\030\001\222\371+\002 \001\"\264\001\n\017GetStateRequest\022I\n\023agent_i"
    "d_deprecated\030\001 \001(\0132\".bgs.protocol.accoun"
    "t.v1.AccountIdB\010\030\001\222\371+\002 \001\022V\n\007options\030\002 \001("
    "\0132E.bgs.protocol.club_membership.v1.clie"
    "nt.ClubMembershipGetStateOptions\"^\n\020GetS"
    "tateResponse\022J\n\005state\030\001 \001(\0132;.bgs.protoc"
    "ol.club_membership.v1.client.ClubMembers"
    "hipState\"\300\001\n\037UpdateClubSharedSettingsReq"
    "uest\022I\n\023agent_id_deprecated\030\001 \001(\0132\".bgs."
    "protocol.account.v1.AccountIdB\010\030\001\222\371+\002 \001\022"
    "R\n\007options\030\002 \001(\0132A.bgs.protocol.club_mem"
    "bership.v1.client.ClubSharedSettingsOpti"
    "ons\"\255\001\n\030GetStreamMentionsRequest\022I\n\023agen"
    "t_id_deprecated\030\001 \001(\0132\".bgs.protocol.acc"
    "ount.v1.AccountIdB\010\030\001\222\371+\002 \001\022.\n\007options\030\002"
    " \001(\0132\035.bgs.protocol.GetEventOptions\022\026\n\016f"
    "etch_messages\030\003 \001(\010\"n\n\031GetStreamMentions"
    "Response\022;\n\007mention\030\001 \003(\0132*.bgs.protocol"
    ".club.v1.client.StreamMention\022\024\n\014continu"
    "ation\030\002 \001(\004\"\230\001\n\033RemoveStreamMentionsRequ"
    "est\022I\n\023agent_id_deprecated\030\001 \001(\0132\".bgs.p"
    "rotocol.account.v1.AccountIdB\010\030\001\222\371+\002 \001\022."
    "\n\nmention_id\030\002 \003(\0132\032.bgs.protocol.TimeSe"
    "riesId\"p\n#AdvanceStreamMentionViewTimeRe"
    "quest\022I\n\023agent_id_deprecated\030\001 \001(\0132\".bgs"
    ".protocol.account.v1.AccountIdB\010\030\001\222\371+\002 \001"
    "2\241\010\n\025ClubMembershipService\022\212\001\n\tSubscribe"
    "\0228.bgs.protocol.club_membership.v1.clien"
    "t.SubscribeRequest\0329.bgs.protocol.club_m"
    "embership.v1.client.SubscribeResponse\"\010\202"
    "\371+\004\010\001\020\001\022i\n\013Unsubscribe\022:.bgs.protocol.cl"
    "ub_membership.v1.client.UnsubscribeReque"
    "st\032\024.bgs.protocol.NoData\"\010\202\371+\004\010\002\020\001\022\211\001\n\010G"
    "etState\0227.bgs.protocol.club_membership.v"
    "1.client.GetStateRequest\0328.bgs.protocol."
    "club_membership.v1.client.GetStateRespon"
    "se\"\n\202\371+\006\010\003\020\0010\001\022\203\001\n\030UpdateClubSharedSetti"
    "ngs\022G.bgs.protocol.club_membership.v1.cl"
    "ient.UpdateClubSharedSettingsRequest\032\024.b"
    "gs.protocol.NoData\"\010\202\371+\004\010\004\020\001\022\244\001\n\021GetStre"
    "amMentions\022@.bgs.protocol.club_membershi"
    "p.v1.client.GetStreamMentionsRequest\032A.b"
    "gs.protocol.club_membership.v1.client.Ge"
    "tStreamMentionsResponse\"\n\202\371+\006\010\005\020\0010\001\022{\n\024R"
    "emoveStreamMentions\022C.bgs.protocol.club_"
    "membership.v1.client.RemoveStreamMention"
    "sRequest\032\024.bgs.protocol.NoData\"\010\202\371+\004\010\006\020\001"
    "\022\213\001\n\034AdvanceStreamMentionViewTime\022K.bgs."
    "protocol.club_membership.v1.client.Advan"
    "ceStreamMentionViewTimeRequest\032\024.bgs.pro"
    "tocol.NoData\"\010\202\371+\004\010\007\020\001\032L\202\371+@\n+bnet.proto"
    "col.club.v1.ClubMembershipService*\017club_"
    "membershipH\001\212\371+\004\020\001\030\001B\005H\002\200\001\000", 2627);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/client/v1/club_membership_service.proto", &protobuf_RegisterTypes);
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  SubscribeResponse::default_instance_ = new SubscribeResponse();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  GetStateRequest::default_instance_ = new GetStateRequest();
  GetStateResponse::default_instance_ = new GetStateResponse();
  UpdateClubSharedSettingsRequest::default_instance_ = new UpdateClubSharedSettingsRequest();
  GetStreamMentionsRequest::default_instance_ = new GetStreamMentionsRequest();
  GetStreamMentionsResponse::default_instance_ = new GetStreamMentionsResponse();
  RemoveStreamMentionsRequest::default_instance_ = new RemoveStreamMentionsRequest();
  AdvanceStreamMentionViewTimeRequest::default_instance_ = new AdvanceStreamMentionViewTimeRequest();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  SubscribeResponse::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  GetStateRequest::default_instance_->InitAsDefaultInstance();
  GetStateResponse::default_instance_->InitAsDefaultInstance();
  UpdateClubSharedSettingsRequest::default_instance_->InitAsDefaultInstance();
  GetStreamMentionsRequest::default_instance_->InitAsDefaultInstance();
  GetStreamMentionsResponse::default_instance_->InitAsDefaultInstance();
  RemoveStreamMentionsRequest::default_instance_->InitAsDefaultInstance();
  AdvanceStreamMentionViewTimeRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto {
  StaticDescriptorInitializer_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto() {
    protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  }
} static_descriptor_initializer_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kAgentIdDeprecatedFieldNumber;
const int SubscribeRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  options_ = const_cast< ::bgs::protocol::club_membership::v1::client::ClubMembershipSubscribeOptions*>(&::bgs::protocol::club_membership::v1::client::ClubMembershipSubscribeOptions::default_instance());
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
    delete options_;
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscribeResponse::kStateFieldNumber;
#endif  // !_MSC_VER

SubscribeResponse::SubscribeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.SubscribeResponse)
}

void SubscribeResponse::InitAsDefaultInstance() {
  state_ = const_cast< ::bgs::protocol::club_membership::v1::client::ClubMembershipState*>(&::bgs::protocol::club_membership::v1::client::ClubMembershipState::default_instance());
}

SubscribeResponse::SubscribeResponse(const SubscribeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.SubscribeResponse)
}

void SubscribeResponse::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeResponse::~SubscribeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.SubscribeResponse)
  SharedDtor();
}

void SubscribeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
  }
}

void SubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeResponse_descriptor_;
}

const SubscribeResponse& SubscribeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

SubscribeResponse* SubscribeResponse::default_instance_ = NULL;

SubscribeResponse* SubscribeResponse::New() const {
  return new SubscribeResponse;
}

void SubscribeResponse::Swap(SubscribeResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeResponse_descriptor_;
  metadata.reflection = SubscribeResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kAgentIdDeprecatedFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStateRequest::kAgentIdDeprecatedFieldNumber;
const int GetStateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

GetStateRequest::GetStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.GetStateRequest)
}

void GetStateRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  options_ = const_cast< ::bgs::protocol::club_membership::v1::client::ClubMembershipGetStateOptions*>(&::bgs::protocol::club_membership::v1::client::ClubMembershipGetStateOptions::default_instance());
}

GetStateRequest::GetStateRequest(const GetStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.GetStateRequest)
}

void GetStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStateRequest::~GetStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.GetStateRequest)
  SharedDtor();
}

void GetStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
    delete options_;
  }
}

void GetStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStateRequest_descriptor_;
}

const GetStateRequest& GetStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

GetStateRequest* GetStateRequest::default_instance_ = NULL;

GetStateRequest* GetStateRequest::New() const {
  return new GetStateRequest;
}

void GetStateRequest::Swap(GetStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStateRequest_descriptor_;
  metadata.reflection = GetStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStateResponse::kStateFieldNumber;
#endif  // !_MSC_VER

GetStateResponse::GetStateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.GetStateResponse)
}

void GetStateResponse::InitAsDefaultInstance() {
  state_ = const_cast< ::bgs::protocol::club_membership::v1::client::ClubMembershipState*>(&::bgs::protocol::club_membership::v1::client::ClubMembershipState::default_instance());
}

GetStateResponse::GetStateResponse(const GetStateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.GetStateResponse)
}

void GetStateResponse::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStateResponse::~GetStateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.GetStateResponse)
  SharedDtor();
}

void GetStateResponse::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
  }
}

void GetStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStateResponse_descriptor_;
}

const GetStateResponse& GetStateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

GetStateResponse* GetStateResponse::default_instance_ = NULL;

GetStateResponse* GetStateResponse::New() const {
  return new GetStateResponse;
}

void GetStateResponse::Swap(GetStateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStateResponse_descriptor_;
  metadata.reflection = GetStateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateClubSharedSettingsRequest::kAgentIdDeprecatedFieldNumber;
const int UpdateClubSharedSettingsRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateClubSharedSettingsRequest::UpdateClubSharedSettingsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.UpdateClubSharedSettingsRequest)
}

void UpdateClubSharedSettingsRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  options_ = const_cast< ::bgs::protocol::club_membership::v1::client::ClubSharedSettingsOptions*>(&::bgs::protocol::club_membership::v1::client::ClubSharedSettingsOptions::default_instance());
}

UpdateClubSharedSettingsRequest::UpdateClubSharedSettingsRequest(const UpdateClubSharedSettingsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.UpdateClubSharedSettingsRequest)
}

void UpdateClubSharedSettingsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateClubSharedSettingsRequest::~UpdateClubSharedSettingsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.UpdateClubSharedSettingsRequest)
  SharedDtor();
}

void UpdateClubSharedSettingsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
    delete options_;
  }
}

void UpdateClubSharedSettingsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClubSharedSettingsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateClubSharedSettingsRequest_descriptor_;
}

const UpdateClubSharedSettingsRequest& UpdateClubSharedSettingsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

UpdateClubSharedSettingsRequest* UpdateClubSharedSettingsRequest::default_instance_ = NULL;

UpdateClubSharedSettingsRequest* UpdateClubSharedSettingsRequest::New() const {
  return new UpdateClubSharedSettingsRequest;
}

void UpdateClubSharedSettingsRequest::Swap(UpdateClubSharedSettingsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateClubSharedSettingsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateClubSharedSettingsRequest_descriptor_;
  metadata.reflection = UpdateClubSharedSettingsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamMentionsRequest::kAgentIdDeprecatedFieldNumber;
const int GetStreamMentionsRequest::kOptionsFieldNumber;
const int GetStreamMentionsRequest::kFetchMessagesFieldNumber;
#endif  // !_MSC_VER

GetStreamMentionsRequest::GetStreamMentionsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsRequest)
}

void GetStreamMentionsRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
  options_ = const_cast< ::bgs::protocol::GetEventOptions*>(&::bgs::protocol::GetEventOptions::default_instance());
}

GetStreamMentionsRequest::GetStreamMentionsRequest(const GetStreamMentionsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsRequest)
}

void GetStreamMentionsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  options_ = NULL;
  fetch_messages_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamMentionsRequest::~GetStreamMentionsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsRequest)
  SharedDtor();
}

void GetStreamMentionsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
    delete options_;
  }
}

void GetStreamMentionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamMentionsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamMentionsRequest_descriptor_;
}

const GetStreamMentionsRequest& GetStreamMentionsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

GetStreamMentionsRequest* GetStreamMentionsRequest::default_instance_ = NULL;

GetStreamMentionsRequest* GetStreamMentionsRequest::New() const {
  return new GetStreamMentionsRequest;
}

void GetStreamMentionsRequest::Swap(GetStreamMentionsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamMentionsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamMentionsRequest_descriptor_;
  metadata.reflection = GetStreamMentionsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamMentionsResponse::kMentionFieldNumber;
const int GetStreamMentionsResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetStreamMentionsResponse::GetStreamMentionsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsResponse)
}

void GetStreamMentionsResponse::InitAsDefaultInstance() {
}

GetStreamMentionsResponse::GetStreamMentionsResponse(const GetStreamMentionsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsResponse)
}

void GetStreamMentionsResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamMentionsResponse::~GetStreamMentionsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.GetStreamMentionsResponse)
  SharedDtor();
}

void GetStreamMentionsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStreamMentionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamMentionsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamMentionsResponse_descriptor_;
}

const GetStreamMentionsResponse& GetStreamMentionsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

GetStreamMentionsResponse* GetStreamMentionsResponse::default_instance_ = NULL;

GetStreamMentionsResponse* GetStreamMentionsResponse::New() const {
  return new GetStreamMentionsResponse;
}

void GetStreamMentionsResponse::Swap(GetStreamMentionsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamMentionsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamMentionsResponse_descriptor_;
  metadata.reflection = GetStreamMentionsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RemoveStreamMentionsRequest::kAgentIdDeprecatedFieldNumber;
const int RemoveStreamMentionsRequest::kMentionIdFieldNumber;
#endif  // !_MSC_VER

RemoveStreamMentionsRequest::RemoveStreamMentionsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.RemoveStreamMentionsRequest)
}

void RemoveStreamMentionsRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

RemoveStreamMentionsRequest::RemoveStreamMentionsRequest(const RemoveStreamMentionsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.RemoveStreamMentionsRequest)
}

void RemoveStreamMentionsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveStreamMentionsRequest::~RemoveStreamMentionsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.RemoveStreamMentionsRequest)
  SharedDtor();
}

void RemoveStreamMentionsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
  }
}

void RemoveStreamMentionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveStreamMentionsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveStreamMentionsRequest_descriptor_;
}

const RemoveStreamMentionsRequest& RemoveStreamMentionsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

RemoveStreamMentionsRequest* RemoveStreamMentionsRequest::default_instance_ = NULL;

RemoveStreamMentionsRequest* RemoveStreamMentionsRequest::New() const {
  return new RemoveStreamMentionsRequest;
}

void RemoveStreamMentionsRequest::Swap(RemoveStreamMentionsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RemoveStreamMentionsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveStreamMentionsRequest_descriptor_;
  metadata.reflection = RemoveStreamMentionsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AdvanceStreamMentionViewTimeRequest::kAgentIdDeprecatedFieldNumber;
#endif  // !_MSC_VER

AdvanceStreamMentionViewTimeRequest::AdvanceStreamMentionViewTimeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club_membership.v1.client.AdvanceStreamMentionViewTimeRequest)
}

void AdvanceStreamMentionViewTimeRequest::InitAsDefaultInstance() {
  agent_id_deprecated_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

AdvanceStreamMentionViewTimeRequest::AdvanceStreamMentionViewTimeRequest(const AdvanceStreamMentionViewTimeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club_membership.v1.client.AdvanceStreamMentionViewTimeRequest)
}

void AdvanceStreamMentionViewTimeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_deprecated_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdvanceStreamMentionViewTimeRequest::~AdvanceStreamMentionViewTimeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club_membership.v1.client.AdvanceStreamMentionViewTimeRequest)
  SharedDtor();
}

void AdvanceStreamMentionViewTimeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_deprecated_;
  }
}

void AdvanceStreamMentionViewTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvanceStreamMentionViewTimeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdvanceStreamMentionViewTimeRequest_descriptor_;
}

const AdvanceStreamMentionViewTimeRequest& AdvanceStreamMentionViewTimeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmembership_5fservice_2eproto();
  return *default_instance_;
}

AdvanceStreamMentionViewTimeRequest* AdvanceStreamMentionViewTimeRequest::default_instance_ = NULL;

AdvanceStreamMentionViewTimeRequest* AdvanceStreamMentionViewTimeRequest::New() const {
  return new AdvanceStreamMentionViewTimeRequest;
}

void AdvanceStreamMentionViewTimeRequest::Swap(AdvanceStreamMentionViewTimeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AdvanceStreamMentionViewTimeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdvanceStreamMentionViewTimeRequest_descriptor_;
  metadata.reflection = AdvanceStreamMentionViewTimeRequest_reflection_;
  return metadata;
}

// ===================================================================

ClubMembershipService::ClubMembershipService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

ClubMembershipService::~ClubMembershipService() {
}

google::protobuf::ServiceDescriptor const* ClubMembershipService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubMembershipService_descriptor_;
}

void ClubMembershipService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 1:
      ParseAndHandleSubscribe(token, methodId, buffer);
      break;
    case 2:
      ParseAndHandleUnsubscribe(token, methodId, buffer);
      break;
    case 3:
      ParseAndHandleGetState(token, methodId, buffer);
      break;
    case 4:
      ParseAndHandleUpdateClubSharedSettings(token, methodId, buffer);
      break;
    case 5:
      ParseAndHandleGetStreamMentions(token, methodId, buffer);
      break;
    case 6:
      ParseAndHandleRemoveStreamMentions(token, methodId, buffer);
      break;
    case 7:
      ParseAndHandleAdvanceStreamMentionViewTime(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 ClubMembershipService::HandleSubscribe(::bgs::protocol::club_membership::v1::client::SubscribeRequest const* request, ::bgs::protocol::club_membership::v1::client::SubscribeResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.Subscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleUnsubscribe(::bgs::protocol::club_membership::v1::client::UnsubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.Unsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleGetState(::bgs::protocol::club_membership::v1::client::GetStateRequest const* request, ::bgs::protocol::club_membership::v1::client::GetStateResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.GetState", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleUpdateClubSharedSettings(::bgs::protocol::club_membership::v1::client::UpdateClubSharedSettingsRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.UpdateClubSharedSettings", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleGetStreamMentions(::bgs::protocol::club_membership::v1::client::GetStreamMentionsRequest const* request, ::bgs::protocol::club_membership::v1::client::GetStreamMentionsResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.GetStreamMentions", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleRemoveStreamMentions(::bgs::protocol::club_membership::v1::client::RemoveStreamMentionsRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.RemoveStreamMentions", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 ClubMembershipService::HandleAdvanceStreamMentionViewTime(::bgs::protocol::club_membership::v1::client::AdvanceStreamMentionViewTimeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("ClubMembershipService.AdvanceStreamMentionViewTime", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void ClubMembershipService::ParseAndHandleSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::SubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.Subscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.Subscribe", "bgs.protocol.club_membership.v1.client.SubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.Subscribe", ::bgs::protocol::club_membership::v1::client::SubscribeResponse::descriptor());
  ::bgs::protocol::club_membership::v1::client::SubscribeResponse response;
  uint32 status = HandleSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::UnsubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.Unsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.Unsubscribe", "bgs.protocol.club_membership.v1.client.UnsubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.Unsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleGetState(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::GetStateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.GetState");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.GetState", "bgs.protocol.club_membership.v1.client.GetStateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.GetState", ::bgs::protocol::club_membership::v1::client::GetStateResponse::descriptor());
  ::bgs::protocol::club_membership::v1::client::GetStateResponse response;
  uint32 status = HandleGetState(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleUpdateClubSharedSettings(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::UpdateClubSharedSettingsRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.UpdateClubSharedSettings");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.UpdateClubSharedSettings", "bgs.protocol.club_membership.v1.client.UpdateClubSharedSettingsRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.UpdateClubSharedSettings", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUpdateClubSharedSettings(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleGetStreamMentions(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::GetStreamMentionsRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.GetStreamMentions");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.GetStreamMentions", "bgs.protocol.club_membership.v1.client.GetStreamMentionsRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.GetStreamMentions", ::bgs::protocol::club_membership::v1::client::GetStreamMentionsResponse::descriptor());
  ::bgs::protocol::club_membership::v1::client::GetStreamMentionsResponse response;
  uint32 status = HandleGetStreamMentions(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleRemoveStreamMentions(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::RemoveStreamMentionsRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.RemoveStreamMentions");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.RemoveStreamMentions", "bgs.protocol.club_membership.v1.client.RemoveStreamMentionsRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.RemoveStreamMentions", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleRemoveStreamMentions(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void ClubMembershipService::ParseAndHandleAdvanceStreamMentionViewTime(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::club_membership::v1::client::AdvanceStreamMentionViewTimeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("ClubMembershipService.AdvanceStreamMentionViewTime");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("ClubMembershipService.AdvanceStreamMentionViewTime", "bgs.protocol.club_membership.v1.client.AdvanceStreamMentionViewTimeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "ClubMembershipService.AdvanceStreamMentionViewTime", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleAdvanceStreamMentionViewTime(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace v1
}  // namespace club_membership
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
