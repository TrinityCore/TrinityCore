// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/client/v1/block_list_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/client/v1/block_list_types.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace block_list {
namespace v1 {
namespace client {

namespace {

const ::google::protobuf::Descriptor* BlockedPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockedPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockPlayerOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockPlayerOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnblockPlayerOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnblockPlayerOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnblockPlayerAssignment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnblockPlayerAssignment_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockListState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockListState_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto() {
  protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/client/v1/block_list_types.proto");
  GOOGLE_CHECK(file != NULL);
  BlockedPlayer_descriptor_ = file->message_type(0);
  static const int BlockedPlayer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, battle_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, creation_time_us_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, modified_time_us_),
  };
  BlockedPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockedPlayer_descriptor_,
      BlockedPlayer::default_instance_,
      BlockedPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockedPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockedPlayer));
  BlockPlayerOptions_descriptor_ = file->message_type(1);
  static const int BlockPlayerOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerOptions, account_id_),
  };
  BlockPlayerOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockPlayerOptions_descriptor_,
      BlockPlayerOptions::default_instance_,
      BlockPlayerOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPlayerOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockPlayerOptions));
  UnblockPlayerOptions_descriptor_ = file->message_type(2);
  static const int UnblockPlayerOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerOptions, account_id_),
  };
  UnblockPlayerOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnblockPlayerOptions_descriptor_,
      UnblockPlayerOptions::default_instance_,
      UnblockPlayerOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnblockPlayerOptions));
  UnblockPlayerAssignment_descriptor_ = file->message_type(3);
  static const int UnblockPlayerAssignment_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerAssignment, id_),
  };
  UnblockPlayerAssignment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnblockPlayerAssignment_descriptor_,
      UnblockPlayerAssignment::default_instance_,
      UnblockPlayerAssignment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerAssignment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockPlayerAssignment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnblockPlayerAssignment));
  BlockListState_descriptor_ = file->message_type(4);
  static const int BlockListState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListState, player_),
  };
  BlockListState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockListState_descriptor_,
      BlockListState::default_instance_,
      BlockListState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockListState));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockedPlayer_descriptor_, &BlockedPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockPlayerOptions_descriptor_, &BlockPlayerOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnblockPlayerOptions_descriptor_, &UnblockPlayerOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnblockPlayerAssignment_descriptor_, &UnblockPlayerAssignment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockListState_descriptor_, &BlockListState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto() {
  delete BlockedPlayer::default_instance_;
  delete BlockedPlayer_reflection_;
  delete BlockPlayerOptions::default_instance_;
  delete BlockPlayerOptions_reflection_;
  delete UnblockPlayerOptions::default_instance_;
  delete UnblockPlayerOptions_reflection_;
  delete UnblockPlayerAssignment::default_instance_;
  delete UnblockPlayerAssignment_reflection_;
  delete BlockListState::default_instance_;
  delete BlockListState_reflection_;
}

void protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$api/client/v1/block_list_types.proto\022!"
    "bgs.protocol.block_list.v1.client\032\017rpc_t"
    "ypes.proto\"k\n\rBlockedPlayer\022\n\n\002id\030\001 \001(\004\022"
    "\032\n\nbattle_tag\030\002 \001(\tB\006\202\371+\002\010\001\022\030\n\020creation_"
    "time_us\030\004 \001(\004\022\030\n\020modified_time_us\030\005 \001(\004\""
    "2\n\022BlockPlayerOptions\022\034\n\naccount_id\030\001 \001("
    "\004B\010\212\371+\004\022\002\020\000\"4\n\024UnblockPlayerOptions\022\034\n\na"
    "ccount_id\030\001 \001(\004B\010\212\371+\004\022\002\020\000\"%\n\027UnblockPlay"
    "erAssignment\022\n\n\002id\030\001 \001(\004\"R\n\016BlockListSta"
    "te\022@\n\006player\030\001 \003(\01320.bgs.protocol.block_"
    "list.v1.client.BlockedPlayerB\002H\002", 432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/client/v1/block_list_types.proto", &protobuf_RegisterTypes);
  BlockedPlayer::default_instance_ = new BlockedPlayer();
  BlockPlayerOptions::default_instance_ = new BlockPlayerOptions();
  UnblockPlayerOptions::default_instance_ = new UnblockPlayerOptions();
  UnblockPlayerAssignment::default_instance_ = new UnblockPlayerAssignment();
  BlockListState::default_instance_ = new BlockListState();
  BlockedPlayer::default_instance_->InitAsDefaultInstance();
  BlockPlayerOptions::default_instance_->InitAsDefaultInstance();
  UnblockPlayerOptions::default_instance_->InitAsDefaultInstance();
  UnblockPlayerAssignment::default_instance_->InitAsDefaultInstance();
  BlockListState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto {
  StaticDescriptorInitializer_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto() {
    protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  }
} static_descriptor_initializer_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int BlockedPlayer::kIdFieldNumber;
const int BlockedPlayer::kBattleTagFieldNumber;
const int BlockedPlayer::kCreationTimeUsFieldNumber;
const int BlockedPlayer::kModifiedTimeUsFieldNumber;
#endif  // !_MSC_VER

BlockedPlayer::BlockedPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.block_list.v1.client.BlockedPlayer)
}

void BlockedPlayer::InitAsDefaultInstance() {
}

BlockedPlayer::BlockedPlayer(const BlockedPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.block_list.v1.client.BlockedPlayer)
}

void BlockedPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_time_us_ = GOOGLE_ULONGLONG(0);
  modified_time_us_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockedPlayer::~BlockedPlayer() {
  // @@protoc_insertion_point(destructor:bgs.protocol.block_list.v1.client.BlockedPlayer)
  SharedDtor();
}

void BlockedPlayer::SharedDtor() {
  if (battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battle_tag_;
  }
  if (this != default_instance_) {
  }
}

void BlockedPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockedPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockedPlayer_descriptor_;
}

const BlockedPlayer& BlockedPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  return *default_instance_;
}

BlockedPlayer* BlockedPlayer::default_instance_ = NULL;

BlockedPlayer* BlockedPlayer::New() const {
  return new BlockedPlayer;
}

void BlockedPlayer::Swap(BlockedPlayer* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockedPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockedPlayer_descriptor_;
  metadata.reflection = BlockedPlayer_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockPlayerOptions::kAccountIdFieldNumber;
#endif  // !_MSC_VER

BlockPlayerOptions::BlockPlayerOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.block_list.v1.client.BlockPlayerOptions)
}

void BlockPlayerOptions::InitAsDefaultInstance() {
}

BlockPlayerOptions::BlockPlayerOptions(const BlockPlayerOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.block_list.v1.client.BlockPlayerOptions)
}

void BlockPlayerOptions::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockPlayerOptions::~BlockPlayerOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.block_list.v1.client.BlockPlayerOptions)
  SharedDtor();
}

void BlockPlayerOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlockPlayerOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockPlayerOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockPlayerOptions_descriptor_;
}

const BlockPlayerOptions& BlockPlayerOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  return *default_instance_;
}

BlockPlayerOptions* BlockPlayerOptions::default_instance_ = NULL;

BlockPlayerOptions* BlockPlayerOptions::New() const {
  return new BlockPlayerOptions;
}

void BlockPlayerOptions::Swap(BlockPlayerOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockPlayerOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockPlayerOptions_descriptor_;
  metadata.reflection = BlockPlayerOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnblockPlayerOptions::kAccountIdFieldNumber;
#endif  // !_MSC_VER

UnblockPlayerOptions::UnblockPlayerOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.block_list.v1.client.UnblockPlayerOptions)
}

void UnblockPlayerOptions::InitAsDefaultInstance() {
}

UnblockPlayerOptions::UnblockPlayerOptions(const UnblockPlayerOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.block_list.v1.client.UnblockPlayerOptions)
}

void UnblockPlayerOptions::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnblockPlayerOptions::~UnblockPlayerOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.block_list.v1.client.UnblockPlayerOptions)
  SharedDtor();
}

void UnblockPlayerOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnblockPlayerOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockPlayerOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnblockPlayerOptions_descriptor_;
}

const UnblockPlayerOptions& UnblockPlayerOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  return *default_instance_;
}

UnblockPlayerOptions* UnblockPlayerOptions::default_instance_ = NULL;

UnblockPlayerOptions* UnblockPlayerOptions::New() const {
  return new UnblockPlayerOptions;
}

void UnblockPlayerOptions::Swap(UnblockPlayerOptions* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnblockPlayerOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnblockPlayerOptions_descriptor_;
  metadata.reflection = UnblockPlayerOptions_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnblockPlayerAssignment::kIdFieldNumber;
#endif  // !_MSC_VER

UnblockPlayerAssignment::UnblockPlayerAssignment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.block_list.v1.client.UnblockPlayerAssignment)
}

void UnblockPlayerAssignment::InitAsDefaultInstance() {
}

UnblockPlayerAssignment::UnblockPlayerAssignment(const UnblockPlayerAssignment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.block_list.v1.client.UnblockPlayerAssignment)
}

void UnblockPlayerAssignment::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnblockPlayerAssignment::~UnblockPlayerAssignment() {
  // @@protoc_insertion_point(destructor:bgs.protocol.block_list.v1.client.UnblockPlayerAssignment)
  SharedDtor();
}

void UnblockPlayerAssignment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnblockPlayerAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockPlayerAssignment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnblockPlayerAssignment_descriptor_;
}

const UnblockPlayerAssignment& UnblockPlayerAssignment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  return *default_instance_;
}

UnblockPlayerAssignment* UnblockPlayerAssignment::default_instance_ = NULL;

UnblockPlayerAssignment* UnblockPlayerAssignment::New() const {
  return new UnblockPlayerAssignment;
}

void UnblockPlayerAssignment::Swap(UnblockPlayerAssignment* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnblockPlayerAssignment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnblockPlayerAssignment_descriptor_;
  metadata.reflection = UnblockPlayerAssignment_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BlockListState::kPlayerFieldNumber;
#endif  // !_MSC_VER

BlockListState::BlockListState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.block_list.v1.client.BlockListState)
}

void BlockListState::InitAsDefaultInstance() {
}

BlockListState::BlockListState(const BlockListState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.block_list.v1.client.BlockListState)
}

void BlockListState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockListState::~BlockListState() {
  // @@protoc_insertion_point(destructor:bgs.protocol.block_list.v1.client.BlockListState)
  SharedDtor();
}

void BlockListState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlockListState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockListState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockListState_descriptor_;
}

const BlockListState& BlockListState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fclient_2fv1_2fblock_5flist_5ftypes_2eproto();
  return *default_instance_;
}

BlockListState* BlockListState::default_instance_ = NULL;

BlockListState* BlockListState::New() const {
  return new BlockListState;
}

void BlockListState::Swap(BlockListState* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BlockListState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockListState_descriptor_;
  metadata.reflection = BlockListState_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace v1
}  // namespace block_list
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
