// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/common/v1/club_enum.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/common/v1/club_enum.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::EnumDescriptor* PrivacyLevel_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* VisibilityLevel_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* JoinClubSource_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto() {
  protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/common/v1/club_enum.proto");
  GOOGLE_CHECK(file != NULL);
  PrivacyLevel_descriptor_ = file->enum_type(0);
  VisibilityLevel_descriptor_ = file->enum_type(1);
  JoinClubSource_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_api_2fcommon_2fv1_2fclub_5fenum_2eproto() {
}

void protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035api/common/v1/club_enum.proto\022\024bgs.pro"
    "tocol.club.v1*\202\001\n\014PrivacyLevel\022\030\n\024PRIVAC"
    "Y_LEVEL_CLOSED\020\000\022!\n\035PRIVACY_LEVEL_OPEN_I"
    "NVITATION\020\001\022\035\n\031PRIVACY_LEVEL_OPEN_TICKET"
    "\020\002\022\026\n\022PRIVACY_LEVEL_OPEN\020\003*L\n\017Visibility"
    "Level\022\034\n\030VISIBILITY_LEVEL_PRIVATE\020\000\022\033\n\027V"
    "ISIBILITY_LEVEL_PUBLIC\020\001*w\n\016JoinClubSour"
    "ce\022\031\n\025JOIN_CLUB_SOURCE_NONE\020\000\022 \n\034JOIN_CL"
    "UB_SOURCE_CLUB_FINDER\020\001\022(\n$JOIN_CLUB_SOU"
    "RCE_CLUB_RECOMMENDATION\020\002B\002H\002", 389);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/common/v1/club_enum.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fcommon_2fv1_2fclub_5fenum_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fcommon_2fv1_2fclub_5fenum_2eproto {
  StaticDescriptorInitializer_api_2fcommon_2fv1_2fclub_5fenum_2eproto() {
    protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto();
  }
} static_descriptor_initializer_api_2fcommon_2fv1_2fclub_5fenum_2eproto_;
const ::google::protobuf::EnumDescriptor* PrivacyLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrivacyLevel_descriptor_;
}
bool PrivacyLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VisibilityLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisibilityLevel_descriptor_;
}
bool VisibilityLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* JoinClubSource_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinClubSource_descriptor_;
}
bool JoinClubSource_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
