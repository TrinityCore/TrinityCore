// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/common/v1/club_core.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/common/v1/club_core.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* AvatarId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AvatarId_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubDescription_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto() {
  protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api/common/v1/club_core.proto");
  GOOGLE_CHECK(file != NULL);
  AvatarId_descriptor_ = file->message_type(0);
  static const int AvatarId_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarId, id_),
  };
  AvatarId_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AvatarId_descriptor_,
      AvatarId::default_instance_,
      AvatarId_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarId, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarId, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AvatarId));
  ClubDescription_descriptor_ = file->message_type(1);
  static const int ClubDescription_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, visibility_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, member_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, creation_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, timezone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, tag_),
  };
  ClubDescription_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubDescription_descriptor_,
      ClubDescription::default_instance_,
      ClubDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubDescription, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubDescription));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AvatarId_descriptor_, &AvatarId::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubDescription_descriptor_, &ClubDescription::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2fcommon_2fv1_2fclub_5fcore_2eproto() {
  delete AvatarId::default_instance_;
  delete AvatarId_reflection_;
  delete ClubDescription::default_instance_;
  delete ClubDescription_reflection_;
}

void protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5ftag_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5ftype_2eproto();
  ::bgs::protocol::club::v1::protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fenum_2eproto();
  ::bgs::protocol::club::v1::client::protobuf_AddDesc_api_2fclient_2fv1_2fclub_5fmember_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035api/common/v1/club_core.proto\022\024bgs.pro"
    "tocol.club.v1\032\034api/common/v1/club_tag.pr"
    "oto\032\035api/common/v1/club_type.proto\032\035api/"
    "common/v1/club_enum.proto\032\037api/client/v1"
    "/club_member.proto\"\026\n\010AvatarId\022\n\n\002id\030\001 \001"
    "(\r\"\341\003\n\017ClubDescription\022\n\n\002id\030\001 \001(\004\0222\n\004ty"
    "pe\030\002 \001(\0132$.bgs.protocol.club.v1.UniqueCl"
    "ubType\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001("
    "\t\022.\n\006avatar\030\005 \001(\0132\036.bgs.protocol.club.v1"
    ".AvatarId\0229\n\rprivacy_level\030\006 \001(\0162\".bgs.p"
    "rotocol.club.v1.PrivacyLevel\022\?\n\020visibili"
    "ty_level\030\007 \001(\0162%.bgs.protocol.club.v1.Vi"
    "sibilityLevel\022\024\n\014member_count\030\010 \001(\r\022>\n\006l"
    "eader\030\t \003(\0132..bgs.protocol.club.v1.clien"
    "t.MemberDescription\022\025\n\rcreation_time\030\n \001"
    "(\004\022\020\n\010timezone\030\013 \001(\t\022\016\n\006locale\030\014 \001(\t\0220\n\003"
    "tag\030\r \003(\0132#.bgs.protocol.club.v1.TagIden"
    "tifierB\002H\002", 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/common/v1/club_core.proto", &protobuf_RegisterTypes);
  AvatarId::default_instance_ = new AvatarId();
  ClubDescription::default_instance_ = new ClubDescription();
  AvatarId::default_instance_->InitAsDefaultInstance();
  ClubDescription::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2fcommon_2fv1_2fclub_5fcore_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2fcommon_2fv1_2fclub_5fcore_2eproto {
  StaticDescriptorInitializer_api_2fcommon_2fv1_2fclub_5fcore_2eproto() {
    protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto();
  }
} static_descriptor_initializer_api_2fcommon_2fv1_2fclub_5fcore_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int AvatarId::kIdFieldNumber;
#endif  // !_MSC_VER

AvatarId::AvatarId()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AvatarId)
}

void AvatarId::InitAsDefaultInstance() {
}

AvatarId::AvatarId(const AvatarId& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AvatarId)
}

void AvatarId::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AvatarId::~AvatarId() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AvatarId)
  SharedDtor();
}

void AvatarId::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AvatarId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AvatarId_descriptor_;
}

const AvatarId& AvatarId::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

AvatarId* AvatarId::default_instance_ = NULL;

AvatarId* AvatarId::New() const {
  return new AvatarId;
}

void AvatarId::Swap(AvatarId* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AvatarId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AvatarId_descriptor_;
  metadata.reflection = AvatarId_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubDescription::kIdFieldNumber;
const int ClubDescription::kTypeFieldNumber;
const int ClubDescription::kNameFieldNumber;
const int ClubDescription::kDescriptionFieldNumber;
const int ClubDescription::kAvatarFieldNumber;
const int ClubDescription::kPrivacyLevelFieldNumber;
const int ClubDescription::kVisibilityLevelFieldNumber;
const int ClubDescription::kMemberCountFieldNumber;
const int ClubDescription::kLeaderFieldNumber;
const int ClubDescription::kCreationTimeFieldNumber;
const int ClubDescription::kTimezoneFieldNumber;
const int ClubDescription::kLocaleFieldNumber;
const int ClubDescription::kTagFieldNumber;
#endif  // !_MSC_VER

ClubDescription::ClubDescription()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.ClubDescription)
}

void ClubDescription::InitAsDefaultInstance() {
  type_ = const_cast< ::bgs::protocol::club::v1::UniqueClubType*>(&::bgs::protocol::club::v1::UniqueClubType::default_instance());
  avatar_ = const_cast< ::bgs::protocol::club::v1::AvatarId*>(&::bgs::protocol::club::v1::AvatarId::default_instance());
}

ClubDescription::ClubDescription(const ClubDescription& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.ClubDescription)
}

void ClubDescription::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  type_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_ = NULL;
  privacy_level_ = 0;
  visibility_level_ = 0;
  member_count_ = 0u;
  creation_time_ = GOOGLE_ULONGLONG(0);
  timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubDescription::~ClubDescription() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.ClubDescription)
  SharedDtor();
}

void ClubDescription::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (locale_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete locale_;
  }
  if (this != default_instance_) {
    delete type_;
    delete avatar_;
  }
}

void ClubDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubDescription_descriptor_;
}

const ClubDescription& ClubDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2fcommon_2fv1_2fclub_5fcore_2eproto();
  return *default_instance_;
}

ClubDescription* ClubDescription::default_instance_ = NULL;

ClubDescription* ClubDescription::New() const {
  return new ClubDescription;
}

void ClubDescription::Swap(ClubDescription* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubDescription_descriptor_;
  metadata.reflection = ClubDescription_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
