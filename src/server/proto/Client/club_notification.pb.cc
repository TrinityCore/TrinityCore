// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_notification.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "club_notification.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* SubscribeNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SettingsChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SettingsChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemberAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemberAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemberRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemberRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemberStateChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemberStateChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscriberStateChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscriberStateChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemberRoleChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemberRoleChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvitationAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvitationAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvitationRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvitationRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SuggestionAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SuggestionAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SuggestionRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SuggestionRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamRemovedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamStateChangedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamStateChangedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamMessageAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamMessageAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamMessageUpdatedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamMessageUpdatedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamTypingIndicatorNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamTypingIndicatorNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamUnreadIndicatorNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamUnreadIndicatorNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamAdvanceViewTimeNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamAdvanceViewTimeNotification_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_club_5fnotification_2eproto() {
  protobuf_AddDesc_club_5fnotification_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "club_notification.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeNotification_descriptor_ = file->message_type(0);
  static const int SubscribeNotification_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, club_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, view_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, member_),
  };
  SubscribeNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeNotification_descriptor_,
      SubscribeNotification::default_instance_,
      SubscribeNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeNotification));
  UnsubscribeNotification_descriptor_ = file->message_type(1);
  static const int UnsubscribeNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeNotification, club_id_),
  };
  UnsubscribeNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeNotification_descriptor_,
      UnsubscribeNotification::default_instance_,
      UnsubscribeNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeNotification));
  StateChangedNotification_descriptor_ = file->message_type(2);
  static const int StateChangedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangedNotification, assignment_),
  };
  StateChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StateChangedNotification_descriptor_,
      StateChangedNotification::default_instance_,
      StateChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StateChangedNotification));
  SettingsChangedNotification_descriptor_ = file->message_type(3);
  static const int SettingsChangedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsChangedNotification, assignment_),
  };
  SettingsChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SettingsChangedNotification_descriptor_,
      SettingsChangedNotification::default_instance_,
      SettingsChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SettingsChangedNotification));
  MemberAddedNotification_descriptor_ = file->message_type(4);
  static const int MemberAddedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberAddedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberAddedNotification, member_),
  };
  MemberAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MemberAddedNotification_descriptor_,
      MemberAddedNotification::default_instance_,
      MemberAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MemberAddedNotification));
  MemberRemovedNotification_descriptor_ = file->message_type(5);
  static const int MemberRemovedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRemovedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRemovedNotification, member_),
  };
  MemberRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MemberRemovedNotification_descriptor_,
      MemberRemovedNotification::default_instance_,
      MemberRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MemberRemovedNotification));
  MemberStateChangedNotification_descriptor_ = file->message_type(6);
  static const int MemberStateChangedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberStateChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberStateChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberStateChangedNotification, assignment_),
  };
  MemberStateChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MemberStateChangedNotification_descriptor_,
      MemberStateChangedNotification::default_instance_,
      MemberStateChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberStateChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberStateChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MemberStateChangedNotification));
  SubscriberStateChangedNotification_descriptor_ = file->message_type(7);
  static const int SubscriberStateChangedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriberStateChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriberStateChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriberStateChangedNotification, assignment_),
  };
  SubscriberStateChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscriberStateChangedNotification_descriptor_,
      SubscriberStateChangedNotification::default_instance_,
      SubscriberStateChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriberStateChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriberStateChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscriberStateChangedNotification));
  MemberRoleChangedNotification_descriptor_ = file->message_type(8);
  static const int MemberRoleChangedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRoleChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRoleChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRoleChangedNotification, assignment_),
  };
  MemberRoleChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MemberRoleChangedNotification_descriptor_,
      MemberRoleChangedNotification::default_instance_,
      MemberRoleChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRoleChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberRoleChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MemberRoleChangedNotification));
  InvitationAddedNotification_descriptor_ = file->message_type(9);
  static const int InvitationAddedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationAddedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationAddedNotification, invitation_),
  };
  InvitationAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvitationAddedNotification_descriptor_,
      InvitationAddedNotification::default_instance_,
      InvitationAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvitationAddedNotification));
  InvitationRemovedNotification_descriptor_ = file->message_type(10);
  static const int InvitationRemovedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, invitation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, reason_),
  };
  InvitationRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvitationRemovedNotification_descriptor_,
      InvitationRemovedNotification::default_instance_,
      InvitationRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvitationRemovedNotification));
  SuggestionAddedNotification_descriptor_ = file->message_type(11);
  static const int SuggestionAddedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionAddedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionAddedNotification, suggestion_),
  };
  SuggestionAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SuggestionAddedNotification_descriptor_,
      SuggestionAddedNotification::default_instance_,
      SuggestionAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SuggestionAddedNotification));
  SuggestionRemovedNotification_descriptor_ = file->message_type(12);
  static const int SuggestionRemovedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, suggestion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, reason_),
  };
  SuggestionRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SuggestionRemovedNotification_descriptor_,
      SuggestionRemovedNotification::default_instance_,
      SuggestionRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuggestionRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SuggestionRemovedNotification));
  StreamAddedNotification_descriptor_ = file->message_type(13);
  static const int StreamAddedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAddedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAddedNotification, stream_),
  };
  StreamAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamAddedNotification_descriptor_,
      StreamAddedNotification::default_instance_,
      StreamAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamAddedNotification));
  StreamRemovedNotification_descriptor_ = file->message_type(14);
  static const int StreamRemovedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamRemovedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamRemovedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamRemovedNotification, stream_id_),
  };
  StreamRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamRemovedNotification_descriptor_,
      StreamRemovedNotification::default_instance_,
      StreamRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamRemovedNotification));
  StreamStateChangedNotification_descriptor_ = file->message_type(15);
  static const int StreamStateChangedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, assignment_),
  };
  StreamStateChangedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamStateChangedNotification_descriptor_,
      StreamStateChangedNotification::default_instance_,
      StreamStateChangedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamStateChangedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamStateChangedNotification));
  StreamMessageAddedNotification_descriptor_ = file->message_type(16);
  static const int StreamMessageAddedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, message_),
  };
  StreamMessageAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamMessageAddedNotification_descriptor_,
      StreamMessageAddedNotification::default_instance_,
      StreamMessageAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamMessageAddedNotification));
  StreamMessageUpdatedNotification_descriptor_ = file->message_type(17);
  static const int StreamMessageUpdatedNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, message_),
  };
  StreamMessageUpdatedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamMessageUpdatedNotification_descriptor_,
      StreamMessageUpdatedNotification::default_instance_,
      StreamMessageUpdatedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamMessageUpdatedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamMessageUpdatedNotification));
  StreamTypingIndicatorNotification_descriptor_ = file->message_type(18);
  static const int StreamTypingIndicatorNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, indicator_),
  };
  StreamTypingIndicatorNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamTypingIndicatorNotification_descriptor_,
      StreamTypingIndicatorNotification::default_instance_,
      StreamTypingIndicatorNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamTypingIndicatorNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamTypingIndicatorNotification));
  StreamUnreadIndicatorNotification_descriptor_ = file->message_type(19);
  static const int StreamUnreadIndicatorNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, message_),
  };
  StreamUnreadIndicatorNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamUnreadIndicatorNotification_descriptor_,
      StreamUnreadIndicatorNotification::default_instance_,
      StreamUnreadIndicatorNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamUnreadIndicatorNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamUnreadIndicatorNotification));
  StreamAdvanceViewTimeNotification_descriptor_ = file->message_type(20);
  static const int StreamAdvanceViewTimeNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAdvanceViewTimeNotification, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAdvanceViewTimeNotification, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAdvanceViewTimeNotification, view_),
  };
  StreamAdvanceViewTimeNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamAdvanceViewTimeNotification_descriptor_,
      StreamAdvanceViewTimeNotification::default_instance_,
      StreamAdvanceViewTimeNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAdvanceViewTimeNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamAdvanceViewTimeNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamAdvanceViewTimeNotification));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_club_5fnotification_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeNotification_descriptor_, &SubscribeNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeNotification_descriptor_, &UnsubscribeNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StateChangedNotification_descriptor_, &StateChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SettingsChangedNotification_descriptor_, &SettingsChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MemberAddedNotification_descriptor_, &MemberAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MemberRemovedNotification_descriptor_, &MemberRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MemberStateChangedNotification_descriptor_, &MemberStateChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscriberStateChangedNotification_descriptor_, &SubscriberStateChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MemberRoleChangedNotification_descriptor_, &MemberRoleChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvitationAddedNotification_descriptor_, &InvitationAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvitationRemovedNotification_descriptor_, &InvitationRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SuggestionAddedNotification_descriptor_, &SuggestionAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SuggestionRemovedNotification_descriptor_, &SuggestionRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamAddedNotification_descriptor_, &StreamAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamRemovedNotification_descriptor_, &StreamRemovedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamStateChangedNotification_descriptor_, &StreamStateChangedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamMessageAddedNotification_descriptor_, &StreamMessageAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamMessageUpdatedNotification_descriptor_, &StreamMessageUpdatedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamTypingIndicatorNotification_descriptor_, &StreamTypingIndicatorNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamUnreadIndicatorNotification_descriptor_, &StreamUnreadIndicatorNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamAdvanceViewTimeNotification_descriptor_, &StreamAdvanceViewTimeNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_club_5fnotification_2eproto() {
  delete SubscribeNotification::default_instance_;
  delete SubscribeNotification_reflection_;
  delete UnsubscribeNotification::default_instance_;
  delete UnsubscribeNotification_reflection_;
  delete StateChangedNotification::default_instance_;
  delete StateChangedNotification_reflection_;
  delete SettingsChangedNotification::default_instance_;
  delete SettingsChangedNotification_reflection_;
  delete MemberAddedNotification::default_instance_;
  delete MemberAddedNotification_reflection_;
  delete MemberRemovedNotification::default_instance_;
  delete MemberRemovedNotification_reflection_;
  delete MemberStateChangedNotification::default_instance_;
  delete MemberStateChangedNotification_reflection_;
  delete SubscriberStateChangedNotification::default_instance_;
  delete SubscriberStateChangedNotification_reflection_;
  delete MemberRoleChangedNotification::default_instance_;
  delete MemberRoleChangedNotification_reflection_;
  delete InvitationAddedNotification::default_instance_;
  delete InvitationAddedNotification_reflection_;
  delete InvitationRemovedNotification::default_instance_;
  delete InvitationRemovedNotification_reflection_;
  delete SuggestionAddedNotification::default_instance_;
  delete SuggestionAddedNotification_reflection_;
  delete SuggestionRemovedNotification::default_instance_;
  delete SuggestionRemovedNotification_reflection_;
  delete StreamAddedNotification::default_instance_;
  delete StreamAddedNotification_reflection_;
  delete StreamRemovedNotification::default_instance_;
  delete StreamRemovedNotification_reflection_;
  delete StreamStateChangedNotification::default_instance_;
  delete StreamStateChangedNotification_reflection_;
  delete StreamMessageAddedNotification::default_instance_;
  delete StreamMessageAddedNotification_reflection_;
  delete StreamMessageUpdatedNotification::default_instance_;
  delete StreamMessageUpdatedNotification_reflection_;
  delete StreamTypingIndicatorNotification::default_instance_;
  delete StreamTypingIndicatorNotification_reflection_;
  delete StreamUnreadIndicatorNotification::default_instance_;
  delete StreamUnreadIndicatorNotification_reflection_;
  delete StreamAdvanceViewTimeNotification::default_instance_;
  delete StreamAdvanceViewTimeNotification_reflection_;
}

void protobuf_AddDesc_club_5fnotification_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::protobuf_AddDesc_club_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027club_notification.proto\022\024bgs.protocol."
    "club.v1\032\020club_types.proto\032\017rpc_types.pro"
    "to\"\226\002\n\025SubscribeNotification\0220\n\010agent_id"
    "\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022\017"
    "\n\007club_id\030\003 \001(\004\022(\n\004club\030\004 \001(\0132\032.bgs.prot"
    "ocol.club.v1.Club\022,\n\004view\030\005 \001(\0132\036.bgs.pr"
    "otocol.club.v1.ClubView\0224\n\010settings\030\n \001("
    "\0132\".bgs.protocol.club.v1.ClubSettings\022,\n"
    "\006member\030\013 \001(\0132\034.bgs.protocol.club.v1.Mem"
    "ber\"\\\n\027UnsubscribeNotification\0220\n\010agent_"
    "id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId"
    "\022\017\n\007club_id\030\003 \001(\004\"\234\001\n\030StateChangedNotifi"
    "cation\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol."
    "club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022=\n\nass"
    "ignment\030\005 \001(\0132).bgs.protocol.club.v1.Clu"
    "bStateAssignment\"\242\001\n\033SettingsChangedNoti"
    "fication\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoco"
    "l.club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022@\n\na"
    "ssignment\030\004 \001(\0132,.bgs.protocol.club.v1.C"
    "lubSettingsAssignment\"\212\001\n\027MemberAddedNot"
    "ification\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022,\n\006"
    "member\030\004 \003(\0132\034.bgs.protocol.club.v1.Memb"
    "er\"\235\001\n\031MemberRemovedNotification\0220\n\010agen"
    "t_id\030\001 \001(\0132\036.bgs.protocol.club.v1.Member"
    "Id\022\017\n\007club_id\030\003 \001(\004\022=\n\006member\030\004 \003(\0132-.bg"
    "s.protocol.club.v1.MemberRemovedAssignme"
    "nt\"\244\001\n\036MemberStateChangedNotification\0220\n"
    "\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v1.M"
    "emberId\022\017\n\007club_id\030\003 \001(\004\022\?\n\nassignment\030\004"
    " \003(\0132+.bgs.protocol.club.v1.MemberStateA"
    "ssignment\"\254\001\n\"SubscriberStateChangedNoti"
    "fication\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoco"
    "l.club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022C\n\na"
    "ssignment\030\004 \003(\0132/.bgs.protocol.club.v1.S"
    "ubscriberStateAssignment\"\234\001\n\035MemberRoleC"
    "hangedNotification\0220\n\010agent_id\030\001 \001(\0132\036.b"
    "gs.protocol.club.v1.MemberId\022\017\n\007club_id\030"
    "\003 \001(\004\0228\n\nassignment\030\004 \003(\0132$.bgs.protocol"
    ".club.v1.RoleAssignment\"\232\001\n\033InvitationAd"
    "dedNotification\0220\n\010agent_id\030\001 \001(\0132\036.bgs."
    "protocol.club.v1.MemberId\022\017\n\007club_id\030\003 \001"
    "(\004\0228\n\ninvitation\030\004 \001(\0132$.bgs.protocol.cl"
    "ub.v1.ClubInvitation\"\260\001\n\035InvitationRemov"
    "edNotification\0220\n\010agent_id\030\001 \001(\0132\036.bgs.p"
    "rotocol.club.v1.MemberId\022\017\n\007club_id\030\003 \001("
    "\004\022\025\n\rinvitation_id\030\004 \001(\006\0225\n\006reason\030\005 \001(\016"
    "2%.bgs.protocol.InvitationRemovedReason\""
    "\232\001\n\033SuggestionAddedNotification\0220\n\010agent"
    "_id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberI"
    "d\022\017\n\007club_id\030\003 \001(\004\0228\n\nsuggestion\030\004 \001(\0132$"
    ".bgs.protocol.club.v1.ClubSuggestion\"\260\001\n"
    "\035SuggestionRemovedNotification\0220\n\010agent_"
    "id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId"
    "\022\017\n\007club_id\030\003 \001(\004\022\025\n\rsuggestion_id\030\004 \001(\006"
    "\0225\n\006reason\030\005 \001(\0162%.bgs.protocol.Suggesti"
    "onRemovedReason\"\212\001\n\027StreamAddedNotificat"
    "ion\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.clu"
    "b.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022,\n\006stream"
    "\030\004 \001(\0132\034.bgs.protocol.club.v1.Stream\"q\n\031"
    "StreamRemovedNotification\0220\n\010agent_id\030\001 "
    "\001(\0132\036.bgs.protocol.club.v1.MemberId\022\017\n\007c"
    "lub_id\030\003 \001(\004\022\021\n\tstream_id\030\004 \001(\004\"\267\001\n\036Stre"
    "amStateChangedNotification\0220\n\010agent_id\030\001"
    " \001(\0132\036.bgs.protocol.club.v1.MemberId\022\017\n\007"
    "club_id\030\003 \001(\004\022\021\n\tstream_id\030\004 \001(\004\022\?\n\nassi"
    "gnment\030\005 \001(\0132+.bgs.protocol.club.v1.Stre"
    "amStateAssignment\"\254\001\n\036StreamMessageAdded"
    "Notification\0220\n\010agent_id\030\001 \001(\0132\036.bgs.pro"
    "tocol.club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022"
    "\021\n\tstream_id\030\004 \001(\004\0224\n\007message\030\005 \001(\0132#.bg"
    "s.protocol.club.v1.StreamMessage\"\256\001\n Str"
    "eamMessageUpdatedNotification\0220\n\010agent_i"
    "d\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022"
    "\017\n\007club_id\030\003 \001(\004\022\021\n\tstream_id\030\004 \001(\004\0224\n\007m"
    "essage\030\005 \001(\0132#.bgs.protocol.club.v1.Stre"
    "amMessage\"\271\001\n!StreamTypingIndicatorNotif"
    "ication\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol"
    ".club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\022\021\n\tst"
    "ream_id\030\004 \001(\004\022>\n\tindicator\030\005 \003(\0132+.bgs.p"
    "rotocol.club.v1.StreamTypingIndicator\"\322\001"
    "\n!StreamUnreadIndicatorNotification\0220\n\010a"
    "gent_id\030\001 \001(\0132\036.bgs.protocol.club.v1.Mem"
    "berId\022\017\n\007club_id\030\003 \001(\004\0224\n\005event\030\004 \001(\0132%."
    "bgs.protocol.club.v1.StreamEventTime\0224\n\007"
    "message\030\005 \001(\0132#.bgs.protocol.club.v1.Str"
    "eamMessage\"\241\001\n!StreamAdvanceViewTimeNoti"
    "fication\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoco"
    "l.club.v1.MemberId\022\017\n\007club_id\030\003 \001(\004\0229\n\004v"
    "iew\030\004 \003(\0132+.bgs.protocol.club.v1.StreamA"
    "dvanceViewTimeB\002H\002P\000P\001", 3622);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "club_notification.proto", &protobuf_RegisterTypes);
  SubscribeNotification::default_instance_ = new SubscribeNotification();
  UnsubscribeNotification::default_instance_ = new UnsubscribeNotification();
  StateChangedNotification::default_instance_ = new StateChangedNotification();
  SettingsChangedNotification::default_instance_ = new SettingsChangedNotification();
  MemberAddedNotification::default_instance_ = new MemberAddedNotification();
  MemberRemovedNotification::default_instance_ = new MemberRemovedNotification();
  MemberStateChangedNotification::default_instance_ = new MemberStateChangedNotification();
  SubscriberStateChangedNotification::default_instance_ = new SubscriberStateChangedNotification();
  MemberRoleChangedNotification::default_instance_ = new MemberRoleChangedNotification();
  InvitationAddedNotification::default_instance_ = new InvitationAddedNotification();
  InvitationRemovedNotification::default_instance_ = new InvitationRemovedNotification();
  SuggestionAddedNotification::default_instance_ = new SuggestionAddedNotification();
  SuggestionRemovedNotification::default_instance_ = new SuggestionRemovedNotification();
  StreamAddedNotification::default_instance_ = new StreamAddedNotification();
  StreamRemovedNotification::default_instance_ = new StreamRemovedNotification();
  StreamStateChangedNotification::default_instance_ = new StreamStateChangedNotification();
  StreamMessageAddedNotification::default_instance_ = new StreamMessageAddedNotification();
  StreamMessageUpdatedNotification::default_instance_ = new StreamMessageUpdatedNotification();
  StreamTypingIndicatorNotification::default_instance_ = new StreamTypingIndicatorNotification();
  StreamUnreadIndicatorNotification::default_instance_ = new StreamUnreadIndicatorNotification();
  StreamAdvanceViewTimeNotification::default_instance_ = new StreamAdvanceViewTimeNotification();
  SubscribeNotification::default_instance_->InitAsDefaultInstance();
  UnsubscribeNotification::default_instance_->InitAsDefaultInstance();
  StateChangedNotification::default_instance_->InitAsDefaultInstance();
  SettingsChangedNotification::default_instance_->InitAsDefaultInstance();
  MemberAddedNotification::default_instance_->InitAsDefaultInstance();
  MemberRemovedNotification::default_instance_->InitAsDefaultInstance();
  MemberStateChangedNotification::default_instance_->InitAsDefaultInstance();
  SubscriberStateChangedNotification::default_instance_->InitAsDefaultInstance();
  MemberRoleChangedNotification::default_instance_->InitAsDefaultInstance();
  InvitationAddedNotification::default_instance_->InitAsDefaultInstance();
  InvitationRemovedNotification::default_instance_->InitAsDefaultInstance();
  SuggestionAddedNotification::default_instance_->InitAsDefaultInstance();
  SuggestionRemovedNotification::default_instance_->InitAsDefaultInstance();
  StreamAddedNotification::default_instance_->InitAsDefaultInstance();
  StreamRemovedNotification::default_instance_->InitAsDefaultInstance();
  StreamStateChangedNotification::default_instance_->InitAsDefaultInstance();
  StreamMessageAddedNotification::default_instance_->InitAsDefaultInstance();
  StreamMessageUpdatedNotification::default_instance_->InitAsDefaultInstance();
  StreamTypingIndicatorNotification::default_instance_->InitAsDefaultInstance();
  StreamUnreadIndicatorNotification::default_instance_->InitAsDefaultInstance();
  StreamAdvanceViewTimeNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_club_5fnotification_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_club_5fnotification_2eproto {
  StaticDescriptorInitializer_club_5fnotification_2eproto() {
    protobuf_AddDesc_club_5fnotification_2eproto();
  }
} static_descriptor_initializer_club_5fnotification_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeNotification::kAgentIdFieldNumber;
const int SubscribeNotification::kClubIdFieldNumber;
const int SubscribeNotification::kClubFieldNumber;
const int SubscribeNotification::kViewFieldNumber;
const int SubscribeNotification::kSettingsFieldNumber;
const int SubscribeNotification::kMemberFieldNumber;
#endif  // !_MSC_VER

SubscribeNotification::SubscribeNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SubscribeNotification)
}

void SubscribeNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  club_ = const_cast< ::bgs::protocol::club::v1::Club*>(&::bgs::protocol::club::v1::Club::default_instance());
  view_ = const_cast< ::bgs::protocol::club::v1::ClubView*>(&::bgs::protocol::club::v1::ClubView::default_instance());
  settings_ = const_cast< ::bgs::protocol::club::v1::ClubSettings*>(&::bgs::protocol::club::v1::ClubSettings::default_instance());
  member_ = const_cast< ::bgs::protocol::club::v1::Member*>(&::bgs::protocol::club::v1::Member::default_instance());
}

SubscribeNotification::SubscribeNotification(const SubscribeNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SubscribeNotification)
}

void SubscribeNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  club_ = NULL;
  view_ = NULL;
  settings_ = NULL;
  member_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeNotification::~SubscribeNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SubscribeNotification)
  SharedDtor();
}

void SubscribeNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete club_;
    delete view_;
    delete settings_;
    delete member_;
  }
}

void SubscribeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeNotification_descriptor_;
}

const SubscribeNotification& SubscribeNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

SubscribeNotification* SubscribeNotification::default_instance_ = NULL;

SubscribeNotification* SubscribeNotification::New() const {
  return new SubscribeNotification;
}

void SubscribeNotification::Swap(SubscribeNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeNotification_descriptor_;
  metadata.reflection = SubscribeNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeNotification::kAgentIdFieldNumber;
const int UnsubscribeNotification::kClubIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeNotification::UnsubscribeNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UnsubscribeNotification)
}

void UnsubscribeNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

UnsubscribeNotification::UnsubscribeNotification(const UnsubscribeNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UnsubscribeNotification)
}

void UnsubscribeNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeNotification::~UnsubscribeNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UnsubscribeNotification)
  SharedDtor();
}

void UnsubscribeNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void UnsubscribeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeNotification_descriptor_;
}

const UnsubscribeNotification& UnsubscribeNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

UnsubscribeNotification* UnsubscribeNotification::default_instance_ = NULL;

UnsubscribeNotification* UnsubscribeNotification::New() const {
  return new UnsubscribeNotification;
}

void UnsubscribeNotification::Swap(UnsubscribeNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeNotification_descriptor_;
  metadata.reflection = UnsubscribeNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StateChangedNotification::kAgentIdFieldNumber;
const int StateChangedNotification::kClubIdFieldNumber;
const int StateChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

StateChangedNotification::StateChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StateChangedNotification)
}

void StateChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  assignment_ = const_cast< ::bgs::protocol::club::v1::ClubStateAssignment*>(&::bgs::protocol::club::v1::ClubStateAssignment::default_instance());
}

StateChangedNotification::StateChangedNotification(const StateChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StateChangedNotification)
}

void StateChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  assignment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StateChangedNotification::~StateChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StateChangedNotification)
  SharedDtor();
}

void StateChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete assignment_;
  }
}

void StateChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateChangedNotification_descriptor_;
}

const StateChangedNotification& StateChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StateChangedNotification* StateChangedNotification::default_instance_ = NULL;

StateChangedNotification* StateChangedNotification::New() const {
  return new StateChangedNotification;
}

void StateChangedNotification::Swap(StateChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StateChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateChangedNotification_descriptor_;
  metadata.reflection = StateChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SettingsChangedNotification::kAgentIdFieldNumber;
const int SettingsChangedNotification::kClubIdFieldNumber;
const int SettingsChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

SettingsChangedNotification::SettingsChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SettingsChangedNotification)
}

void SettingsChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  assignment_ = const_cast< ::bgs::protocol::club::v1::ClubSettingsAssignment*>(&::bgs::protocol::club::v1::ClubSettingsAssignment::default_instance());
}

SettingsChangedNotification::SettingsChangedNotification(const SettingsChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SettingsChangedNotification)
}

void SettingsChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  assignment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SettingsChangedNotification::~SettingsChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SettingsChangedNotification)
  SharedDtor();
}

void SettingsChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete assignment_;
  }
}

void SettingsChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingsChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SettingsChangedNotification_descriptor_;
}

const SettingsChangedNotification& SettingsChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

SettingsChangedNotification* SettingsChangedNotification::default_instance_ = NULL;

SettingsChangedNotification* SettingsChangedNotification::New() const {
  return new SettingsChangedNotification;
}

void SettingsChangedNotification::Swap(SettingsChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SettingsChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SettingsChangedNotification_descriptor_;
  metadata.reflection = SettingsChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int MemberAddedNotification::kAgentIdFieldNumber;
const int MemberAddedNotification::kClubIdFieldNumber;
const int MemberAddedNotification::kMemberFieldNumber;
#endif  // !_MSC_VER

MemberAddedNotification::MemberAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.MemberAddedNotification)
}

void MemberAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

MemberAddedNotification::MemberAddedNotification(const MemberAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.MemberAddedNotification)
}

void MemberAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemberAddedNotification::~MemberAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.MemberAddedNotification)
  SharedDtor();
}

void MemberAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void MemberAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemberAddedNotification_descriptor_;
}

const MemberAddedNotification& MemberAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

MemberAddedNotification* MemberAddedNotification::default_instance_ = NULL;

MemberAddedNotification* MemberAddedNotification::New() const {
  return new MemberAddedNotification;
}

void MemberAddedNotification::Swap(MemberAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MemberAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemberAddedNotification_descriptor_;
  metadata.reflection = MemberAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int MemberRemovedNotification::kAgentIdFieldNumber;
const int MemberRemovedNotification::kClubIdFieldNumber;
const int MemberRemovedNotification::kMemberFieldNumber;
#endif  // !_MSC_VER

MemberRemovedNotification::MemberRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.MemberRemovedNotification)
}

void MemberRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

MemberRemovedNotification::MemberRemovedNotification(const MemberRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.MemberRemovedNotification)
}

void MemberRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemberRemovedNotification::~MemberRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.MemberRemovedNotification)
  SharedDtor();
}

void MemberRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void MemberRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemberRemovedNotification_descriptor_;
}

const MemberRemovedNotification& MemberRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

MemberRemovedNotification* MemberRemovedNotification::default_instance_ = NULL;

MemberRemovedNotification* MemberRemovedNotification::New() const {
  return new MemberRemovedNotification;
}

void MemberRemovedNotification::Swap(MemberRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MemberRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemberRemovedNotification_descriptor_;
  metadata.reflection = MemberRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int MemberStateChangedNotification::kAgentIdFieldNumber;
const int MemberStateChangedNotification::kClubIdFieldNumber;
const int MemberStateChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

MemberStateChangedNotification::MemberStateChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.MemberStateChangedNotification)
}

void MemberStateChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

MemberStateChangedNotification::MemberStateChangedNotification(const MemberStateChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.MemberStateChangedNotification)
}

void MemberStateChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemberStateChangedNotification::~MemberStateChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.MemberStateChangedNotification)
  SharedDtor();
}

void MemberStateChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void MemberStateChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberStateChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemberStateChangedNotification_descriptor_;
}

const MemberStateChangedNotification& MemberStateChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

MemberStateChangedNotification* MemberStateChangedNotification::default_instance_ = NULL;

MemberStateChangedNotification* MemberStateChangedNotification::New() const {
  return new MemberStateChangedNotification;
}

void MemberStateChangedNotification::Swap(MemberStateChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MemberStateChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemberStateChangedNotification_descriptor_;
  metadata.reflection = MemberStateChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscriberStateChangedNotification::kAgentIdFieldNumber;
const int SubscriberStateChangedNotification::kClubIdFieldNumber;
const int SubscriberStateChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

SubscriberStateChangedNotification::SubscriberStateChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SubscriberStateChangedNotification)
}

void SubscriberStateChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SubscriberStateChangedNotification::SubscriberStateChangedNotification(const SubscriberStateChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SubscriberStateChangedNotification)
}

void SubscriberStateChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscriberStateChangedNotification::~SubscriberStateChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SubscriberStateChangedNotification)
  SharedDtor();
}

void SubscriberStateChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SubscriberStateChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriberStateChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscriberStateChangedNotification_descriptor_;
}

const SubscriberStateChangedNotification& SubscriberStateChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

SubscriberStateChangedNotification* SubscriberStateChangedNotification::default_instance_ = NULL;

SubscriberStateChangedNotification* SubscriberStateChangedNotification::New() const {
  return new SubscriberStateChangedNotification;
}

void SubscriberStateChangedNotification::Swap(SubscriberStateChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscriberStateChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscriberStateChangedNotification_descriptor_;
  metadata.reflection = SubscriberStateChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int MemberRoleChangedNotification::kAgentIdFieldNumber;
const int MemberRoleChangedNotification::kClubIdFieldNumber;
const int MemberRoleChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

MemberRoleChangedNotification::MemberRoleChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.MemberRoleChangedNotification)
}

void MemberRoleChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

MemberRoleChangedNotification::MemberRoleChangedNotification(const MemberRoleChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.MemberRoleChangedNotification)
}

void MemberRoleChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemberRoleChangedNotification::~MemberRoleChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.MemberRoleChangedNotification)
  SharedDtor();
}

void MemberRoleChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void MemberRoleChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberRoleChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemberRoleChangedNotification_descriptor_;
}

const MemberRoleChangedNotification& MemberRoleChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

MemberRoleChangedNotification* MemberRoleChangedNotification::default_instance_ = NULL;

MemberRoleChangedNotification* MemberRoleChangedNotification::New() const {
  return new MemberRoleChangedNotification;
}

void MemberRoleChangedNotification::Swap(MemberRoleChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MemberRoleChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemberRoleChangedNotification_descriptor_;
  metadata.reflection = MemberRoleChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int InvitationAddedNotification::kAgentIdFieldNumber;
const int InvitationAddedNotification::kClubIdFieldNumber;
const int InvitationAddedNotification::kInvitationFieldNumber;
#endif  // !_MSC_VER

InvitationAddedNotification::InvitationAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.InvitationAddedNotification)
}

void InvitationAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  invitation_ = const_cast< ::bgs::protocol::club::v1::ClubInvitation*>(&::bgs::protocol::club::v1::ClubInvitation::default_instance());
}

InvitationAddedNotification::InvitationAddedNotification(const InvitationAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.InvitationAddedNotification)
}

void InvitationAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvitationAddedNotification::~InvitationAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.InvitationAddedNotification)
  SharedDtor();
}

void InvitationAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete invitation_;
  }
}

void InvitationAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitationAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvitationAddedNotification_descriptor_;
}

const InvitationAddedNotification& InvitationAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

InvitationAddedNotification* InvitationAddedNotification::default_instance_ = NULL;

InvitationAddedNotification* InvitationAddedNotification::New() const {
  return new InvitationAddedNotification;
}

void InvitationAddedNotification::Swap(InvitationAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata InvitationAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvitationAddedNotification_descriptor_;
  metadata.reflection = InvitationAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int InvitationRemovedNotification::kAgentIdFieldNumber;
const int InvitationRemovedNotification::kClubIdFieldNumber;
const int InvitationRemovedNotification::kInvitationIdFieldNumber;
const int InvitationRemovedNotification::kReasonFieldNumber;
#endif  // !_MSC_VER

InvitationRemovedNotification::InvitationRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.InvitationRemovedNotification)
}

void InvitationRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

InvitationRemovedNotification::InvitationRemovedNotification(const InvitationRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.InvitationRemovedNotification)
}

void InvitationRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_id_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvitationRemovedNotification::~InvitationRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.InvitationRemovedNotification)
  SharedDtor();
}

void InvitationRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void InvitationRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitationRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvitationRemovedNotification_descriptor_;
}

const InvitationRemovedNotification& InvitationRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

InvitationRemovedNotification* InvitationRemovedNotification::default_instance_ = NULL;

InvitationRemovedNotification* InvitationRemovedNotification::New() const {
  return new InvitationRemovedNotification;
}

void InvitationRemovedNotification::Swap(InvitationRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata InvitationRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvitationRemovedNotification_descriptor_;
  metadata.reflection = InvitationRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SuggestionAddedNotification::kAgentIdFieldNumber;
const int SuggestionAddedNotification::kClubIdFieldNumber;
const int SuggestionAddedNotification::kSuggestionFieldNumber;
#endif  // !_MSC_VER

SuggestionAddedNotification::SuggestionAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SuggestionAddedNotification)
}

void SuggestionAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  suggestion_ = const_cast< ::bgs::protocol::club::v1::ClubSuggestion*>(&::bgs::protocol::club::v1::ClubSuggestion::default_instance());
}

SuggestionAddedNotification::SuggestionAddedNotification(const SuggestionAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SuggestionAddedNotification)
}

void SuggestionAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  suggestion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SuggestionAddedNotification::~SuggestionAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SuggestionAddedNotification)
  SharedDtor();
}

void SuggestionAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete suggestion_;
  }
}

void SuggestionAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuggestionAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SuggestionAddedNotification_descriptor_;
}

const SuggestionAddedNotification& SuggestionAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

SuggestionAddedNotification* SuggestionAddedNotification::default_instance_ = NULL;

SuggestionAddedNotification* SuggestionAddedNotification::New() const {
  return new SuggestionAddedNotification;
}

void SuggestionAddedNotification::Swap(SuggestionAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SuggestionAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SuggestionAddedNotification_descriptor_;
  metadata.reflection = SuggestionAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SuggestionRemovedNotification::kAgentIdFieldNumber;
const int SuggestionRemovedNotification::kClubIdFieldNumber;
const int SuggestionRemovedNotification::kSuggestionIdFieldNumber;
const int SuggestionRemovedNotification::kReasonFieldNumber;
#endif  // !_MSC_VER

SuggestionRemovedNotification::SuggestionRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SuggestionRemovedNotification)
}

void SuggestionRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SuggestionRemovedNotification::SuggestionRemovedNotification(const SuggestionRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SuggestionRemovedNotification)
}

void SuggestionRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SuggestionRemovedNotification::~SuggestionRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SuggestionRemovedNotification)
  SharedDtor();
}

void SuggestionRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SuggestionRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuggestionRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SuggestionRemovedNotification_descriptor_;
}

const SuggestionRemovedNotification& SuggestionRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

SuggestionRemovedNotification* SuggestionRemovedNotification::default_instance_ = NULL;

SuggestionRemovedNotification* SuggestionRemovedNotification::New() const {
  return new SuggestionRemovedNotification;
}

void SuggestionRemovedNotification::Swap(SuggestionRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SuggestionRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SuggestionRemovedNotification_descriptor_;
  metadata.reflection = SuggestionRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamAddedNotification::kAgentIdFieldNumber;
const int StreamAddedNotification::kClubIdFieldNumber;
const int StreamAddedNotification::kStreamFieldNumber;
#endif  // !_MSC_VER

StreamAddedNotification::StreamAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamAddedNotification)
}

void StreamAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  stream_ = const_cast< ::bgs::protocol::club::v1::Stream*>(&::bgs::protocol::club::v1::Stream::default_instance());
}

StreamAddedNotification::StreamAddedNotification(const StreamAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamAddedNotification)
}

void StreamAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamAddedNotification::~StreamAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamAddedNotification)
  SharedDtor();
}

void StreamAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete stream_;
  }
}

void StreamAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamAddedNotification_descriptor_;
}

const StreamAddedNotification& StreamAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamAddedNotification* StreamAddedNotification::default_instance_ = NULL;

StreamAddedNotification* StreamAddedNotification::New() const {
  return new StreamAddedNotification;
}

void StreamAddedNotification::Swap(StreamAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamAddedNotification_descriptor_;
  metadata.reflection = StreamAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamRemovedNotification::kAgentIdFieldNumber;
const int StreamRemovedNotification::kClubIdFieldNumber;
const int StreamRemovedNotification::kStreamIdFieldNumber;
#endif  // !_MSC_VER

StreamRemovedNotification::StreamRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamRemovedNotification)
}

void StreamRemovedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

StreamRemovedNotification::StreamRemovedNotification(const StreamRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamRemovedNotification)
}

void StreamRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamRemovedNotification::~StreamRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamRemovedNotification)
  SharedDtor();
}

void StreamRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void StreamRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamRemovedNotification_descriptor_;
}

const StreamRemovedNotification& StreamRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamRemovedNotification* StreamRemovedNotification::default_instance_ = NULL;

StreamRemovedNotification* StreamRemovedNotification::New() const {
  return new StreamRemovedNotification;
}

void StreamRemovedNotification::Swap(StreamRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamRemovedNotification_descriptor_;
  metadata.reflection = StreamRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamStateChangedNotification::kAgentIdFieldNumber;
const int StreamStateChangedNotification::kClubIdFieldNumber;
const int StreamStateChangedNotification::kStreamIdFieldNumber;
const int StreamStateChangedNotification::kAssignmentFieldNumber;
#endif  // !_MSC_VER

StreamStateChangedNotification::StreamStateChangedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamStateChangedNotification)
}

void StreamStateChangedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  assignment_ = const_cast< ::bgs::protocol::club::v1::StreamStateAssignment*>(&::bgs::protocol::club::v1::StreamStateAssignment::default_instance());
}

StreamStateChangedNotification::StreamStateChangedNotification(const StreamStateChangedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamStateChangedNotification)
}

void StreamStateChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  assignment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamStateChangedNotification::~StreamStateChangedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamStateChangedNotification)
  SharedDtor();
}

void StreamStateChangedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete assignment_;
  }
}

void StreamStateChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamStateChangedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamStateChangedNotification_descriptor_;
}

const StreamStateChangedNotification& StreamStateChangedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamStateChangedNotification* StreamStateChangedNotification::default_instance_ = NULL;

StreamStateChangedNotification* StreamStateChangedNotification::New() const {
  return new StreamStateChangedNotification;
}

void StreamStateChangedNotification::Swap(StreamStateChangedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamStateChangedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamStateChangedNotification_descriptor_;
  metadata.reflection = StreamStateChangedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamMessageAddedNotification::kAgentIdFieldNumber;
const int StreamMessageAddedNotification::kClubIdFieldNumber;
const int StreamMessageAddedNotification::kStreamIdFieldNumber;
const int StreamMessageAddedNotification::kMessageFieldNumber;
#endif  // !_MSC_VER

StreamMessageAddedNotification::StreamMessageAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamMessageAddedNotification)
}

void StreamMessageAddedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

StreamMessageAddedNotification::StreamMessageAddedNotification(const StreamMessageAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamMessageAddedNotification)
}

void StreamMessageAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamMessageAddedNotification::~StreamMessageAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamMessageAddedNotification)
  SharedDtor();
}

void StreamMessageAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete message_;
  }
}

void StreamMessageAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamMessageAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamMessageAddedNotification_descriptor_;
}

const StreamMessageAddedNotification& StreamMessageAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamMessageAddedNotification* StreamMessageAddedNotification::default_instance_ = NULL;

StreamMessageAddedNotification* StreamMessageAddedNotification::New() const {
  return new StreamMessageAddedNotification;
}

void StreamMessageAddedNotification::Swap(StreamMessageAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamMessageAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamMessageAddedNotification_descriptor_;
  metadata.reflection = StreamMessageAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamMessageUpdatedNotification::kAgentIdFieldNumber;
const int StreamMessageUpdatedNotification::kClubIdFieldNumber;
const int StreamMessageUpdatedNotification::kStreamIdFieldNumber;
const int StreamMessageUpdatedNotification::kMessageFieldNumber;
#endif  // !_MSC_VER

StreamMessageUpdatedNotification::StreamMessageUpdatedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamMessageUpdatedNotification)
}

void StreamMessageUpdatedNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

StreamMessageUpdatedNotification::StreamMessageUpdatedNotification(const StreamMessageUpdatedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamMessageUpdatedNotification)
}

void StreamMessageUpdatedNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamMessageUpdatedNotification::~StreamMessageUpdatedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamMessageUpdatedNotification)
  SharedDtor();
}

void StreamMessageUpdatedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete message_;
  }
}

void StreamMessageUpdatedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamMessageUpdatedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamMessageUpdatedNotification_descriptor_;
}

const StreamMessageUpdatedNotification& StreamMessageUpdatedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamMessageUpdatedNotification* StreamMessageUpdatedNotification::default_instance_ = NULL;

StreamMessageUpdatedNotification* StreamMessageUpdatedNotification::New() const {
  return new StreamMessageUpdatedNotification;
}

void StreamMessageUpdatedNotification::Swap(StreamMessageUpdatedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamMessageUpdatedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamMessageUpdatedNotification_descriptor_;
  metadata.reflection = StreamMessageUpdatedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamTypingIndicatorNotification::kAgentIdFieldNumber;
const int StreamTypingIndicatorNotification::kClubIdFieldNumber;
const int StreamTypingIndicatorNotification::kStreamIdFieldNumber;
const int StreamTypingIndicatorNotification::kIndicatorFieldNumber;
#endif  // !_MSC_VER

StreamTypingIndicatorNotification::StreamTypingIndicatorNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamTypingIndicatorNotification)
}

void StreamTypingIndicatorNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

StreamTypingIndicatorNotification::StreamTypingIndicatorNotification(const StreamTypingIndicatorNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamTypingIndicatorNotification)
}

void StreamTypingIndicatorNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamTypingIndicatorNotification::~StreamTypingIndicatorNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamTypingIndicatorNotification)
  SharedDtor();
}

void StreamTypingIndicatorNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void StreamTypingIndicatorNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamTypingIndicatorNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamTypingIndicatorNotification_descriptor_;
}

const StreamTypingIndicatorNotification& StreamTypingIndicatorNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamTypingIndicatorNotification* StreamTypingIndicatorNotification::default_instance_ = NULL;

StreamTypingIndicatorNotification* StreamTypingIndicatorNotification::New() const {
  return new StreamTypingIndicatorNotification;
}

void StreamTypingIndicatorNotification::Swap(StreamTypingIndicatorNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamTypingIndicatorNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamTypingIndicatorNotification_descriptor_;
  metadata.reflection = StreamTypingIndicatorNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamUnreadIndicatorNotification::kAgentIdFieldNumber;
const int StreamUnreadIndicatorNotification::kClubIdFieldNumber;
const int StreamUnreadIndicatorNotification::kEventFieldNumber;
const int StreamUnreadIndicatorNotification::kMessageFieldNumber;
#endif  // !_MSC_VER

StreamUnreadIndicatorNotification::StreamUnreadIndicatorNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamUnreadIndicatorNotification)
}

void StreamUnreadIndicatorNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  event_ = const_cast< ::bgs::protocol::club::v1::StreamEventTime*>(&::bgs::protocol::club::v1::StreamEventTime::default_instance());
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

StreamUnreadIndicatorNotification::StreamUnreadIndicatorNotification(const StreamUnreadIndicatorNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamUnreadIndicatorNotification)
}

void StreamUnreadIndicatorNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  event_ = NULL;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamUnreadIndicatorNotification::~StreamUnreadIndicatorNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamUnreadIndicatorNotification)
  SharedDtor();
}

void StreamUnreadIndicatorNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete event_;
    delete message_;
  }
}

void StreamUnreadIndicatorNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamUnreadIndicatorNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamUnreadIndicatorNotification_descriptor_;
}

const StreamUnreadIndicatorNotification& StreamUnreadIndicatorNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamUnreadIndicatorNotification* StreamUnreadIndicatorNotification::default_instance_ = NULL;

StreamUnreadIndicatorNotification* StreamUnreadIndicatorNotification::New() const {
  return new StreamUnreadIndicatorNotification;
}

void StreamUnreadIndicatorNotification::Swap(StreamUnreadIndicatorNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamUnreadIndicatorNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamUnreadIndicatorNotification_descriptor_;
  metadata.reflection = StreamUnreadIndicatorNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int StreamAdvanceViewTimeNotification::kAgentIdFieldNumber;
const int StreamAdvanceViewTimeNotification::kClubIdFieldNumber;
const int StreamAdvanceViewTimeNotification::kViewFieldNumber;
#endif  // !_MSC_VER

StreamAdvanceViewTimeNotification::StreamAdvanceViewTimeNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.StreamAdvanceViewTimeNotification)
}

void StreamAdvanceViewTimeNotification::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

StreamAdvanceViewTimeNotification::StreamAdvanceViewTimeNotification(const StreamAdvanceViewTimeNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.StreamAdvanceViewTimeNotification)
}

void StreamAdvanceViewTimeNotification::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamAdvanceViewTimeNotification::~StreamAdvanceViewTimeNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.StreamAdvanceViewTimeNotification)
  SharedDtor();
}

void StreamAdvanceViewTimeNotification::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void StreamAdvanceViewTimeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamAdvanceViewTimeNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamAdvanceViewTimeNotification_descriptor_;
}

const StreamAdvanceViewTimeNotification& StreamAdvanceViewTimeNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fnotification_2eproto();
  return *default_instance_;
}

StreamAdvanceViewTimeNotification* StreamAdvanceViewTimeNotification::default_instance_ = NULL;

StreamAdvanceViewTimeNotification* StreamAdvanceViewTimeNotification::New() const {
  return new StreamAdvanceViewTimeNotification;
}

void StreamAdvanceViewTimeNotification::Swap(StreamAdvanceViewTimeNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata StreamAdvanceViewTimeNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamAdvanceViewTimeNotification_descriptor_;
  metadata.reflection = StreamAdvanceViewTimeNotification_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
