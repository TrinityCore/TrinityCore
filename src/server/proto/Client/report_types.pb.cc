// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: report_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "report_types.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace report {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ReportType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportType_reflection_ = NULL;
struct ReportTypeOneofInstance {
  const ::bgs::protocol::report::v1::CustomReport* custom_report_;
  const ::bgs::protocol::report::v1::SpamReport* spam_report_;
  const ::bgs::protocol::report::v1::HarassmentReport* harassment_report_;
  const ::bgs::protocol::report::v1::RealLifeThreatReport* real_life_threat_report_;
  const ::bgs::protocol::report::v1::InappropriateBattleTagReport* inappropriate_battle_tag_report_;
  const ::bgs::protocol::report::v1::HackingReport* hacking_report_;
  const ::bgs::protocol::report::v1::BottingReport* botting_report_;
}* ReportType_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CustomReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpamReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpamReport_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SpamReport_SpamSource_descriptor_ = NULL;
const ::google::protobuf::Descriptor* HarassmentReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HarassmentReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* RealLifeThreatReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RealLifeThreatReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* InappropriateBattleTagReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InappropriateBattleTagReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* HackingReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HackingReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* BottingReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BottingReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* Report_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Report_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_report_5ftypes_2eproto() {
  protobuf_AddDesc_report_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "report_types.proto");
  GOOGLE_CHECK(file != NULL);
  ReportType_descriptor_ = file->message_type(0);
  static const int ReportType_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportType, user_description_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, custom_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, spam_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, harassment_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, real_life_threat_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, inappropriate_battle_tag_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, hacking_report_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ReportType_default_oneof_instance_, botting_report_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportType, type_),
  };
  ReportType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReportType_descriptor_,
      ReportType::default_instance_,
      ReportType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportType, _unknown_fields_),
      -1,
      ReportType_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportType, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReportType));
  CustomReport_descriptor_ = file->message_type(1);
  static const int CustomReport_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomReport, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomReport, program_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomReport, attribute_),
  };
  CustomReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CustomReport_descriptor_,
      CustomReport::default_instance_,
      CustomReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CustomReport));
  SpamReport_descriptor_ = file->message_type(2);
  static const int SpamReport_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpamReport, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpamReport, source_),
  };
  SpamReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpamReport_descriptor_,
      SpamReport::default_instance_,
      SpamReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpamReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpamReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpamReport));
  SpamReport_SpamSource_descriptor_ = SpamReport_descriptor_->enum_type(0);
  HarassmentReport_descriptor_ = file->message_type(3);
  static const int HarassmentReport_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarassmentReport, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarassmentReport, text_),
  };
  HarassmentReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HarassmentReport_descriptor_,
      HarassmentReport::default_instance_,
      HarassmentReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarassmentReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarassmentReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HarassmentReport));
  RealLifeThreatReport_descriptor_ = file->message_type(4);
  static const int RealLifeThreatReport_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealLifeThreatReport, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealLifeThreatReport, text_),
  };
  RealLifeThreatReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RealLifeThreatReport_descriptor_,
      RealLifeThreatReport::default_instance_,
      RealLifeThreatReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealLifeThreatReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealLifeThreatReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RealLifeThreatReport));
  InappropriateBattleTagReport_descriptor_ = file->message_type(5);
  static const int InappropriateBattleTagReport_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InappropriateBattleTagReport, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InappropriateBattleTagReport, battle_tag_),
  };
  InappropriateBattleTagReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InappropriateBattleTagReport_descriptor_,
      InappropriateBattleTagReport::default_instance_,
      InappropriateBattleTagReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InappropriateBattleTagReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InappropriateBattleTagReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InappropriateBattleTagReport));
  HackingReport_descriptor_ = file->message_type(6);
  static const int HackingReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HackingReport, target_),
  };
  HackingReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HackingReport_descriptor_,
      HackingReport::default_instance_,
      HackingReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HackingReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HackingReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HackingReport));
  BottingReport_descriptor_ = file->message_type(7);
  static const int BottingReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BottingReport, target_),
  };
  BottingReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BottingReport_descriptor_,
      BottingReport::default_instance_,
      BottingReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BottingReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BottingReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BottingReport));
  Report_descriptor_ = file->message_type(8);
  static const int Report_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, report_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, report_qos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, reporting_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, reporting_game_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, report_timestamp_),
  };
  Report_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Report_descriptor_,
      Report::default_instance_,
      Report_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Report));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_report_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReportType_descriptor_, &ReportType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CustomReport_descriptor_, &CustomReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpamReport_descriptor_, &SpamReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HarassmentReport_descriptor_, &HarassmentReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RealLifeThreatReport_descriptor_, &RealLifeThreatReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InappropriateBattleTagReport_descriptor_, &InappropriateBattleTagReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HackingReport_descriptor_, &HackingReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BottingReport_descriptor_, &BottingReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Report_descriptor_, &Report::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_report_5ftypes_2eproto() {
  delete ReportType::default_instance_;
  delete ReportType_default_oneof_instance_;
  delete ReportType_reflection_;
  delete CustomReport::default_instance_;
  delete CustomReport_reflection_;
  delete SpamReport::default_instance_;
  delete SpamReport_reflection_;
  delete HarassmentReport::default_instance_;
  delete HarassmentReport_reflection_;
  delete RealLifeThreatReport::default_instance_;
  delete RealLifeThreatReport_reflection_;
  delete InappropriateBattleTagReport::default_instance_;
  delete InappropriateBattleTagReport_reflection_;
  delete HackingReport::default_instance_;
  delete HackingReport_reflection_;
  delete BottingReport::default_instance_;
  delete BottingReport_reflection_;
  delete Report::default_instance_;
  delete Report_reflection_;
}

void protobuf_AddDesc_report_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::account::v1::protobuf_AddDesc_account_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_attribute_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022report_types.proto\022\026bgs.protocol.repor"
    "t.v1\032\023account_types.proto\032\025attribute_typ"
    "es.proto\032\022entity_types.proto\032\017rpc_types."
    "proto\"\243\004\n\nReportType\022\030\n\020user_description"
    "\030\001 \001(\t\022=\n\rcustom_report\030\n \001(\0132$.bgs.prot"
    "ocol.report.v1.CustomReportH\000\0229\n\013spam_re"
    "port\030\013 \001(\0132\".bgs.protocol.report.v1.Spam"
    "ReportH\000\022E\n\021harassment_report\030\014 \001(\0132(.bg"
    "s.protocol.report.v1.HarassmentReportH\000\022"
    "O\n\027real_life_threat_report\030\r \001(\0132,.bgs.p"
    "rotocol.report.v1.RealLifeThreatReportH\000"
    "\022_\n\037inappropriate_battle_tag_report\030\016 \001("
    "\01324.bgs.protocol.report.v1.Inappropriate"
    "BattleTagReportH\000\022\?\n\016hacking_report\030\017 \001("
    "\0132%.bgs.protocol.report.v1.HackingReport"
    "H\000\022\?\n\016botting_report\030\020 \001(\0132%.bgs.protoco"
    "l.report.v1.BottingReportH\000B\006\n\004type\"`\n\014C"
    "ustomReport\022\014\n\004type\030\001 \001(\t\022\026\n\nprogram_id\030"
    "\002 \001(\tB\002\030\001\022*\n\tattribute\030\003 \003(\0132\027.bgs.proto"
    "col.Attribute\"\325\001\n\nSpamReport\022:\n\006target\030\001"
    " \001(\0132*.bgs.protocol.account.v1.GameAccou"
    "ntHandle\022D\n\006source\030\002 \001(\0162-.bgs.protocol."
    "report.v1.SpamReport.SpamSource:\005OTHER\"E"
    "\n\nSpamSource\022\t\n\005OTHER\020\001\022\025\n\021FRIEND_INVITA"
    "TION\020\002\022\013\n\007WHISPER\020\003\022\010\n\004CHAT\020\004\"\\\n\020Harassm"
    "entReport\022:\n\006target\030\001 \001(\0132*.bgs.protocol"
    ".account.v1.GameAccountHandle\022\014\n\004text\030\002 "
    "\001(\t\"`\n\024RealLifeThreatReport\022:\n\006target\030\001 "
    "\001(\0132*.bgs.protocol.account.v1.GameAccoun"
    "tHandle\022\014\n\004text\030\002 \001(\t\"v\n\034InappropriateBa"
    "ttleTagReport\022:\n\006target\030\001 \001(\0132*.bgs.prot"
    "ocol.account.v1.GameAccountHandle\022\032\n\nbat"
    "tle_tag\030\002 \001(\tB\006\202\371+\002\010\001\"K\n\rHackingReport\022:"
    "\n\006target\030\001 \001(\0132*.bgs.protocol.account.v1"
    ".GameAccountHandle\"K\n\rBottingReport\022:\n\006t"
    "arget\030\001 \001(\0132*.bgs.protocol.account.v1.Ga"
    "meAccountHandle\"\345\001\n\006Report\022\023\n\013report_typ"
    "e\030\001 \002(\t\022*\n\tattribute\030\002 \003(\0132\027.bgs.protoco"
    "l.Attribute\022\025\n\nreport_qos\030\003 \001(\005:\0010\0221\n\021re"
    "porting_account\030\004 \001(\0132\026.bgs.protocol.Ent"
    "ityId\0226\n\026reporting_game_account\030\005 \001(\0132\026."
    "bgs.protocol.EntityId\022\030\n\020report_timestam"
    "p\030\006 \001(\006B\005H\002\200\001\000", 1694);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "report_types.proto", &protobuf_RegisterTypes);
  ReportType::default_instance_ = new ReportType();
  ReportType_default_oneof_instance_ = new ReportTypeOneofInstance;
  CustomReport::default_instance_ = new CustomReport();
  SpamReport::default_instance_ = new SpamReport();
  HarassmentReport::default_instance_ = new HarassmentReport();
  RealLifeThreatReport::default_instance_ = new RealLifeThreatReport();
  InappropriateBattleTagReport::default_instance_ = new InappropriateBattleTagReport();
  HackingReport::default_instance_ = new HackingReport();
  BottingReport::default_instance_ = new BottingReport();
  Report::default_instance_ = new Report();
  ReportType::default_instance_->InitAsDefaultInstance();
  CustomReport::default_instance_->InitAsDefaultInstance();
  SpamReport::default_instance_->InitAsDefaultInstance();
  HarassmentReport::default_instance_->InitAsDefaultInstance();
  RealLifeThreatReport::default_instance_->InitAsDefaultInstance();
  InappropriateBattleTagReport::default_instance_->InitAsDefaultInstance();
  HackingReport::default_instance_->InitAsDefaultInstance();
  BottingReport::default_instance_->InitAsDefaultInstance();
  Report::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_report_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_report_5ftypes_2eproto {
  StaticDescriptorInitializer_report_5ftypes_2eproto() {
    protobuf_AddDesc_report_5ftypes_2eproto();
  }
} static_descriptor_initializer_report_5ftypes_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int ReportType::kUserDescriptionFieldNumber;
const int ReportType::kCustomReportFieldNumber;
const int ReportType::kSpamReportFieldNumber;
const int ReportType::kHarassmentReportFieldNumber;
const int ReportType::kRealLifeThreatReportFieldNumber;
const int ReportType::kInappropriateBattleTagReportFieldNumber;
const int ReportType::kHackingReportFieldNumber;
const int ReportType::kBottingReportFieldNumber;
#endif  // !_MSC_VER

ReportType::ReportType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.ReportType)
}

void ReportType::InitAsDefaultInstance() {
  ReportType_default_oneof_instance_->custom_report_ = const_cast< ::bgs::protocol::report::v1::CustomReport*>(&::bgs::protocol::report::v1::CustomReport::default_instance());
  ReportType_default_oneof_instance_->spam_report_ = const_cast< ::bgs::protocol::report::v1::SpamReport*>(&::bgs::protocol::report::v1::SpamReport::default_instance());
  ReportType_default_oneof_instance_->harassment_report_ = const_cast< ::bgs::protocol::report::v1::HarassmentReport*>(&::bgs::protocol::report::v1::HarassmentReport::default_instance());
  ReportType_default_oneof_instance_->real_life_threat_report_ = const_cast< ::bgs::protocol::report::v1::RealLifeThreatReport*>(&::bgs::protocol::report::v1::RealLifeThreatReport::default_instance());
  ReportType_default_oneof_instance_->inappropriate_battle_tag_report_ = const_cast< ::bgs::protocol::report::v1::InappropriateBattleTagReport*>(&::bgs::protocol::report::v1::InappropriateBattleTagReport::default_instance());
  ReportType_default_oneof_instance_->hacking_report_ = const_cast< ::bgs::protocol::report::v1::HackingReport*>(&::bgs::protocol::report::v1::HackingReport::default_instance());
  ReportType_default_oneof_instance_->botting_report_ = const_cast< ::bgs::protocol::report::v1::BottingReport*>(&::bgs::protocol::report::v1::BottingReport::default_instance());
}

ReportType::ReportType(const ReportType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.ReportType)
}

void ReportType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_type();
}

ReportType::~ReportType() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.ReportType)
  SharedDtor();
}

void ReportType::SharedDtor() {
  if (user_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_description_;
  }
  if (has_type()) {
    clear_type();
  }
  if (this != default_instance_) {
  }
}

void ReportType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportType_descriptor_;
}

const ReportType& ReportType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

ReportType* ReportType::default_instance_ = NULL;

ReportType* ReportType::New() const {
  return new ReportType;
}

void ReportType::clear_type() {
  switch(type_case()) {
    case kCustomReport: {
      delete type_.custom_report_;
      break;
    }
    case kSpamReport: {
      delete type_.spam_report_;
      break;
    }
    case kHarassmentReport: {
      delete type_.harassment_report_;
      break;
    }
    case kRealLifeThreatReport: {
      delete type_.real_life_threat_report_;
      break;
    }
    case kInappropriateBattleTagReport: {
      delete type_.inappropriate_battle_tag_report_;
      break;
    }
    case kHackingReport: {
      delete type_.hacking_report_;
      break;
    }
    case kBottingReport: {
      delete type_.botting_report_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}

void ReportType::Swap(ReportType* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ReportType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportType_descriptor_;
  metadata.reflection = ReportType_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CustomReport::kTypeFieldNumber;
const int CustomReport::kProgramIdFieldNumber;
const int CustomReport::kAttributeFieldNumber;
#endif  // !_MSC_VER

CustomReport::CustomReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.CustomReport)
}

void CustomReport::InitAsDefaultInstance() {
}

CustomReport::CustomReport(const CustomReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.CustomReport)
}

void CustomReport::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomReport::~CustomReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.CustomReport)
  SharedDtor();
}

void CustomReport::SharedDtor() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (program_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete program_id_;
  }
  if (this != default_instance_) {
  }
}

void CustomReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomReport_descriptor_;
}

const CustomReport& CustomReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

CustomReport* CustomReport::default_instance_ = NULL;

CustomReport* CustomReport::New() const {
  return new CustomReport;
}

void CustomReport::Swap(CustomReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CustomReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomReport_descriptor_;
  metadata.reflection = CustomReport_reflection_;
  return metadata;
}

// ===================================================================

const ::google::protobuf::EnumDescriptor* SpamReport_SpamSource_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpamReport_SpamSource_descriptor_;
}
bool SpamReport_SpamSource_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SpamReport_SpamSource SpamReport::OTHER;
const SpamReport_SpamSource SpamReport::FRIEND_INVITATION;
const SpamReport_SpamSource SpamReport::WHISPER;
const SpamReport_SpamSource SpamReport::CHAT;
const SpamReport_SpamSource SpamReport::SpamSource_MIN;
const SpamReport_SpamSource SpamReport::SpamSource_MAX;
const int SpamReport::SpamSource_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SpamReport::kTargetFieldNumber;
const int SpamReport::kSourceFieldNumber;
#endif  // !_MSC_VER

SpamReport::SpamReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.SpamReport)
}

void SpamReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

SpamReport::SpamReport(const SpamReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.SpamReport)
}

void SpamReport::SharedCtor() {
  _cached_size_ = 0;
  target_ = NULL;
  source_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpamReport::~SpamReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.SpamReport)
  SharedDtor();
}

void SpamReport::SharedDtor() {
  if (this != default_instance_) {
    delete target_;
  }
}

void SpamReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpamReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpamReport_descriptor_;
}

const SpamReport& SpamReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

SpamReport* SpamReport::default_instance_ = NULL;

SpamReport* SpamReport::New() const {
  return new SpamReport;
}

void SpamReport::Swap(SpamReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SpamReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpamReport_descriptor_;
  metadata.reflection = SpamReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int HarassmentReport::kTargetFieldNumber;
const int HarassmentReport::kTextFieldNumber;
#endif  // !_MSC_VER

HarassmentReport::HarassmentReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.HarassmentReport)
}

void HarassmentReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

HarassmentReport::HarassmentReport(const HarassmentReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.HarassmentReport)
}

void HarassmentReport::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  target_ = NULL;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HarassmentReport::~HarassmentReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.HarassmentReport)
  SharedDtor();
}

void HarassmentReport::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
    delete target_;
  }
}

void HarassmentReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HarassmentReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HarassmentReport_descriptor_;
}

const HarassmentReport& HarassmentReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

HarassmentReport* HarassmentReport::default_instance_ = NULL;

HarassmentReport* HarassmentReport::New() const {
  return new HarassmentReport;
}

void HarassmentReport::Swap(HarassmentReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata HarassmentReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HarassmentReport_descriptor_;
  metadata.reflection = HarassmentReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RealLifeThreatReport::kTargetFieldNumber;
const int RealLifeThreatReport::kTextFieldNumber;
#endif  // !_MSC_VER

RealLifeThreatReport::RealLifeThreatReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.RealLifeThreatReport)
}

void RealLifeThreatReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

RealLifeThreatReport::RealLifeThreatReport(const RealLifeThreatReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.RealLifeThreatReport)
}

void RealLifeThreatReport::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  target_ = NULL;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RealLifeThreatReport::~RealLifeThreatReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.RealLifeThreatReport)
  SharedDtor();
}

void RealLifeThreatReport::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
    delete target_;
  }
}

void RealLifeThreatReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RealLifeThreatReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RealLifeThreatReport_descriptor_;
}

const RealLifeThreatReport& RealLifeThreatReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

RealLifeThreatReport* RealLifeThreatReport::default_instance_ = NULL;

RealLifeThreatReport* RealLifeThreatReport::New() const {
  return new RealLifeThreatReport;
}

void RealLifeThreatReport::Swap(RealLifeThreatReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RealLifeThreatReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RealLifeThreatReport_descriptor_;
  metadata.reflection = RealLifeThreatReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int InappropriateBattleTagReport::kTargetFieldNumber;
const int InappropriateBattleTagReport::kBattleTagFieldNumber;
#endif  // !_MSC_VER

InappropriateBattleTagReport::InappropriateBattleTagReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.InappropriateBattleTagReport)
}

void InappropriateBattleTagReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

InappropriateBattleTagReport::InappropriateBattleTagReport(const InappropriateBattleTagReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.InappropriateBattleTagReport)
}

void InappropriateBattleTagReport::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  target_ = NULL;
  battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InappropriateBattleTagReport::~InappropriateBattleTagReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.InappropriateBattleTagReport)
  SharedDtor();
}

void InappropriateBattleTagReport::SharedDtor() {
  if (battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battle_tag_;
  }
  if (this != default_instance_) {
    delete target_;
  }
}

void InappropriateBattleTagReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InappropriateBattleTagReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InappropriateBattleTagReport_descriptor_;
}

const InappropriateBattleTagReport& InappropriateBattleTagReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

InappropriateBattleTagReport* InappropriateBattleTagReport::default_instance_ = NULL;

InappropriateBattleTagReport* InappropriateBattleTagReport::New() const {
  return new InappropriateBattleTagReport;
}

void InappropriateBattleTagReport::Swap(InappropriateBattleTagReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata InappropriateBattleTagReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InappropriateBattleTagReport_descriptor_;
  metadata.reflection = InappropriateBattleTagReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int HackingReport::kTargetFieldNumber;
#endif  // !_MSC_VER

HackingReport::HackingReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.HackingReport)
}

void HackingReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

HackingReport::HackingReport(const HackingReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.HackingReport)
}

void HackingReport::SharedCtor() {
  _cached_size_ = 0;
  target_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HackingReport::~HackingReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.HackingReport)
  SharedDtor();
}

void HackingReport::SharedDtor() {
  if (this != default_instance_) {
    delete target_;
  }
}

void HackingReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HackingReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HackingReport_descriptor_;
}

const HackingReport& HackingReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

HackingReport* HackingReport::default_instance_ = NULL;

HackingReport* HackingReport::New() const {
  return new HackingReport;
}

void HackingReport::Swap(HackingReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata HackingReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HackingReport_descriptor_;
  metadata.reflection = HackingReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int BottingReport::kTargetFieldNumber;
#endif  // !_MSC_VER

BottingReport::BottingReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.BottingReport)
}

void BottingReport::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

BottingReport::BottingReport(const BottingReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.BottingReport)
}

void BottingReport::SharedCtor() {
  _cached_size_ = 0;
  target_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BottingReport::~BottingReport() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.BottingReport)
  SharedDtor();
}

void BottingReport::SharedDtor() {
  if (this != default_instance_) {
    delete target_;
  }
}

void BottingReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BottingReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BottingReport_descriptor_;
}

const BottingReport& BottingReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

BottingReport* BottingReport::default_instance_ = NULL;

BottingReport* BottingReport::New() const {
  return new BottingReport;
}

void BottingReport::Swap(BottingReport* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata BottingReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BottingReport_descriptor_;
  metadata.reflection = BottingReport_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int Report::kReportTypeFieldNumber;
const int Report::kAttributeFieldNumber;
const int Report::kReportQosFieldNumber;
const int Report::kReportingAccountFieldNumber;
const int Report::kReportingGameAccountFieldNumber;
const int Report::kReportTimestampFieldNumber;
#endif  // !_MSC_VER

Report::Report()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.report.v1.Report)
}

void Report::InitAsDefaultInstance() {
  reporting_account_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  reporting_game_account_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

Report::Report(const Report& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.report.v1.Report)
}

void Report::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  report_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_qos_ = 0;
  reporting_account_ = NULL;
  reporting_game_account_ = NULL;
  report_timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Report::~Report() {
  // @@protoc_insertion_point(destructor:bgs.protocol.report.v1.Report)
  SharedDtor();
}

void Report::SharedDtor() {
  if (report_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete report_type_;
  }
  if (this != default_instance_) {
    delete reporting_account_;
    delete reporting_game_account_;
  }
}

void Report::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Report::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Report_descriptor_;
}

const Report& Report::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_5ftypes_2eproto();
  return *default_instance_;
}

Report* Report::default_instance_ = NULL;

Report* Report::New() const {
  return new Report;
}

void Report::Swap(Report* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Report::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Report_descriptor_;
  metadata.reflection = Report_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace report
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
