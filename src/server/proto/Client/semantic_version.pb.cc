// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: semantic_version.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "semantic_version.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* SemanticVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SemanticVersion_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_semantic_5fversion_2eproto() {
  protobuf_AddDesc_semantic_5fversion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "semantic_version.proto");
  GOOGLE_CHECK(file != NULL);
  SemanticVersion_descriptor_ = file->message_type(0);
  static const int SemanticVersion_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, major_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, minor_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, patch_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, version_string_),
  };
  SemanticVersion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SemanticVersion_descriptor_,
      SemanticVersion::default_instance_,
      SemanticVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SemanticVersion));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_semantic_5fversion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SemanticVersion_descriptor_, &SemanticVersion::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_semantic_5fversion_2eproto() {
  delete SemanticVersion::default_instance_;
  delete SemanticVersion_reflection_;
}

void protobuf_AddDesc_semantic_5fversion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026semantic_version.proto\022\014bgs.protocol\"n"
    "\n\017SemanticVersion\022\025\n\rmajor_version\030\001 \001(\r"
    "\022\025\n\rminor_version\030\002 \001(\r\022\025\n\rpatch_version"
    "\030\003 \001(\r\022\026\n\016version_string\030\004 \001(\tB\002H\002", 154);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "semantic_version.proto", &protobuf_RegisterTypes);
  SemanticVersion::default_instance_ = new SemanticVersion();
  SemanticVersion::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_semantic_5fversion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_semantic_5fversion_2eproto {
  StaticDescriptorInitializer_semantic_5fversion_2eproto() {
    protobuf_AddDesc_semantic_5fversion_2eproto();
  }
} static_descriptor_initializer_semantic_5fversion_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SemanticVersion::kMajorVersionFieldNumber;
const int SemanticVersion::kMinorVersionFieldNumber;
const int SemanticVersion::kPatchVersionFieldNumber;
const int SemanticVersion::kVersionStringFieldNumber;
#endif  // !_MSC_VER

SemanticVersion::SemanticVersion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.SemanticVersion)
}

void SemanticVersion::InitAsDefaultInstance() {
}

SemanticVersion::SemanticVersion(const SemanticVersion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.SemanticVersion)
}

void SemanticVersion::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  major_version_ = 0u;
  minor_version_ = 0u;
  patch_version_ = 0u;
  version_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SemanticVersion::~SemanticVersion() {
  // @@protoc_insertion_point(destructor:bgs.protocol.SemanticVersion)
  SharedDtor();
}

void SemanticVersion::SharedDtor() {
  if (version_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_string_;
  }
  if (this != default_instance_) {
  }
}

void SemanticVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SemanticVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SemanticVersion_descriptor_;
}

const SemanticVersion& SemanticVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_semantic_5fversion_2eproto();
  return *default_instance_;
}

SemanticVersion* SemanticVersion::default_instance_ = NULL;

SemanticVersion* SemanticVersion::New() const {
  return new SemanticVersion;
}

void SemanticVersion::Swap(SemanticVersion* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SemanticVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SemanticVersion_descriptor_;
  metadata.reflection = SemanticVersion_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
