// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_role.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "club_role.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ClubPrivilegeSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubPrivilegeSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubRole_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubRoleSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubRoleSet_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_club_5frole_2eproto() {
  protobuf_AddDesc_club_5frole_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "club_role.proto");
  GOOGLE_CHECK(file != NULL);
  ClubPrivilegeSet_descriptor_ = file->message_type(0);
  static const int ClubPrivilegeSet_offsets_[49] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_destroy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_privacy_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_add_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_kick_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_own_member_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_other_member_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_own_voice_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_own_presence_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_own_whisper_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_own_member_note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_other_member_note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_use_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_voice_mute_member_for_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_get_invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_send_invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_send_guest_invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_revoke_own_invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_revoke_other_invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_get_suggestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_suggest_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_approve_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_get_ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_create_ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_destroy_ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_get_ban_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_add_ban_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_remove_ban_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_create_stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_destroy_stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_access_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_set_stream_voice_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_create_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_destroy_own_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_destroy_other_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_edit_own_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_pin_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_mention_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_mention_here_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_mention_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, can_mention_role_),
  };
  ClubPrivilegeSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubPrivilegeSet_descriptor_,
      ClubPrivilegeSet::default_instance_,
      ClubPrivilegeSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubPrivilegeSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubPrivilegeSet));
  ClubRole_descriptor_ = file->message_type(1);
  static const int ClubRole_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, privilege_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, always_grant_stream_access_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, allow_in_club_slot_),
  };
  ClubRole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubRole_descriptor_,
      ClubRole::default_instance_,
      ClubRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubRole));
  ClubRoleSet_descriptor_ = file->message_type(2);
  static const int ClubRoleSet_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, default_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, assignment_respects_relegation_chain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, subtype_),
  };
  ClubRoleSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubRoleSet_descriptor_,
      ClubRoleSet::default_instance_,
      ClubRoleSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubRoleSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubRoleSet));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_club_5frole_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubPrivilegeSet_descriptor_, &ClubPrivilegeSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubRole_descriptor_, &ClubRole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubRoleSet_descriptor_, &ClubRoleSet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_club_5frole_2eproto() {
  delete ClubPrivilegeSet::default_instance_;
  delete ClubPrivilegeSet_reflection_;
  delete ClubRole::default_instance_;
  delete ClubRole_reflection_;
  delete ClubRoleSet::default_instance_;
  delete ClubRoleSet_reflection_;
}

void protobuf_AddDesc_club_5frole_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_role_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017club_role.proto\022\024bgs.protocol.club.v1\032"
    "\020role_types.proto\"\307\013\n\020ClubPrivilegeSet\022\023"
    "\n\013can_destroy\030\001 \001(\010\022\031\n\021can_set_attribute"
    "\030\n \001(\010\022\024\n\014can_set_name\030\013 \001(\010\022\033\n\023can_set_"
    "description\030\014 \001(\010\022\026\n\016can_set_avatar\030\r \001("
    "\010\022\031\n\021can_set_broadcast\030\016 \001(\010\022\035\n\025can_set_"
    "privacy_level\030\017 \001(\010\022\026\n\016can_add_member\030\035 "
    "\001(\010\022\027\n\017can_kick_member\030\036 \001(\010\022$\n\034can_set_"
    "own_member_attribute\030\037 \001(\010\022&\n\036can_set_ot"
    "her_member_attribute\030  \001(\010\022\037\n\027can_set_ow"
    "n_voice_state\030! \001(\010\022\"\n\032can_set_own_prese"
    "nce_level\030\" \001(\010\022!\n\031can_set_own_whisper_l"
    "evel\030# \001(\010\022\037\n\027can_set_own_member_note\030$ "
    "\001(\010\022!\n\031can_set_other_member_note\030% \001(\010\022\025"
    "\n\rcan_use_voice\0302 \001(\010\022%\n\035can_voice_mute_"
    "member_for_all\0303 \001(\010\022\032\n\022can_get_invitati"
    "on\030F \001(\010\022\033\n\023can_send_invitation\030G \001(\010\022!\n"
    "\031can_send_guest_invitation\030H \001(\010\022!\n\031can_"
    "revoke_own_invitation\030I \001(\010\022#\n\033can_revok"
    "e_other_invitation\030J \001(\010\022\032\n\022can_get_sugg"
    "estion\030Z \001(\010\022\032\n\022can_suggest_member\030[ \001(\010"
    "\022\032\n\022can_approve_member\030\\ \001(\010\022\026\n\016can_get_"
    "ticket\030n \001(\010\022\031\n\021can_create_ticket\030o \001(\010\022"
    "\032\n\022can_destroy_ticket\030p \001(\010\022\024\n\013can_get_b"
    "an\030\202\001 \001(\010\022\024\n\013can_add_ban\030\203\001 \001(\010\022\027\n\016can_r"
    "emove_ban\030\204\001 \001(\010\022\032\n\021can_create_stream\030\214\001"
    " \001(\010\022\033\n\022can_destroy_stream\030\215\001 \001(\010\022 \n\027can"
    "_set_stream_position\030\216\001 \001(\010\022!\n\030can_set_s"
    "tream_attribute\030\217\001 \001(\010\022\034\n\023can_set_stream"
    "_name\030\220\001 \001(\010\022\037\n\026can_set_stream_subject\030\221"
    "\001 \001(\010\022\036\n\025can_set_stream_access\030\222\001 \001(\010\022#\n"
    "\032can_set_stream_voice_level\030\223\001 \001(\010\022\033\n\022ca"
    "n_create_message\030\264\001 \001(\010\022 \n\027can_destroy_o"
    "wn_message\030\265\001 \001(\010\022\"\n\031can_destroy_other_m"
    "essage\030\266\001 \001(\010\022\035\n\024can_edit_own_message\030\267\001"
    " \001(\010\022\030\n\017can_pin_message\030\270\001 \001(\010\022\030\n\017can_me"
    "ntion_all\030\271\001 \001(\010\022\031\n\020can_mention_here\030\272\001 "
    "\001(\010\022\033\n\022can_mention_member\030\273\001 \001(\010\022\031\n\020can_"
    "mention_role\030\274\001 \001(\010\"\271\001\n\010ClubRole\022\n\n\002id\030\001"
    " \001(\r\022&\n\005state\030\002 \001(\0132\027.bgs.protocol.RoleS"
    "tate\0229\n\tprivilege\030\003 \001(\0132&.bgs.protocol.c"
    "lub.v1.ClubPrivilegeSet\022\"\n\032always_grant_"
    "stream_access\030\004 \001(\010\022\032\n\022allow_in_club_slo"
    "t\030\005 \001(\010\"\224\001\n\013ClubRoleSet\022,\n\004role\030\001 \003(\0132\036."
    "bgs.protocol.club.v1.ClubRole\022\030\n\014default"
    "_role\030\005 \003(\rB\002\020\001\022,\n$assignment_respects_r"
    "elegation_chain\030\006 \001(\010\022\017\n\007subtype\030\007 \001(\tB\002"
    "H\002", 1882);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "club_role.proto", &protobuf_RegisterTypes);
  ClubPrivilegeSet::default_instance_ = new ClubPrivilegeSet();
  ClubRole::default_instance_ = new ClubRole();
  ClubRoleSet::default_instance_ = new ClubRoleSet();
  ClubPrivilegeSet::default_instance_->InitAsDefaultInstance();
  ClubRole::default_instance_->InitAsDefaultInstance();
  ClubRoleSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_club_5frole_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_club_5frole_2eproto {
  StaticDescriptorInitializer_club_5frole_2eproto() {
    protobuf_AddDesc_club_5frole_2eproto();
  }
} static_descriptor_initializer_club_5frole_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int ClubPrivilegeSet::kCanDestroyFieldNumber;
const int ClubPrivilegeSet::kCanSetAttributeFieldNumber;
const int ClubPrivilegeSet::kCanSetNameFieldNumber;
const int ClubPrivilegeSet::kCanSetDescriptionFieldNumber;
const int ClubPrivilegeSet::kCanSetAvatarFieldNumber;
const int ClubPrivilegeSet::kCanSetBroadcastFieldNumber;
const int ClubPrivilegeSet::kCanSetPrivacyLevelFieldNumber;
const int ClubPrivilegeSet::kCanAddMemberFieldNumber;
const int ClubPrivilegeSet::kCanKickMemberFieldNumber;
const int ClubPrivilegeSet::kCanSetOwnMemberAttributeFieldNumber;
const int ClubPrivilegeSet::kCanSetOtherMemberAttributeFieldNumber;
const int ClubPrivilegeSet::kCanSetOwnVoiceStateFieldNumber;
const int ClubPrivilegeSet::kCanSetOwnPresenceLevelFieldNumber;
const int ClubPrivilegeSet::kCanSetOwnWhisperLevelFieldNumber;
const int ClubPrivilegeSet::kCanSetOwnMemberNoteFieldNumber;
const int ClubPrivilegeSet::kCanSetOtherMemberNoteFieldNumber;
const int ClubPrivilegeSet::kCanUseVoiceFieldNumber;
const int ClubPrivilegeSet::kCanVoiceMuteMemberForAllFieldNumber;
const int ClubPrivilegeSet::kCanGetInvitationFieldNumber;
const int ClubPrivilegeSet::kCanSendInvitationFieldNumber;
const int ClubPrivilegeSet::kCanSendGuestInvitationFieldNumber;
const int ClubPrivilegeSet::kCanRevokeOwnInvitationFieldNumber;
const int ClubPrivilegeSet::kCanRevokeOtherInvitationFieldNumber;
const int ClubPrivilegeSet::kCanGetSuggestionFieldNumber;
const int ClubPrivilegeSet::kCanSuggestMemberFieldNumber;
const int ClubPrivilegeSet::kCanApproveMemberFieldNumber;
const int ClubPrivilegeSet::kCanGetTicketFieldNumber;
const int ClubPrivilegeSet::kCanCreateTicketFieldNumber;
const int ClubPrivilegeSet::kCanDestroyTicketFieldNumber;
const int ClubPrivilegeSet::kCanGetBanFieldNumber;
const int ClubPrivilegeSet::kCanAddBanFieldNumber;
const int ClubPrivilegeSet::kCanRemoveBanFieldNumber;
const int ClubPrivilegeSet::kCanCreateStreamFieldNumber;
const int ClubPrivilegeSet::kCanDestroyStreamFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamPositionFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamAttributeFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamNameFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamSubjectFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamAccessFieldNumber;
const int ClubPrivilegeSet::kCanSetStreamVoiceLevelFieldNumber;
const int ClubPrivilegeSet::kCanCreateMessageFieldNumber;
const int ClubPrivilegeSet::kCanDestroyOwnMessageFieldNumber;
const int ClubPrivilegeSet::kCanDestroyOtherMessageFieldNumber;
const int ClubPrivilegeSet::kCanEditOwnMessageFieldNumber;
const int ClubPrivilegeSet::kCanPinMessageFieldNumber;
const int ClubPrivilegeSet::kCanMentionAllFieldNumber;
const int ClubPrivilegeSet::kCanMentionHereFieldNumber;
const int ClubPrivilegeSet::kCanMentionMemberFieldNumber;
const int ClubPrivilegeSet::kCanMentionRoleFieldNumber;
#endif  // !_MSC_VER

ClubPrivilegeSet::ClubPrivilegeSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.ClubPrivilegeSet)
}

void ClubPrivilegeSet::InitAsDefaultInstance() {
}

ClubPrivilegeSet::ClubPrivilegeSet(const ClubPrivilegeSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.ClubPrivilegeSet)
}

void ClubPrivilegeSet::SharedCtor() {
  _cached_size_ = 0;
  can_destroy_ = false;
  can_set_attribute_ = false;
  can_set_name_ = false;
  can_set_description_ = false;
  can_set_avatar_ = false;
  can_set_broadcast_ = false;
  can_set_privacy_level_ = false;
  can_add_member_ = false;
  can_kick_member_ = false;
  can_set_own_member_attribute_ = false;
  can_set_other_member_attribute_ = false;
  can_set_own_voice_state_ = false;
  can_set_own_presence_level_ = false;
  can_set_own_whisper_level_ = false;
  can_set_own_member_note_ = false;
  can_set_other_member_note_ = false;
  can_use_voice_ = false;
  can_voice_mute_member_for_all_ = false;
  can_get_invitation_ = false;
  can_send_invitation_ = false;
  can_send_guest_invitation_ = false;
  can_revoke_own_invitation_ = false;
  can_revoke_other_invitation_ = false;
  can_get_suggestion_ = false;
  can_suggest_member_ = false;
  can_approve_member_ = false;
  can_get_ticket_ = false;
  can_create_ticket_ = false;
  can_destroy_ticket_ = false;
  can_get_ban_ = false;
  can_add_ban_ = false;
  can_remove_ban_ = false;
  can_create_stream_ = false;
  can_destroy_stream_ = false;
  can_set_stream_position_ = false;
  can_set_stream_attribute_ = false;
  can_set_stream_name_ = false;
  can_set_stream_subject_ = false;
  can_set_stream_access_ = false;
  can_set_stream_voice_level_ = false;
  can_create_message_ = false;
  can_destroy_own_message_ = false;
  can_destroy_other_message_ = false;
  can_edit_own_message_ = false;
  can_pin_message_ = false;
  can_mention_all_ = false;
  can_mention_here_ = false;
  can_mention_member_ = false;
  can_mention_role_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubPrivilegeSet::~ClubPrivilegeSet() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.ClubPrivilegeSet)
  SharedDtor();
}

void ClubPrivilegeSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClubPrivilegeSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubPrivilegeSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubPrivilegeSet_descriptor_;
}

const ClubPrivilegeSet& ClubPrivilegeSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frole_2eproto();
  return *default_instance_;
}

ClubPrivilegeSet* ClubPrivilegeSet::default_instance_ = NULL;

ClubPrivilegeSet* ClubPrivilegeSet::New() const {
  return new ClubPrivilegeSet;
}

void ClubPrivilegeSet::Swap(ClubPrivilegeSet* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubPrivilegeSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubPrivilegeSet_descriptor_;
  metadata.reflection = ClubPrivilegeSet_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubRole::kIdFieldNumber;
const int ClubRole::kStateFieldNumber;
const int ClubRole::kPrivilegeFieldNumber;
const int ClubRole::kAlwaysGrantStreamAccessFieldNumber;
const int ClubRole::kAllowInClubSlotFieldNumber;
#endif  // !_MSC_VER

ClubRole::ClubRole()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.ClubRole)
}

void ClubRole::InitAsDefaultInstance() {
  state_ = const_cast< ::bgs::protocol::RoleState*>(&::bgs::protocol::RoleState::default_instance());
  privilege_ = const_cast< ::bgs::protocol::club::v1::ClubPrivilegeSet*>(&::bgs::protocol::club::v1::ClubPrivilegeSet::default_instance());
}

ClubRole::ClubRole(const ClubRole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.ClubRole)
}

void ClubRole::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  state_ = NULL;
  privilege_ = NULL;
  always_grant_stream_access_ = false;
  allow_in_club_slot_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubRole::~ClubRole() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.ClubRole)
  SharedDtor();
}

void ClubRole::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
    delete privilege_;
  }
}

void ClubRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubRole_descriptor_;
}

const ClubRole& ClubRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frole_2eproto();
  return *default_instance_;
}

ClubRole* ClubRole::default_instance_ = NULL;

ClubRole* ClubRole::New() const {
  return new ClubRole;
}

void ClubRole::Swap(ClubRole* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubRole_descriptor_;
  metadata.reflection = ClubRole_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ClubRoleSet::kRoleFieldNumber;
const int ClubRoleSet::kDefaultRoleFieldNumber;
const int ClubRoleSet::kAssignmentRespectsRelegationChainFieldNumber;
const int ClubRoleSet::kSubtypeFieldNumber;
#endif  // !_MSC_VER

ClubRoleSet::ClubRoleSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.ClubRoleSet)
}

void ClubRoleSet::InitAsDefaultInstance() {
}

ClubRoleSet::ClubRoleSet(const ClubRoleSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.ClubRoleSet)
}

void ClubRoleSet::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  assignment_respects_relegation_chain_ = false;
  subtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubRoleSet::~ClubRoleSet() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.ClubRoleSet)
  SharedDtor();
}

void ClubRoleSet::SharedDtor() {
  if (subtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtype_;
  }
  if (this != default_instance_) {
  }
}

void ClubRoleSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubRoleSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubRoleSet_descriptor_;
}

const ClubRoleSet& ClubRoleSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frole_2eproto();
  return *default_instance_;
}

ClubRoleSet* ClubRoleSet::default_instance_ = NULL;

ClubRoleSet* ClubRoleSet::New() const {
  return new ClubRoleSet;
}

void ClubRoleSet::Swap(ClubRoleSet* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ClubRoleSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubRoleSet_descriptor_;
  metadata.reflection = ClubRoleSet_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
