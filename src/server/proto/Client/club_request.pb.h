// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_request.proto

#ifndef PROTOBUF_club_5frequest_2eproto__INCLUDED
#define PROTOBUF_club_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "club_types.pb.h"  // IWYU pragma: export
#include "Define.h" // for TC_PROTO_API
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

// Internal implementation detail -- do not call these.
void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
void protobuf_AssignDesc_club_5frequest_2eproto();
void protobuf_ShutdownFile_club_5frequest_2eproto();

class SubscribeRequest;
class UnsubscribeRequest;
class CreateRequest;
class CreateResponse;
class DestroyRequest;
class GetDescriptionRequest;
class GetDescriptionResponse;
class GetClubTypeRequest;
class GetClubTypeResponse;
class UpdateClubStateRequest;
class UpdateClubSettingsRequest;
class AddMemberRequest;
class JoinRequest;
class LeaveRequest;
class KickRequest;
class GetMemberRequest;
class GetMemberResponse;
class GetMembersRequest;
class GetMembersResponse;
class UpdateMemberStateRequest;
class UpdateSubscriberStateRequest;
class AssignRoleRequest;
class UnassignRoleRequest;
class SendInvitationRequest;
class AcceptInvitationRequest;
class DeclineInvitationRequest;
class RevokeInvitationRequest;
class GetInvitationRequest;
class GetInvitationResponse;
class GetInvitationsRequest;
class GetInvitationsResponse;
class SendSuggestionRequest;
class AcceptSuggestionRequest;
class DeclineSuggestionRequest;
class GetSuggestionRequest;
class GetSuggestionResponse;
class GetSuggestionsRequest;
class GetSuggestionsResponse;
class CreateTicketRequest;
class CreateTicketResponse;
class DestroyTicketRequest;
class RedeemTicketRequest;
class GetTicketRequest;
class GetTicketResponse;
class GetTicketsRequest;
class GetTicketsResponse;
class AddBanRequest;
class RemoveBanRequest;
class GetBanRequest;
class GetBanResponse;
class GetBansRequest;
class GetBansResponse;
class SubscribeStreamRequest;
class UnsubscribeStreamRequest;
class CreateStreamRequest;
class CreateStreamResponse;
class DestroyStreamRequest;
class GetStreamRequest;
class GetStreamResponse;
class GetStreamsRequest;
class GetStreamsResponse;
class UpdateStreamStateRequest;
class SetStreamFocusRequest;
class CreateMessageRequest;
class CreateMessageResponse;
class DestroyMessageRequest;
class DestroyMessageResponse;
class EditMessageRequest;
class EditMessageResponse;
class SetMessagePinnedRequest;
class SetTypingIndicatorRequest;
class AdvanceStreamViewTimeRequest;
class AdvanceStreamMentionViewTimeRequest;
class AdvanceActivityViewTimeRequest;
class GetStreamHistoryRequest;
class GetStreamHistoryResponse;
class GetStreamMessageRequest;
class GetStreamMessageResponse;
class GetClubActivityRequest;
class GetClubActivityResponse;
class GetStreamVoiceTokenRequest;
class GetStreamVoiceTokenResponse;
class KickFromStreamVoiceRequest;

// ===================================================================

class TC_PROTO_API SubscribeRequest : public ::google::protobuf::Message {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();

  SubscribeRequest(const SubscribeRequest& from);

  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();

  void Swap(SubscribeRequest* other);

  // implements Message ----------------------------------------------

  SubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UnsubscribeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();

  UnsubscribeRequest(const UnsubscribeRequest& from);

  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeRequest& default_instance();

  void Swap(UnsubscribeRequest* other);

  // implements Message ----------------------------------------------

  UnsubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UnsubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UnsubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateRequest : public ::google::protobuf::Message {
 public:
  CreateRequest();
  virtual ~CreateRequest();

  CreateRequest(const CreateRequest& from);

  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRequest& default_instance();

  void Swap(CreateRequest* other);

  // implements Message ----------------------------------------------

  CreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRequest& from);
  void MergeFrom(const CreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional .bgs.protocol.club.v1.ClubCreateOptions options = 2;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 2;
  inline const ::bgs::protocol::club::v1::ClubCreateOptions& options() const;
  inline ::bgs::protocol::club::v1::ClubCreateOptions* mutable_options();
  inline ::bgs::protocol::club::v1::ClubCreateOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::ClubCreateOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::bgs::protocol::club::v1::ClubCreateOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateResponse : public ::google::protobuf::Message {
 public:
  CreateResponse();
  virtual ~CreateResponse();

  CreateResponse(const CreateResponse& from);

  inline CreateResponse& operator=(const CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateResponse& default_instance();

  void Swap(CreateResponse* other);

  // implements Message ----------------------------------------------

  CreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateResponse& from);
  void MergeFrom(const CreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 club_id = 1;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 1;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateResponse)
 private:
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DestroyRequest : public ::google::protobuf::Message {
 public:
  DestroyRequest();
  virtual ~DestroyRequest();

  DestroyRequest(const DestroyRequest& from);

  inline DestroyRequest& operator=(const DestroyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyRequest& default_instance();

  void Swap(DestroyRequest* other);

  // implements Message ----------------------------------------------

  DestroyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyRequest& from);
  void MergeFrom(const DestroyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DestroyRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DestroyRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetDescriptionRequest : public ::google::protobuf::Message {
 public:
  GetDescriptionRequest();
  virtual ~GetDescriptionRequest();

  GetDescriptionRequest(const GetDescriptionRequest& from);

  inline GetDescriptionRequest& operator=(const GetDescriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDescriptionRequest& default_instance();

  void Swap(GetDescriptionRequest* other);

  // implements Message ----------------------------------------------

  GetDescriptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDescriptionRequest& from);
  void MergeFrom(const GetDescriptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetDescriptionRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetDescriptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetDescriptionResponse : public ::google::protobuf::Message {
 public:
  GetDescriptionResponse();
  virtual ~GetDescriptionResponse();

  GetDescriptionResponse(const GetDescriptionResponse& from);

  inline GetDescriptionResponse& operator=(const GetDescriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDescriptionResponse& default_instance();

  void Swap(GetDescriptionResponse* other);

  // implements Message ----------------------------------------------

  GetDescriptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDescriptionResponse& from);
  void MergeFrom(const GetDescriptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubDescription club = 1;
  inline bool has_club() const;
  inline void clear_club();
  static const int kClubFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubDescription& club() const;
  inline ::bgs::protocol::club::v1::ClubDescription* mutable_club();
  inline ::bgs::protocol::club::v1::ClubDescription* release_club();
  inline void set_allocated_club(::bgs::protocol::club::v1::ClubDescription* club);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetDescriptionResponse)
 private:
  inline void set_has_club();
  inline void clear_has_club();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubDescription* club_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetDescriptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetClubTypeRequest : public ::google::protobuf::Message {
 public:
  GetClubTypeRequest();
  virtual ~GetClubTypeRequest();

  GetClubTypeRequest(const GetClubTypeRequest& from);

  inline GetClubTypeRequest& operator=(const GetClubTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClubTypeRequest& default_instance();

  void Swap(GetClubTypeRequest* other);

  // implements Message ----------------------------------------------

  GetClubTypeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClubTypeRequest& from);
  void MergeFrom(const GetClubTypeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional .bgs.protocol.club.v1.UniqueClubType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::bgs::protocol::club::v1::UniqueClubType& type() const;
  inline ::bgs::protocol::club::v1::UniqueClubType* mutable_type();
  inline ::bgs::protocol::club::v1::UniqueClubType* release_type();
  inline void set_allocated_type(::bgs::protocol::club::v1::UniqueClubType* type);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetClubTypeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::bgs::protocol::club::v1::UniqueClubType* type_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetClubTypeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetClubTypeResponse : public ::google::protobuf::Message {
 public:
  GetClubTypeResponse();
  virtual ~GetClubTypeResponse();

  GetClubTypeResponse(const GetClubTypeResponse& from);

  inline GetClubTypeResponse& operator=(const GetClubTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClubTypeResponse& default_instance();

  void Swap(GetClubTypeResponse* other);

  // implements Message ----------------------------------------------

  GetClubTypeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClubTypeResponse& from);
  void MergeFrom(const GetClubTypeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.UniqueClubType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::UniqueClubType& type() const;
  inline ::bgs::protocol::club::v1::UniqueClubType* mutable_type();
  inline ::bgs::protocol::club::v1::UniqueClubType* release_type();
  inline void set_allocated_type(::bgs::protocol::club::v1::UniqueClubType* type);

  // optional .bgs.protocol.club.v1.ClubRoleSet role_set = 2;
  inline bool has_role_set() const;
  inline void clear_role_set();
  static const int kRoleSetFieldNumber = 2;
  inline const ::bgs::protocol::club::v1::ClubRoleSet& role_set() const;
  inline ::bgs::protocol::club::v1::ClubRoleSet* mutable_role_set();
  inline ::bgs::protocol::club::v1::ClubRoleSet* release_role_set();
  inline void set_allocated_role_set(::bgs::protocol::club::v1::ClubRoleSet* role_set);

  // optional .bgs.protocol.club.v1.ClubTypeRangeSet range_set = 3;
  inline bool has_range_set() const;
  inline void clear_range_set();
  static const int kRangeSetFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::ClubTypeRangeSet& range_set() const;
  inline ::bgs::protocol::club::v1::ClubTypeRangeSet* mutable_range_set();
  inline ::bgs::protocol::club::v1::ClubTypeRangeSet* release_range_set();
  inline void set_allocated_range_set(::bgs::protocol::club::v1::ClubTypeRangeSet* range_set);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetClubTypeResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_set();
  inline void clear_has_role_set();
  inline void set_has_range_set();
  inline void clear_has_range_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::UniqueClubType* type_;
  ::bgs::protocol::club::v1::ClubRoleSet* role_set_;
  ::bgs::protocol::club::v1::ClubTypeRangeSet* range_set_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetClubTypeResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UpdateClubStateRequest : public ::google::protobuf::Message {
 public:
  UpdateClubStateRequest();
  virtual ~UpdateClubStateRequest();

  UpdateClubStateRequest(const UpdateClubStateRequest& from);

  inline UpdateClubStateRequest& operator=(const UpdateClubStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateClubStateRequest& default_instance();

  void Swap(UpdateClubStateRequest* other);

  // implements Message ----------------------------------------------

  UpdateClubStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateClubStateRequest& from);
  void MergeFrom(const UpdateClubStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.ClubStateOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::ClubStateOptions& options() const;
  inline ::bgs::protocol::club::v1::ClubStateOptions* mutable_options();
  inline ::bgs::protocol::club::v1::ClubStateOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::ClubStateOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UpdateClubStateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::ClubStateOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UpdateClubStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UpdateClubSettingsRequest : public ::google::protobuf::Message {
 public:
  UpdateClubSettingsRequest();
  virtual ~UpdateClubSettingsRequest();

  UpdateClubSettingsRequest(const UpdateClubSettingsRequest& from);

  inline UpdateClubSettingsRequest& operator=(const UpdateClubSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateClubSettingsRequest& default_instance();

  void Swap(UpdateClubSettingsRequest* other);

  // implements Message ----------------------------------------------

  UpdateClubSettingsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateClubSettingsRequest& from);
  void MergeFrom(const UpdateClubSettingsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.ClubSettingsOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::ClubSettingsOptions& options() const;
  inline ::bgs::protocol::club::v1::ClubSettingsOptions* mutable_options();
  inline ::bgs::protocol::club::v1::ClubSettingsOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::ClubSettingsOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UpdateClubSettingsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::ClubSettingsOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UpdateClubSettingsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AddMemberRequest : public ::google::protobuf::Message {
 public:
  AddMemberRequest();
  virtual ~AddMemberRequest();

  AddMemberRequest(const AddMemberRequest& from);

  inline AddMemberRequest& operator=(const AddMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMemberRequest& default_instance();

  void Swap(AddMemberRequest* other);

  // implements Message ----------------------------------------------

  AddMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddMemberRequest& from);
  void MergeFrom(const AddMemberRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.CreateMemberOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::CreateMemberOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateMemberOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateMemberOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateMemberOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AddMemberRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::CreateMemberOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AddMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API JoinRequest : public ::google::protobuf::Message {
 public:
  JoinRequest();
  virtual ~JoinRequest();

  JoinRequest(const JoinRequest& from);

  inline JoinRequest& operator=(const JoinRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRequest& default_instance();

  void Swap(JoinRequest* other);

  // implements Message ----------------------------------------------

  JoinRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRequest& from);
  void MergeFrom(const JoinRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.CreateMemberOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::CreateMemberOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateMemberOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateMemberOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateMemberOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.JoinRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::CreateMemberOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static JoinRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API LeaveRequest : public ::google::protobuf::Message {
 public:
  LeaveRequest();
  virtual ~LeaveRequest();

  LeaveRequest(const LeaveRequest& from);

  inline LeaveRequest& operator=(const LeaveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRequest& default_instance();

  void Swap(LeaveRequest* other);

  // implements Message ----------------------------------------------

  LeaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveRequest& from);
  void MergeFrom(const LeaveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.LeaveRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static LeaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API KickRequest : public ::google::protobuf::Message {
 public:
  KickRequest();
  virtual ~KickRequest();

  KickRequest(const KickRequest& from);

  inline KickRequest& operator=(const KickRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickRequest& default_instance();

  void Swap(KickRequest* other);

  // implements Message ----------------------------------------------

  KickRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickRequest& from);
  void MergeFrom(const KickRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId target_id = 3;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::MemberId& target_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_target_id();
  inline ::bgs::protocol::club::v1::MemberId* release_target_id();
  inline void set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.KickRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::MemberId* target_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static KickRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetMemberRequest : public ::google::protobuf::Message {
 public:
  GetMemberRequest();
  virtual ~GetMemberRequest();

  GetMemberRequest(const GetMemberRequest& from);

  inline GetMemberRequest& operator=(const GetMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemberRequest& default_instance();

  void Swap(GetMemberRequest* other);

  // implements Message ----------------------------------------------

  GetMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemberRequest& from);
  void MergeFrom(const GetMemberRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId member_id = 3;
  inline bool has_member_id() const;
  inline void clear_member_id();
  static const int kMemberIdFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::MemberId& member_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_member_id();
  inline ::bgs::protocol::club::v1::MemberId* release_member_id();
  inline void set_allocated_member_id(::bgs::protocol::club::v1::MemberId* member_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetMemberRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_member_id();
  inline void clear_has_member_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::MemberId* member_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetMemberResponse : public ::google::protobuf::Message {
 public:
  GetMemberResponse();
  virtual ~GetMemberResponse();

  GetMemberResponse(const GetMemberResponse& from);

  inline GetMemberResponse& operator=(const GetMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemberResponse& default_instance();

  void Swap(GetMemberResponse* other);

  // implements Message ----------------------------------------------

  GetMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemberResponse& from);
  void MergeFrom(const GetMemberResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.Member member = 1;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::Member& member() const;
  inline ::bgs::protocol::club::v1::Member* mutable_member();
  inline ::bgs::protocol::club::v1::Member* release_member();
  inline void set_allocated_member(::bgs::protocol::club::v1::Member* member);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetMemberResponse)
 private:
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::Member* member_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetMembersRequest : public ::google::protobuf::Message {
 public:
  GetMembersRequest();
  virtual ~GetMembersRequest();

  GetMembersRequest(const GetMembersRequest& from);

  inline GetMembersRequest& operator=(const GetMembersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMembersRequest& default_instance();

  void Swap(GetMembersRequest* other);

  // implements Message ----------------------------------------------

  GetMembersRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMembersRequest& from);
  void MergeFrom(const GetMembersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 4;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 4;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetMembersRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetMembersRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetMembersResponse : public ::google::protobuf::Message {
 public:
  GetMembersResponse();
  virtual ~GetMembersResponse();

  GetMembersResponse(const GetMembersResponse& from);

  inline GetMembersResponse& operator=(const GetMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMembersResponse& default_instance();

  void Swap(GetMembersResponse* other);

  // implements Message ----------------------------------------------

  GetMembersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMembersResponse& from);
  void MergeFrom(const GetMembersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.Member member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::Member& member(int index) const;
  inline ::bgs::protocol::club::v1::Member* mutable_member(int index);
  inline ::bgs::protocol::club::v1::Member* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Member >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Member >*
      mutable_member();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetMembersResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Member > member_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetMembersResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UpdateMemberStateRequest : public ::google::protobuf::Message {
 public:
  UpdateMemberStateRequest();
  virtual ~UpdateMemberStateRequest();

  UpdateMemberStateRequest(const UpdateMemberStateRequest& from);

  inline UpdateMemberStateRequest& operator=(const UpdateMemberStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMemberStateRequest& default_instance();

  void Swap(UpdateMemberStateRequest* other);

  // implements Message ----------------------------------------------

  UpdateMemberStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateMemberStateRequest& from);
  void MergeFrom(const UpdateMemberStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId member_id = 3;
  inline bool has_member_id() const;
  inline void clear_member_id();
  static const int kMemberIdFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::MemberId& member_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_member_id();
  inline ::bgs::protocol::club::v1::MemberId* release_member_id();
  inline void set_allocated_member_id(::bgs::protocol::club::v1::MemberId* member_id);

  // optional .bgs.protocol.club.v1.MemberStateOptions options = 5;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 5;
  inline const ::bgs::protocol::club::v1::MemberStateOptions& options() const;
  inline ::bgs::protocol::club::v1::MemberStateOptions* mutable_options();
  inline ::bgs::protocol::club::v1::MemberStateOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::MemberStateOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UpdateMemberStateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_member_id();
  inline void clear_has_member_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::MemberId* member_id_;
  ::bgs::protocol::club::v1::MemberStateOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UpdateMemberStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UpdateSubscriberStateRequest : public ::google::protobuf::Message {
 public:
  UpdateSubscriberStateRequest();
  virtual ~UpdateSubscriberStateRequest();

  UpdateSubscriberStateRequest(const UpdateSubscriberStateRequest& from);

  inline UpdateSubscriberStateRequest& operator=(const UpdateSubscriberStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSubscriberStateRequest& default_instance();

  void Swap(UpdateSubscriberStateRequest* other);

  // implements Message ----------------------------------------------

  UpdateSubscriberStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSubscriberStateRequest& from);
  void MergeFrom(const UpdateSubscriberStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.SubscriberStateOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::SubscriberStateOptions& options() const;
  inline ::bgs::protocol::club::v1::SubscriberStateOptions* mutable_options();
  inline ::bgs::protocol::club::v1::SubscriberStateOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::SubscriberStateOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UpdateSubscriberStateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::SubscriberStateOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UpdateSubscriberStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AssignRoleRequest : public ::google::protobuf::Message {
 public:
  AssignRoleRequest();
  virtual ~AssignRoleRequest();

  AssignRoleRequest(const AssignRoleRequest& from);

  inline AssignRoleRequest& operator=(const AssignRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignRoleRequest& default_instance();

  void Swap(AssignRoleRequest* other);

  // implements Message ----------------------------------------------

  AssignRoleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssignRoleRequest& from);
  void MergeFrom(const AssignRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.RoleOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::RoleOptions& options() const;
  inline ::bgs::protocol::club::v1::RoleOptions* mutable_options();
  inline ::bgs::protocol::club::v1::RoleOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::RoleOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AssignRoleRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::RoleOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AssignRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UnassignRoleRequest : public ::google::protobuf::Message {
 public:
  UnassignRoleRequest();
  virtual ~UnassignRoleRequest();

  UnassignRoleRequest(const UnassignRoleRequest& from);

  inline UnassignRoleRequest& operator=(const UnassignRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnassignRoleRequest& default_instance();

  void Swap(UnassignRoleRequest* other);

  // implements Message ----------------------------------------------

  UnassignRoleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnassignRoleRequest& from);
  void MergeFrom(const UnassignRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.RoleOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::RoleOptions& options() const;
  inline ::bgs::protocol::club::v1::RoleOptions* mutable_options();
  inline ::bgs::protocol::club::v1::RoleOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::RoleOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UnassignRoleRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::RoleOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UnassignRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SendInvitationRequest : public ::google::protobuf::Message {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();

  SendInvitationRequest(const SendInvitationRequest& from);

  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();

  void Swap(SendInvitationRequest* other);

  // implements Message ----------------------------------------------

  SendInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.SendInvitationOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::SendInvitationOptions& options() const;
  inline ::bgs::protocol::club::v1::SendInvitationOptions* mutable_options();
  inline ::bgs::protocol::club::v1::SendInvitationOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::SendInvitationOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SendInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::SendInvitationOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SendInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AcceptInvitationRequest : public ::google::protobuf::Message {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();

  AcceptInvitationRequest(const AcceptInvitationRequest& from);

  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationRequest& default_instance();

  void Swap(AcceptInvitationRequest* other);

  // implements Message ----------------------------------------------

  AcceptInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 invitation_id = 3;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 3;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AcceptInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 invitation_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AcceptInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DeclineInvitationRequest : public ::google::protobuf::Message {
 public:
  DeclineInvitationRequest();
  virtual ~DeclineInvitationRequest();

  DeclineInvitationRequest(const DeclineInvitationRequest& from);

  inline DeclineInvitationRequest& operator=(const DeclineInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclineInvitationRequest& default_instance();

  void Swap(DeclineInvitationRequest* other);

  // implements Message ----------------------------------------------

  DeclineInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeclineInvitationRequest& from);
  void MergeFrom(const DeclineInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 invitation_id = 3;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 3;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DeclineInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 invitation_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DeclineInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API RevokeInvitationRequest : public ::google::protobuf::Message {
 public:
  RevokeInvitationRequest();
  virtual ~RevokeInvitationRequest();

  RevokeInvitationRequest(const RevokeInvitationRequest& from);

  inline RevokeInvitationRequest& operator=(const RevokeInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RevokeInvitationRequest& default_instance();

  void Swap(RevokeInvitationRequest* other);

  // implements Message ----------------------------------------------

  RevokeInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RevokeInvitationRequest& from);
  void MergeFrom(const RevokeInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 invitation_id = 3;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 3;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.RevokeInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 invitation_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static RevokeInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetInvitationRequest : public ::google::protobuf::Message {
 public:
  GetInvitationRequest();
  virtual ~GetInvitationRequest();

  GetInvitationRequest(const GetInvitationRequest& from);

  inline GetInvitationRequest& operator=(const GetInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationRequest& default_instance();

  void Swap(GetInvitationRequest* other);

  // implements Message ----------------------------------------------

  GetInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInvitationRequest& from);
  void MergeFrom(const GetInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 invitation_id = 3;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 3;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 invitation_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetInvitationResponse : public ::google::protobuf::Message {
 public:
  GetInvitationResponse();
  virtual ~GetInvitationResponse();

  GetInvitationResponse(const GetInvitationResponse& from);

  inline GetInvitationResponse& operator=(const GetInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationResponse& default_instance();

  void Swap(GetInvitationResponse* other);

  // implements Message ----------------------------------------------

  GetInvitationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInvitationResponse& from);
  void MergeFrom(const GetInvitationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubInvitation invitation = 1;
  inline bool has_invitation() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubInvitation& invitation() const;
  inline ::bgs::protocol::club::v1::ClubInvitation* mutable_invitation();
  inline ::bgs::protocol::club::v1::ClubInvitation* release_invitation();
  inline void set_allocated_invitation(::bgs::protocol::club::v1::ClubInvitation* invitation);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetInvitationResponse)
 private:
  inline void set_has_invitation();
  inline void clear_has_invitation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubInvitation* invitation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetInvitationResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetInvitationsRequest : public ::google::protobuf::Message {
 public:
  GetInvitationsRequest();
  virtual ~GetInvitationsRequest();

  GetInvitationsRequest(const GetInvitationsRequest& from);

  inline GetInvitationsRequest& operator=(const GetInvitationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationsRequest& default_instance();

  void Swap(GetInvitationsRequest* other);

  // implements Message ----------------------------------------------

  GetInvitationsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInvitationsRequest& from);
  void MergeFrom(const GetInvitationsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetInvitationsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetInvitationsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetInvitationsResponse : public ::google::protobuf::Message {
 public:
  GetInvitationsResponse();
  virtual ~GetInvitationsResponse();

  GetInvitationsResponse(const GetInvitationsResponse& from);

  inline GetInvitationsResponse& operator=(const GetInvitationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationsResponse& default_instance();

  void Swap(GetInvitationsResponse* other);

  // implements Message ----------------------------------------------

  GetInvitationsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInvitationsResponse& from);
  void MergeFrom(const GetInvitationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.ClubInvitation invitation = 1;
  inline int invitation_size() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubInvitation& invitation(int index) const;
  inline ::bgs::protocol::club::v1::ClubInvitation* mutable_invitation(int index);
  inline ::bgs::protocol::club::v1::ClubInvitation* add_invitation();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubInvitation >&
      invitation() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubInvitation >*
      mutable_invitation();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetInvitationsResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubInvitation > invitation_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetInvitationsResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SendSuggestionRequest : public ::google::protobuf::Message {
 public:
  SendSuggestionRequest();
  virtual ~SendSuggestionRequest();

  SendSuggestionRequest(const SendSuggestionRequest& from);

  inline SendSuggestionRequest& operator=(const SendSuggestionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSuggestionRequest& default_instance();

  void Swap(SendSuggestionRequest* other);

  // implements Message ----------------------------------------------

  SendSuggestionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendSuggestionRequest& from);
  void MergeFrom(const SendSuggestionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.SendSuggestionOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::SendSuggestionOptions& options() const;
  inline ::bgs::protocol::club::v1::SendSuggestionOptions* mutable_options();
  inline ::bgs::protocol::club::v1::SendSuggestionOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::SendSuggestionOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SendSuggestionRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::SendSuggestionOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SendSuggestionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AcceptSuggestionRequest : public ::google::protobuf::Message {
 public:
  AcceptSuggestionRequest();
  virtual ~AcceptSuggestionRequest();

  AcceptSuggestionRequest(const AcceptSuggestionRequest& from);

  inline AcceptSuggestionRequest& operator=(const AcceptSuggestionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptSuggestionRequest& default_instance();

  void Swap(AcceptSuggestionRequest* other);

  // implements Message ----------------------------------------------

  AcceptSuggestionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptSuggestionRequest& from);
  void MergeFrom(const AcceptSuggestionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 suggestion_id = 3;
  inline bool has_suggestion_id() const;
  inline void clear_suggestion_id();
  static const int kSuggestionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 suggestion_id() const;
  inline void set_suggestion_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AcceptSuggestionRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_suggestion_id();
  inline void clear_has_suggestion_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 suggestion_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AcceptSuggestionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DeclineSuggestionRequest : public ::google::protobuf::Message {
 public:
  DeclineSuggestionRequest();
  virtual ~DeclineSuggestionRequest();

  DeclineSuggestionRequest(const DeclineSuggestionRequest& from);

  inline DeclineSuggestionRequest& operator=(const DeclineSuggestionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclineSuggestionRequest& default_instance();

  void Swap(DeclineSuggestionRequest* other);

  // implements Message ----------------------------------------------

  DeclineSuggestionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeclineSuggestionRequest& from);
  void MergeFrom(const DeclineSuggestionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 suggestion_id = 3;
  inline bool has_suggestion_id() const;
  inline void clear_suggestion_id();
  static const int kSuggestionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 suggestion_id() const;
  inline void set_suggestion_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DeclineSuggestionRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_suggestion_id();
  inline void clear_has_suggestion_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 suggestion_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DeclineSuggestionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetSuggestionRequest : public ::google::protobuf::Message {
 public:
  GetSuggestionRequest();
  virtual ~GetSuggestionRequest();

  GetSuggestionRequest(const GetSuggestionRequest& from);

  inline GetSuggestionRequest& operator=(const GetSuggestionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionRequest& default_instance();

  void Swap(GetSuggestionRequest* other);

  // implements Message ----------------------------------------------

  GetSuggestionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSuggestionRequest& from);
  void MergeFrom(const GetSuggestionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional fixed64 suggestion_id = 3;
  inline bool has_suggestion_id() const;
  inline void clear_suggestion_id();
  static const int kSuggestionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 suggestion_id() const;
  inline void set_suggestion_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetSuggestionRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_suggestion_id();
  inline void clear_has_suggestion_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 suggestion_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetSuggestionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetSuggestionResponse : public ::google::protobuf::Message {
 public:
  GetSuggestionResponse();
  virtual ~GetSuggestionResponse();

  GetSuggestionResponse(const GetSuggestionResponse& from);

  inline GetSuggestionResponse& operator=(const GetSuggestionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionResponse& default_instance();

  void Swap(GetSuggestionResponse* other);

  // implements Message ----------------------------------------------

  GetSuggestionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSuggestionResponse& from);
  void MergeFrom(const GetSuggestionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubSuggestion suggestion = 1;
  inline bool has_suggestion() const;
  inline void clear_suggestion();
  static const int kSuggestionFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubSuggestion& suggestion() const;
  inline ::bgs::protocol::club::v1::ClubSuggestion* mutable_suggestion();
  inline ::bgs::protocol::club::v1::ClubSuggestion* release_suggestion();
  inline void set_allocated_suggestion(::bgs::protocol::club::v1::ClubSuggestion* suggestion);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetSuggestionResponse)
 private:
  inline void set_has_suggestion();
  inline void clear_has_suggestion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubSuggestion* suggestion_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetSuggestionResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetSuggestionsRequest : public ::google::protobuf::Message {
 public:
  GetSuggestionsRequest();
  virtual ~GetSuggestionsRequest();

  GetSuggestionsRequest(const GetSuggestionsRequest& from);

  inline GetSuggestionsRequest& operator=(const GetSuggestionsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionsRequest& default_instance();

  void Swap(GetSuggestionsRequest* other);

  // implements Message ----------------------------------------------

  GetSuggestionsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSuggestionsRequest& from);
  void MergeFrom(const GetSuggestionsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetSuggestionsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetSuggestionsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetSuggestionsResponse : public ::google::protobuf::Message {
 public:
  GetSuggestionsResponse();
  virtual ~GetSuggestionsResponse();

  GetSuggestionsResponse(const GetSuggestionsResponse& from);

  inline GetSuggestionsResponse& operator=(const GetSuggestionsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionsResponse& default_instance();

  void Swap(GetSuggestionsResponse* other);

  // implements Message ----------------------------------------------

  GetSuggestionsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSuggestionsResponse& from);
  void MergeFrom(const GetSuggestionsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.ClubSuggestion suggestion = 1;
  inline int suggestion_size() const;
  inline void clear_suggestion();
  static const int kSuggestionFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubSuggestion& suggestion(int index) const;
  inline ::bgs::protocol::club::v1::ClubSuggestion* mutable_suggestion(int index);
  inline ::bgs::protocol::club::v1::ClubSuggestion* add_suggestion();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubSuggestion >&
      suggestion() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubSuggestion >*
      mutable_suggestion();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetSuggestionsResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubSuggestion > suggestion_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetSuggestionsResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateTicketRequest : public ::google::protobuf::Message {
 public:
  CreateTicketRequest();
  virtual ~CreateTicketRequest();

  CreateTicketRequest(const CreateTicketRequest& from);

  inline CreateTicketRequest& operator=(const CreateTicketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTicketRequest& default_instance();

  void Swap(CreateTicketRequest* other);

  // implements Message ----------------------------------------------

  CreateTicketRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTicketRequest& from);
  void MergeFrom(const CreateTicketRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.CreateTicketOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::CreateTicketOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateTicketOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateTicketOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateTicketOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateTicketRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::CreateTicketOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateTicketRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateTicketResponse : public ::google::protobuf::Message {
 public:
  CreateTicketResponse();
  virtual ~CreateTicketResponse();

  CreateTicketResponse(const CreateTicketResponse& from);

  inline CreateTicketResponse& operator=(const CreateTicketResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTicketResponse& default_instance();

  void Swap(CreateTicketResponse* other);

  // implements Message ----------------------------------------------

  CreateTicketResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTicketResponse& from);
  void MergeFrom(const CreateTicketResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubTicket ticket = 1;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubTicket& ticket() const;
  inline ::bgs::protocol::club::v1::ClubTicket* mutable_ticket();
  inline ::bgs::protocol::club::v1::ClubTicket* release_ticket();
  inline void set_allocated_ticket(::bgs::protocol::club::v1::ClubTicket* ticket);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateTicketResponse)
 private:
  inline void set_has_ticket();
  inline void clear_has_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubTicket* ticket_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateTicketResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DestroyTicketRequest : public ::google::protobuf::Message {
 public:
  DestroyTicketRequest();
  virtual ~DestroyTicketRequest();

  DestroyTicketRequest(const DestroyTicketRequest& from);

  inline DestroyTicketRequest& operator=(const DestroyTicketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyTicketRequest& default_instance();

  void Swap(DestroyTicketRequest* other);

  // implements Message ----------------------------------------------

  DestroyTicketRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyTicketRequest& from);
  void MergeFrom(const DestroyTicketRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional string ticket_id = 3;
  inline bool has_ticket_id() const;
  inline void clear_ticket_id();
  static const int kTicketIdFieldNumber = 3;
  inline const ::std::string& ticket_id() const;
  inline void set_ticket_id(const ::std::string& value);
  inline void set_ticket_id(const char* value);
  inline void set_ticket_id(const char* value, size_t size);
  inline ::std::string* mutable_ticket_id();
  inline ::std::string* release_ticket_id();
  inline void set_allocated_ticket_id(::std::string* ticket_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DestroyTicketRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_ticket_id();
  inline void clear_has_ticket_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::std::string* ticket_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DestroyTicketRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API RedeemTicketRequest : public ::google::protobuf::Message {
 public:
  RedeemTicketRequest();
  virtual ~RedeemTicketRequest();

  RedeemTicketRequest(const RedeemTicketRequest& from);

  inline RedeemTicketRequest& operator=(const RedeemTicketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedeemTicketRequest& default_instance();

  void Swap(RedeemTicketRequest* other);

  // implements Message ----------------------------------------------

  RedeemTicketRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedeemTicketRequest& from);
  void MergeFrom(const RedeemTicketRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional string ticket_id = 3;
  inline bool has_ticket_id() const;
  inline void clear_ticket_id();
  static const int kTicketIdFieldNumber = 3;
  inline const ::std::string& ticket_id() const;
  inline void set_ticket_id(const ::std::string& value);
  inline void set_ticket_id(const char* value);
  inline void set_ticket_id(const char* value, size_t size);
  inline ::std::string* mutable_ticket_id();
  inline ::std::string* release_ticket_id();
  inline void set_allocated_ticket_id(::std::string* ticket_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.RedeemTicketRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_ticket_id();
  inline void clear_has_ticket_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::std::string* ticket_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static RedeemTicketRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetTicketRequest : public ::google::protobuf::Message {
 public:
  GetTicketRequest();
  virtual ~GetTicketRequest();

  GetTicketRequest(const GetTicketRequest& from);

  inline GetTicketRequest& operator=(const GetTicketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTicketRequest& default_instance();

  void Swap(GetTicketRequest* other);

  // implements Message ----------------------------------------------

  GetTicketRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTicketRequest& from);
  void MergeFrom(const GetTicketRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional string ticket_id = 3;
  inline bool has_ticket_id() const;
  inline void clear_ticket_id();
  static const int kTicketIdFieldNumber = 3;
  inline const ::std::string& ticket_id() const;
  inline void set_ticket_id(const ::std::string& value);
  inline void set_ticket_id(const char* value);
  inline void set_ticket_id(const char* value, size_t size);
  inline ::std::string* mutable_ticket_id();
  inline ::std::string* release_ticket_id();
  inline void set_allocated_ticket_id(::std::string* ticket_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetTicketRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_ticket_id();
  inline void clear_has_ticket_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::std::string* ticket_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetTicketRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetTicketResponse : public ::google::protobuf::Message {
 public:
  GetTicketResponse();
  virtual ~GetTicketResponse();

  GetTicketResponse(const GetTicketResponse& from);

  inline GetTicketResponse& operator=(const GetTicketResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTicketResponse& default_instance();

  void Swap(GetTicketResponse* other);

  // implements Message ----------------------------------------------

  GetTicketResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTicketResponse& from);
  void MergeFrom(const GetTicketResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubTicket ticket = 1;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubTicket& ticket() const;
  inline ::bgs::protocol::club::v1::ClubTicket* mutable_ticket();
  inline ::bgs::protocol::club::v1::ClubTicket* release_ticket();
  inline void set_allocated_ticket(::bgs::protocol::club::v1::ClubTicket* ticket);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetTicketResponse)
 private:
  inline void set_has_ticket();
  inline void clear_has_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubTicket* ticket_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetTicketResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetTicketsRequest : public ::google::protobuf::Message {
 public:
  GetTicketsRequest();
  virtual ~GetTicketsRequest();

  GetTicketsRequest(const GetTicketsRequest& from);

  inline GetTicketsRequest& operator=(const GetTicketsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTicketsRequest& default_instance();

  void Swap(GetTicketsRequest* other);

  // implements Message ----------------------------------------------

  GetTicketsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTicketsRequest& from);
  void MergeFrom(const GetTicketsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetTicketsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetTicketsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetTicketsResponse : public ::google::protobuf::Message {
 public:
  GetTicketsResponse();
  virtual ~GetTicketsResponse();

  GetTicketsResponse(const GetTicketsResponse& from);

  inline GetTicketsResponse& operator=(const GetTicketsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTicketsResponse& default_instance();

  void Swap(GetTicketsResponse* other);

  // implements Message ----------------------------------------------

  GetTicketsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTicketsResponse& from);
  void MergeFrom(const GetTicketsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.ClubTicket ticket = 1;
  inline int ticket_size() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubTicket& ticket(int index) const;
  inline ::bgs::protocol::club::v1::ClubTicket* mutable_ticket(int index);
  inline ::bgs::protocol::club::v1::ClubTicket* add_ticket();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubTicket >&
      ticket() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubTicket >*
      mutable_ticket();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetTicketsResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubTicket > ticket_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetTicketsResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AddBanRequest : public ::google::protobuf::Message {
 public:
  AddBanRequest();
  virtual ~AddBanRequest();

  AddBanRequest(const AddBanRequest& from);

  inline AddBanRequest& operator=(const AddBanRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBanRequest& default_instance();

  void Swap(AddBanRequest* other);

  // implements Message ----------------------------------------------

  AddBanRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBanRequest& from);
  void MergeFrom(const AddBanRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.AddBanOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::AddBanOptions& options() const;
  inline ::bgs::protocol::club::v1::AddBanOptions* mutable_options();
  inline ::bgs::protocol::club::v1::AddBanOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::AddBanOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AddBanRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::AddBanOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AddBanRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API RemoveBanRequest : public ::google::protobuf::Message {
 public:
  RemoveBanRequest();
  virtual ~RemoveBanRequest();

  RemoveBanRequest(const RemoveBanRequest& from);

  inline RemoveBanRequest& operator=(const RemoveBanRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBanRequest& default_instance();

  void Swap(RemoveBanRequest* other);

  // implements Message ----------------------------------------------

  RemoveBanRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveBanRequest& from);
  void MergeFrom(const RemoveBanRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId target_id = 3;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::MemberId& target_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_target_id();
  inline ::bgs::protocol::club::v1::MemberId* release_target_id();
  inline void set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.RemoveBanRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::MemberId* target_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static RemoveBanRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetBanRequest : public ::google::protobuf::Message {
 public:
  GetBanRequest();
  virtual ~GetBanRequest();

  GetBanRequest(const GetBanRequest& from);

  inline GetBanRequest& operator=(const GetBanRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBanRequest& default_instance();

  void Swap(GetBanRequest* other);

  // implements Message ----------------------------------------------

  GetBanRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBanRequest& from);
  void MergeFrom(const GetBanRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId target_id = 3;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::MemberId& target_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_target_id();
  inline ::bgs::protocol::club::v1::MemberId* release_target_id();
  inline void set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetBanRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::MemberId* target_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetBanRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetBanResponse : public ::google::protobuf::Message {
 public:
  GetBanResponse();
  virtual ~GetBanResponse();

  GetBanResponse(const GetBanResponse& from);

  inline GetBanResponse& operator=(const GetBanResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBanResponse& default_instance();

  void Swap(GetBanResponse* other);

  // implements Message ----------------------------------------------

  GetBanResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBanResponse& from);
  void MergeFrom(const GetBanResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.ClubBan ban = 1;
  inline bool has_ban() const;
  inline void clear_ban();
  static const int kBanFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubBan& ban() const;
  inline ::bgs::protocol::club::v1::ClubBan* mutable_ban();
  inline ::bgs::protocol::club::v1::ClubBan* release_ban();
  inline void set_allocated_ban(::bgs::protocol::club::v1::ClubBan* ban);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetBanResponse)
 private:
  inline void set_has_ban();
  inline void clear_has_ban();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::ClubBan* ban_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetBanResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetBansRequest : public ::google::protobuf::Message {
 public:
  GetBansRequest();
  virtual ~GetBansRequest();

  GetBansRequest(const GetBansRequest& from);

  inline GetBansRequest& operator=(const GetBansRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBansRequest& default_instance();

  void Swap(GetBansRequest* other);

  // implements Message ----------------------------------------------

  GetBansRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBansRequest& from);
  void MergeFrom(const GetBansRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetBansRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetBansRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetBansResponse : public ::google::protobuf::Message {
 public:
  GetBansResponse();
  virtual ~GetBansResponse();

  GetBansResponse(const GetBansResponse& from);

  inline GetBansResponse& operator=(const GetBansResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBansResponse& default_instance();

  void Swap(GetBansResponse* other);

  // implements Message ----------------------------------------------

  GetBansResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBansResponse& from);
  void MergeFrom(const GetBansResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.ClubBan ban = 1;
  inline int ban_size() const;
  inline void clear_ban();
  static const int kBanFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::ClubBan& ban(int index) const;
  inline ::bgs::protocol::club::v1::ClubBan* mutable_ban(int index);
  inline ::bgs::protocol::club::v1::ClubBan* add_ban();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubBan >&
      ban() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubBan >*
      mutable_ban();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetBansResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubBan > ban_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetBansResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SubscribeStreamRequest : public ::google::protobuf::Message {
 public:
  SubscribeStreamRequest();
  virtual ~SubscribeStreamRequest();

  SubscribeStreamRequest(const SubscribeStreamRequest& from);

  inline SubscribeStreamRequest& operator=(const SubscribeStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeStreamRequest& default_instance();

  void Swap(SubscribeStreamRequest* other);

  // implements Message ----------------------------------------------

  SubscribeStreamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeStreamRequest& from);
  void MergeFrom(const SubscribeStreamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // repeated uint64 stream_id = 3;
  inline int stream_id_size() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id(int index) const;
  inline void set_stream_id(int index, ::google::protobuf::uint64 value);
  inline void add_stream_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stream_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stream_id();

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SubscribeStreamRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SubscribeStreamRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UnsubscribeStreamRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeStreamRequest();
  virtual ~UnsubscribeStreamRequest();

  UnsubscribeStreamRequest(const UnsubscribeStreamRequest& from);

  inline UnsubscribeStreamRequest& operator=(const UnsubscribeStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeStreamRequest& default_instance();

  void Swap(UnsubscribeStreamRequest* other);

  // implements Message ----------------------------------------------

  UnsubscribeStreamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeStreamRequest& from);
  void MergeFrom(const UnsubscribeStreamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // repeated uint64 stream_id = 3;
  inline int stream_id_size() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id(int index) const;
  inline void set_stream_id(int index, ::google::protobuf::uint64 value);
  inline void add_stream_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stream_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stream_id();

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UnsubscribeStreamRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UnsubscribeStreamRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateStreamRequest : public ::google::protobuf::Message {
 public:
  CreateStreamRequest();
  virtual ~CreateStreamRequest();

  CreateStreamRequest(const CreateStreamRequest& from);

  inline CreateStreamRequest& operator=(const CreateStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateStreamRequest& default_instance();

  void Swap(CreateStreamRequest* other);

  // implements Message ----------------------------------------------

  CreateStreamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateStreamRequest& from);
  void MergeFrom(const CreateStreamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.CreateStreamOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::club::v1::CreateStreamOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateStreamOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateStreamOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateStreamOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateStreamRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::club::v1::CreateStreamOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateStreamRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateStreamResponse : public ::google::protobuf::Message {
 public:
  CreateStreamResponse();
  virtual ~CreateStreamResponse();

  CreateStreamResponse(const CreateStreamResponse& from);

  inline CreateStreamResponse& operator=(const CreateStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateStreamResponse& default_instance();

  void Swap(CreateStreamResponse* other);

  // implements Message ----------------------------------------------

  CreateStreamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateStreamResponse& from);
  void MergeFrom(const CreateStreamResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 club_id = 1;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 1;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 2;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateStreamResponse)
 private:
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateStreamResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DestroyStreamRequest : public ::google::protobuf::Message {
 public:
  DestroyStreamRequest();
  virtual ~DestroyStreamRequest();

  DestroyStreamRequest(const DestroyStreamRequest& from);

  inline DestroyStreamRequest& operator=(const DestroyStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyStreamRequest& default_instance();

  void Swap(DestroyStreamRequest* other);

  // implements Message ----------------------------------------------

  DestroyStreamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyStreamRequest& from);
  void MergeFrom(const DestroyStreamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DestroyStreamRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DestroyStreamRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamRequest : public ::google::protobuf::Message {
 public:
  GetStreamRequest();
  virtual ~GetStreamRequest();

  GetStreamRequest(const GetStreamRequest& from);

  inline GetStreamRequest& operator=(const GetStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamRequest& default_instance();

  void Swap(GetStreamRequest* other);

  // implements Message ----------------------------------------------

  GetStreamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamRequest& from);
  void MergeFrom(const GetStreamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamResponse : public ::google::protobuf::Message {
 public:
  GetStreamResponse();
  virtual ~GetStreamResponse();

  GetStreamResponse(const GetStreamResponse& from);

  inline GetStreamResponse& operator=(const GetStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamResponse& default_instance();

  void Swap(GetStreamResponse* other);

  // implements Message ----------------------------------------------

  GetStreamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamResponse& from);
  void MergeFrom(const GetStreamResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.Stream stream = 1;
  inline bool has_stream() const;
  inline void clear_stream();
  static const int kStreamFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::Stream& stream() const;
  inline ::bgs::protocol::club::v1::Stream* mutable_stream();
  inline ::bgs::protocol::club::v1::Stream* release_stream();
  inline void set_allocated_stream(::bgs::protocol::club::v1::Stream* stream);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamResponse)
 private:
  inline void set_has_stream();
  inline void clear_has_stream();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::Stream* stream_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamsRequest : public ::google::protobuf::Message {
 public:
  GetStreamsRequest();
  virtual ~GetStreamsRequest();

  GetStreamsRequest(const GetStreamsRequest& from);

  inline GetStreamsRequest& operator=(const GetStreamsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamsRequest& default_instance();

  void Swap(GetStreamsRequest* other);

  // implements Message ----------------------------------------------

  GetStreamsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamsRequest& from);
  void MergeFrom(const GetStreamsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamsResponse : public ::google::protobuf::Message {
 public:
  GetStreamsResponse();
  virtual ~GetStreamsResponse();

  GetStreamsResponse(const GetStreamsResponse& from);

  inline GetStreamsResponse& operator=(const GetStreamsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamsResponse& default_instance();

  void Swap(GetStreamsResponse* other);

  // implements Message ----------------------------------------------

  GetStreamsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamsResponse& from);
  void MergeFrom(const GetStreamsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.Stream stream = 1;
  inline int stream_size() const;
  inline void clear_stream();
  static const int kStreamFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::Stream& stream(int index) const;
  inline ::bgs::protocol::club::v1::Stream* mutable_stream(int index);
  inline ::bgs::protocol::club::v1::Stream* add_stream();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Stream >&
      stream() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Stream >*
      mutable_stream();

  // repeated .bgs.protocol.club.v1.StreamView view = 2;
  inline int view_size() const;
  inline void clear_view();
  static const int kViewFieldNumber = 2;
  inline const ::bgs::protocol::club::v1::StreamView& view(int index) const;
  inline ::bgs::protocol::club::v1::StreamView* mutable_view(int index);
  inline ::bgs::protocol::club::v1::StreamView* add_view();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamView >&
      view() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamView >*
      mutable_view();

  // optional uint64 continuation = 3;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 3;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamsResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Stream > stream_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamView > view_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamsResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API UpdateStreamStateRequest : public ::google::protobuf::Message {
 public:
  UpdateStreamStateRequest();
  virtual ~UpdateStreamStateRequest();

  UpdateStreamStateRequest(const UpdateStreamStateRequest& from);

  inline UpdateStreamStateRequest& operator=(const UpdateStreamStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateStreamStateRequest& default_instance();

  void Swap(UpdateStreamStateRequest* other);

  // implements Message ----------------------------------------------

  UpdateStreamStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateStreamStateRequest& from);
  void MergeFrom(const UpdateStreamStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.StreamStateOptions options = 5;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 5;
  inline const ::bgs::protocol::club::v1::StreamStateOptions& options() const;
  inline ::bgs::protocol::club::v1::StreamStateOptions* mutable_options();
  inline ::bgs::protocol::club::v1::StreamStateOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::StreamStateOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.UpdateStreamStateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::club::v1::StreamStateOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static UpdateStreamStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SetStreamFocusRequest : public ::google::protobuf::Message {
 public:
  SetStreamFocusRequest();
  virtual ~SetStreamFocusRequest();

  SetStreamFocusRequest(const SetStreamFocusRequest& from);

  inline SetStreamFocusRequest& operator=(const SetStreamFocusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetStreamFocusRequest& default_instance();

  void Swap(SetStreamFocusRequest* other);

  // implements Message ----------------------------------------------

  SetStreamFocusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetStreamFocusRequest& from);
  void MergeFrom(const SetStreamFocusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional bool focus = 4;
  inline bool has_focus() const;
  inline void clear_focus();
  static const int kFocusFieldNumber = 4;
  inline bool focus() const;
  inline void set_focus(bool value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SetStreamFocusRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_focus();
  inline void clear_has_focus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  bool focus_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SetStreamFocusRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateMessageRequest : public ::google::protobuf::Message {
 public:
  CreateMessageRequest();
  virtual ~CreateMessageRequest();

  CreateMessageRequest(const CreateMessageRequest& from);

  inline CreateMessageRequest& operator=(const CreateMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMessageRequest& default_instance();

  void Swap(CreateMessageRequest* other);

  // implements Message ----------------------------------------------

  CreateMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateMessageRequest& from);
  void MergeFrom(const CreateMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.CreateMessageOptions options = 4;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 4;
  inline const ::bgs::protocol::club::v1::CreateMessageOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateMessageOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateMessageOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateMessageOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateMessageRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::club::v1::CreateMessageOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API CreateMessageResponse : public ::google::protobuf::Message {
 public:
  CreateMessageResponse();
  virtual ~CreateMessageResponse();

  CreateMessageResponse(const CreateMessageResponse& from);

  inline CreateMessageResponse& operator=(const CreateMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMessageResponse& default_instance();

  void Swap(CreateMessageResponse* other);

  // implements Message ----------------------------------------------

  CreateMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateMessageResponse& from);
  void MergeFrom(const CreateMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.StreamMessage message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::StreamMessage& message() const;
  inline ::bgs::protocol::club::v1::StreamMessage* mutable_message();
  inline ::bgs::protocol::club::v1::StreamMessage* release_message();
  inline void set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.CreateMessageResponse)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::StreamMessage* message_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CreateMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DestroyMessageRequest : public ::google::protobuf::Message {
 public:
  DestroyMessageRequest();
  virtual ~DestroyMessageRequest();

  DestroyMessageRequest(const DestroyMessageRequest& from);

  inline DestroyMessageRequest& operator=(const DestroyMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyMessageRequest& default_instance();

  void Swap(DestroyMessageRequest* other);

  // implements Message ----------------------------------------------

  DestroyMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyMessageRequest& from);
  void MergeFrom(const DestroyMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.MessageId message_id = 4;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  inline const ::bgs::protocol::MessageId& message_id() const;
  inline ::bgs::protocol::MessageId* mutable_message_id();
  inline ::bgs::protocol::MessageId* release_message_id();
  inline void set_allocated_message_id(::bgs::protocol::MessageId* message_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DestroyMessageRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_message_id();
  inline void clear_has_message_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::MessageId* message_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DestroyMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API DestroyMessageResponse : public ::google::protobuf::Message {
 public:
  DestroyMessageResponse();
  virtual ~DestroyMessageResponse();

  DestroyMessageResponse(const DestroyMessageResponse& from);

  inline DestroyMessageResponse& operator=(const DestroyMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyMessageResponse& default_instance();

  void Swap(DestroyMessageResponse* other);

  // implements Message ----------------------------------------------

  DestroyMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyMessageResponse& from);
  void MergeFrom(const DestroyMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.StreamMessage message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::StreamMessage& message() const;
  inline ::bgs::protocol::club::v1::StreamMessage* mutable_message();
  inline ::bgs::protocol::club::v1::StreamMessage* release_message();
  inline void set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.DestroyMessageResponse)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::StreamMessage* message_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static DestroyMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API EditMessageRequest : public ::google::protobuf::Message {
 public:
  EditMessageRequest();
  virtual ~EditMessageRequest();

  EditMessageRequest(const EditMessageRequest& from);

  inline EditMessageRequest& operator=(const EditMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditMessageRequest& default_instance();

  void Swap(EditMessageRequest* other);

  // implements Message ----------------------------------------------

  EditMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditMessageRequest& from);
  void MergeFrom(const EditMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.MessageId message_id = 4;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  inline const ::bgs::protocol::MessageId& message_id() const;
  inline ::bgs::protocol::MessageId* mutable_message_id();
  inline ::bgs::protocol::MessageId* release_message_id();
  inline void set_allocated_message_id(::bgs::protocol::MessageId* message_id);

  // optional .bgs.protocol.club.v1.CreateMessageOptions options = 5;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 5;
  inline const ::bgs::protocol::club::v1::CreateMessageOptions& options() const;
  inline ::bgs::protocol::club::v1::CreateMessageOptions* mutable_options();
  inline ::bgs::protocol::club::v1::CreateMessageOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::club::v1::CreateMessageOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.EditMessageRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::MessageId* message_id_;
  ::bgs::protocol::club::v1::CreateMessageOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static EditMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API EditMessageResponse : public ::google::protobuf::Message {
 public:
  EditMessageResponse();
  virtual ~EditMessageResponse();

  EditMessageResponse(const EditMessageResponse& from);

  inline EditMessageResponse& operator=(const EditMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditMessageResponse& default_instance();

  void Swap(EditMessageResponse* other);

  // implements Message ----------------------------------------------

  EditMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditMessageResponse& from);
  void MergeFrom(const EditMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.StreamMessage message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::StreamMessage& message() const;
  inline ::bgs::protocol::club::v1::StreamMessage* mutable_message();
  inline ::bgs::protocol::club::v1::StreamMessage* release_message();
  inline void set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.EditMessageResponse)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::StreamMessage* message_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static EditMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SetMessagePinnedRequest : public ::google::protobuf::Message {
 public:
  SetMessagePinnedRequest();
  virtual ~SetMessagePinnedRequest();

  SetMessagePinnedRequest(const SetMessagePinnedRequest& from);

  inline SetMessagePinnedRequest& operator=(const SetMessagePinnedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetMessagePinnedRequest& default_instance();

  void Swap(SetMessagePinnedRequest* other);

  // implements Message ----------------------------------------------

  SetMessagePinnedRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetMessagePinnedRequest& from);
  void MergeFrom(const SetMessagePinnedRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SetMessagePinnedRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SetMessagePinnedRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API SetTypingIndicatorRequest : public ::google::protobuf::Message {
 public:
  SetTypingIndicatorRequest();
  virtual ~SetTypingIndicatorRequest();

  SetTypingIndicatorRequest(const SetTypingIndicatorRequest& from);

  inline SetTypingIndicatorRequest& operator=(const SetTypingIndicatorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTypingIndicatorRequest& default_instance();

  void Swap(SetTypingIndicatorRequest* other);

  // implements Message ----------------------------------------------

  SetTypingIndicatorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTypingIndicatorRequest& from);
  void MergeFrom(const SetTypingIndicatorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.TypingIndicator indicator = 4;
  inline bool has_indicator() const;
  inline void clear_indicator();
  static const int kIndicatorFieldNumber = 4;
  inline ::bgs::protocol::TypingIndicator indicator() const;
  inline void set_indicator(::bgs::protocol::TypingIndicator value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.SetTypingIndicatorRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_indicator();
  inline void clear_has_indicator();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  int indicator_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static SetTypingIndicatorRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AdvanceStreamViewTimeRequest : public ::google::protobuf::Message {
 public:
  AdvanceStreamViewTimeRequest();
  virtual ~AdvanceStreamViewTimeRequest();

  AdvanceStreamViewTimeRequest(const AdvanceStreamViewTimeRequest& from);

  inline AdvanceStreamViewTimeRequest& operator=(const AdvanceStreamViewTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvanceStreamViewTimeRequest& default_instance();

  void Swap(AdvanceStreamViewTimeRequest* other);

  // implements Message ----------------------------------------------

  AdvanceStreamViewTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvanceStreamViewTimeRequest& from);
  void MergeFrom(const AdvanceStreamViewTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id_deprecated = 3 [deprecated = true];
  inline bool has_stream_id_deprecated() const PROTOBUF_DEPRECATED;
  inline void clear_stream_id_deprecated() PROTOBUF_DEPRECATED;
  static const int kStreamIdDeprecatedFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id_deprecated() const PROTOBUF_DEPRECATED;
  inline void set_stream_id_deprecated(::google::protobuf::uint64 value) PROTOBUF_DEPRECATED;

  // repeated uint64 stream_id = 4 [packed = true];
  inline int stream_id_size() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 stream_id(int index) const;
  inline void set_stream_id(int index, ::google::protobuf::uint64 value);
  inline void add_stream_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stream_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stream_id();

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id_deprecated();
  inline void clear_has_stream_id_deprecated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_deprecated_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stream_id_;
  mutable int _stream_id_cached_byte_size_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AdvanceStreamViewTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AdvanceStreamMentionViewTimeRequest : public ::google::protobuf::Message {
 public:
  AdvanceStreamMentionViewTimeRequest();
  virtual ~AdvanceStreamMentionViewTimeRequest();

  AdvanceStreamMentionViewTimeRequest(const AdvanceStreamMentionViewTimeRequest& from);

  inline AdvanceStreamMentionViewTimeRequest& operator=(const AdvanceStreamMentionViewTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvanceStreamMentionViewTimeRequest& default_instance();

  void Swap(AdvanceStreamMentionViewTimeRequest* other);

  // implements Message ----------------------------------------------

  AdvanceStreamMentionViewTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvanceStreamMentionViewTimeRequest& from);
  void MergeFrom(const AdvanceStreamMentionViewTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AdvanceStreamMentionViewTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API AdvanceActivityViewTimeRequest : public ::google::protobuf::Message {
 public:
  AdvanceActivityViewTimeRequest();
  virtual ~AdvanceActivityViewTimeRequest();

  AdvanceActivityViewTimeRequest(const AdvanceActivityViewTimeRequest& from);

  inline AdvanceActivityViewTimeRequest& operator=(const AdvanceActivityViewTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvanceActivityViewTimeRequest& default_instance();

  void Swap(AdvanceActivityViewTimeRequest* other);

  // implements Message ----------------------------------------------

  AdvanceActivityViewTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvanceActivityViewTimeRequest& from);
  void MergeFrom(const AdvanceActivityViewTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AdvanceActivityViewTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamHistoryRequest : public ::google::protobuf::Message {
 public:
  GetStreamHistoryRequest();
  virtual ~GetStreamHistoryRequest();

  GetStreamHistoryRequest(const GetStreamHistoryRequest& from);

  inline GetStreamHistoryRequest& operator=(const GetStreamHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamHistoryRequest& default_instance();

  void Swap(GetStreamHistoryRequest* other);

  // implements Message ----------------------------------------------

  GetStreamHistoryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamHistoryRequest& from);
  void MergeFrom(const GetStreamHistoryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.GetEventOptions options = 4;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 4;
  inline const ::bgs::protocol::GetEventOptions& options() const;
  inline ::bgs::protocol::GetEventOptions* mutable_options();
  inline ::bgs::protocol::GetEventOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::GetEventOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamHistoryRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::GetEventOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamHistoryRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamHistoryResponse : public ::google::protobuf::Message {
 public:
  GetStreamHistoryResponse();
  virtual ~GetStreamHistoryResponse();

  GetStreamHistoryResponse(const GetStreamHistoryResponse& from);

  inline GetStreamHistoryResponse& operator=(const GetStreamHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamHistoryResponse& default_instance();

  void Swap(GetStreamHistoryResponse* other);

  // implements Message ----------------------------------------------

  GetStreamHistoryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamHistoryResponse& from);
  void MergeFrom(const GetStreamHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bgs.protocol.club.v1.StreamMessage message = 1;
  inline int message_size() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::StreamMessage& message(int index) const;
  inline ::bgs::protocol::club::v1::StreamMessage* mutable_message(int index);
  inline ::bgs::protocol::club::v1::StreamMessage* add_message();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamMessage >&
      message() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamMessage >*
      mutable_message();

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamHistoryResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamMessage > message_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamHistoryResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamMessageRequest : public ::google::protobuf::Message {
 public:
  GetStreamMessageRequest();
  virtual ~GetStreamMessageRequest();

  GetStreamMessageRequest(const GetStreamMessageRequest& from);

  inline GetStreamMessageRequest& operator=(const GetStreamMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamMessageRequest& default_instance();

  void Swap(GetStreamMessageRequest* other);

  // implements Message ----------------------------------------------

  GetStreamMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamMessageRequest& from);
  void MergeFrom(const GetStreamMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.MessageId message_id = 4;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  inline const ::bgs::protocol::MessageId& message_id() const;
  inline ::bgs::protocol::MessageId* mutable_message_id();
  inline ::bgs::protocol::MessageId* release_message_id();
  inline void set_allocated_message_id(::bgs::protocol::MessageId* message_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamMessageRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_message_id();
  inline void clear_has_message_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::MessageId* message_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamMessageResponse : public ::google::protobuf::Message {
 public:
  GetStreamMessageResponse();
  virtual ~GetStreamMessageResponse();

  GetStreamMessageResponse(const GetStreamMessageResponse& from);

  inline GetStreamMessageResponse& operator=(const GetStreamMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamMessageResponse& default_instance();

  void Swap(GetStreamMessageResponse* other);

  // implements Message ----------------------------------------------

  GetStreamMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamMessageResponse& from);
  void MergeFrom(const GetStreamMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.StreamMessage message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::StreamMessage& message() const;
  inline ::bgs::protocol::club::v1::StreamMessage* mutable_message();
  inline ::bgs::protocol::club::v1::StreamMessage* release_message();
  inline void set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamMessageResponse)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::StreamMessage* message_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetClubActivityRequest : public ::google::protobuf::Message {
 public:
  GetClubActivityRequest();
  virtual ~GetClubActivityRequest();

  GetClubActivityRequest(const GetClubActivityRequest& from);

  inline GetClubActivityRequest& operator=(const GetClubActivityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClubActivityRequest& default_instance();

  void Swap(GetClubActivityRequest* other);

  // implements Message ----------------------------------------------

  GetClubActivityRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClubActivityRequest& from);
  void MergeFrom(const GetClubActivityRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.GetEventOptions options = 3;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::bgs::protocol::GetEventOptions& options() const;
  inline ::bgs::protocol::GetEventOptions* mutable_options();
  inline ::bgs::protocol::GetEventOptions* release_options();
  inline void set_allocated_options(::bgs::protocol::GetEventOptions* options);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetClubActivityRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::bgs::protocol::GetEventOptions* options_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetClubActivityRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetClubActivityResponse : public ::google::protobuf::Message {
 public:
  GetClubActivityResponse();
  virtual ~GetClubActivityResponse();

  GetClubActivityResponse(const GetClubActivityResponse& from);

  inline GetClubActivityResponse& operator=(const GetClubActivityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClubActivityResponse& default_instance();

  void Swap(GetClubActivityResponse* other);

  // implements Message ----------------------------------------------

  GetClubActivityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClubActivityResponse& from);
  void MergeFrom(const GetClubActivityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 continuation = 2;
  inline bool has_continuation() const;
  inline void clear_continuation();
  static const int kContinuationFieldNumber = 2;
  inline ::google::protobuf::uint64 continuation() const;
  inline void set_continuation(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetClubActivityResponse)
 private:
  inline void set_has_continuation();
  inline void clear_has_continuation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 continuation_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetClubActivityResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamVoiceTokenRequest : public ::google::protobuf::Message {
 public:
  GetStreamVoiceTokenRequest();
  virtual ~GetStreamVoiceTokenRequest();

  GetStreamVoiceTokenRequest(const GetStreamVoiceTokenRequest& from);

  inline GetStreamVoiceTokenRequest& operator=(const GetStreamVoiceTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamVoiceTokenRequest& default_instance();

  void Swap(GetStreamVoiceTokenRequest* other);

  // implements Message ----------------------------------------------

  GetStreamVoiceTokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamVoiceTokenRequest& from);
  void MergeFrom(const GetStreamVoiceTokenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional uint32 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamVoiceTokenRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::google::protobuf::uint32 version_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamVoiceTokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API GetStreamVoiceTokenResponse : public ::google::protobuf::Message {
 public:
  GetStreamVoiceTokenResponse();
  virtual ~GetStreamVoiceTokenResponse();

  GetStreamVoiceTokenResponse(const GetStreamVoiceTokenResponse& from);

  inline GetStreamVoiceTokenResponse& operator=(const GetStreamVoiceTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStreamVoiceTokenResponse& default_instance();

  void Swap(GetStreamVoiceTokenResponse* other);

  // implements Message ----------------------------------------------

  GetStreamVoiceTokenResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStreamVoiceTokenResponse& from);
  void MergeFrom(const GetStreamVoiceTokenResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_uri = 1;
  inline bool has_channel_uri() const;
  inline void clear_channel_uri();
  static const int kChannelUriFieldNumber = 1;
  inline const ::std::string& channel_uri() const;
  inline void set_channel_uri(const ::std::string& value);
  inline void set_channel_uri(const char* value);
  inline void set_channel_uri(const char* value, size_t size);
  inline ::std::string* mutable_channel_uri();
  inline ::std::string* release_channel_uri();
  inline void set_allocated_channel_uri(::std::string* channel_uri);

  // optional .bgs.protocol.VoiceCredentials credentials = 2;
  inline bool has_credentials() const;
  inline void clear_credentials();
  static const int kCredentialsFieldNumber = 2;
  inline const ::bgs::protocol::VoiceCredentials& credentials() const;
  inline ::bgs::protocol::VoiceCredentials* mutable_credentials();
  inline ::bgs::protocol::VoiceCredentials* release_credentials();
  inline void set_allocated_credentials(::bgs::protocol::VoiceCredentials* credentials);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.GetStreamVoiceTokenResponse)
 private:
  inline void set_has_channel_uri();
  inline void clear_has_channel_uri();
  inline void set_has_credentials();
  inline void clear_has_credentials();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_uri_;
  ::bgs::protocol::VoiceCredentials* credentials_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GetStreamVoiceTokenResponse* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API KickFromStreamVoiceRequest : public ::google::protobuf::Message {
 public:
  KickFromStreamVoiceRequest();
  virtual ~KickFromStreamVoiceRequest();

  KickFromStreamVoiceRequest(const KickFromStreamVoiceRequest& from);

  inline KickFromStreamVoiceRequest& operator=(const KickFromStreamVoiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickFromStreamVoiceRequest& default_instance();

  void Swap(KickFromStreamVoiceRequest* other);

  // implements Message ----------------------------------------------

  KickFromStreamVoiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickFromStreamVoiceRequest& from);
  void MergeFrom(const KickFromStreamVoiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.MemberId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::MemberId& agent_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_agent_id();
  inline ::bgs::protocol::club::v1::MemberId* release_agent_id();
  inline void set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id);

  // optional uint64 club_id = 2;
  inline bool has_club_id() const;
  inline void clear_club_id();
  static const int kClubIdFieldNumber = 2;
  inline ::google::protobuf::uint64 club_id() const;
  inline void set_club_id(::google::protobuf::uint64 value);

  // optional uint64 stream_id = 3;
  inline bool has_stream_id() const;
  inline void clear_stream_id();
  static const int kStreamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 stream_id() const;
  inline void set_stream_id(::google::protobuf::uint64 value);

  // optional .bgs.protocol.club.v1.MemberId target_id = 4;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 4;
  inline const ::bgs::protocol::club::v1::MemberId& target_id() const;
  inline ::bgs::protocol::club::v1::MemberId* mutable_target_id();
  inline ::bgs::protocol::club::v1::MemberId* release_target_id();
  inline void set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.KickFromStreamVoiceRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_club_id();
  inline void clear_has_club_id();
  inline void set_has_stream_id();
  inline void clear_has_stream_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::MemberId* agent_id_;
  ::google::protobuf::uint64 club_id_;
  ::google::protobuf::uint64 stream_id_;
  ::bgs::protocol::club::v1::MemberId* target_id_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5frequest_2eproto();
  friend void protobuf_AssignDesc_club_5frequest_2eproto();
  friend void protobuf_ShutdownFile_club_5frequest_2eproto();

  void InitAsDefaultInstance();
  static KickFromStreamVoiceRequest* default_instance_;
};
// ===================================================================

// ===================================================================

// ===================================================================

// SubscribeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SubscribeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SubscribeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SubscribeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SubscribeRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SubscribeRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SubscribeRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SubscribeRequest.club_id)
  return club_id_;
}
inline void SubscribeRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SubscribeRequest.club_id)
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UnsubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UnsubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnsubscribeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnsubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UnsubscribeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnsubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UnsubscribeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UnsubscribeRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UnsubscribeRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsubscribeRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsubscribeRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsubscribeRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UnsubscribeRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnsubscribeRequest.club_id)
  return club_id_;
}
inline void UnsubscribeRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UnsubscribeRequest.club_id)
}

// -------------------------------------------------------------------

// CreateRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool CreateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& CreateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void CreateRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateRequest.agent_id)
}

// optional .bgs.protocol.club.v1.ClubCreateOptions options = 2;
inline bool CreateRequest::has_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRequest::set_has_options() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::ClubCreateOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::ClubCreateOptions& CreateRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::ClubCreateOptions* CreateRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::ClubCreateOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::ClubCreateOptions* CreateRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::ClubCreateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void CreateRequest::set_allocated_options(::bgs::protocol::club::v1::ClubCreateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateRequest.options)
}

// -------------------------------------------------------------------

// CreateResponse

// optional uint64 club_id = 1;
inline bool CreateResponse::has_club_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateResponse::set_has_club_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateResponse::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateResponse::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 CreateResponse::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateResponse.club_id)
  return club_id_;
}
inline void CreateResponse::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateResponse.club_id)
}

// -------------------------------------------------------------------

// DestroyRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DestroyRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DestroyRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DestroyRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DestroyRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DestroyRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyRequest.club_id)
  return club_id_;
}
inline void DestroyRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyRequest.club_id)
}

// -------------------------------------------------------------------

// GetDescriptionRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetDescriptionRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDescriptionRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDescriptionRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDescriptionRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetDescriptionRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetDescriptionRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetDescriptionRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetDescriptionRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetDescriptionRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetDescriptionRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetDescriptionRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetDescriptionRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDescriptionRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDescriptionRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDescriptionRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetDescriptionRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetDescriptionRequest.club_id)
  return club_id_;
}
inline void GetDescriptionRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetDescriptionRequest.club_id)
}

// -------------------------------------------------------------------

// GetDescriptionResponse

// optional .bgs.protocol.club.v1.ClubDescription club = 1;
inline bool GetDescriptionResponse::has_club() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDescriptionResponse::set_has_club() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDescriptionResponse::clear_has_club() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDescriptionResponse::clear_club() {
  if (club_ != NULL) club_->::bgs::protocol::club::v1::ClubDescription::Clear();
  clear_has_club();
}
inline const ::bgs::protocol::club::v1::ClubDescription& GetDescriptionResponse::club() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetDescriptionResponse.club)
  return club_ != NULL ? *club_ : *default_instance_->club_;
}
inline ::bgs::protocol::club::v1::ClubDescription* GetDescriptionResponse::mutable_club() {
  set_has_club();
  if (club_ == NULL) club_ = new ::bgs::protocol::club::v1::ClubDescription;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetDescriptionResponse.club)
  return club_;
}
inline ::bgs::protocol::club::v1::ClubDescription* GetDescriptionResponse::release_club() {
  clear_has_club();
  ::bgs::protocol::club::v1::ClubDescription* temp = club_;
  club_ = NULL;
  return temp;
}
inline void GetDescriptionResponse::set_allocated_club(::bgs::protocol::club::v1::ClubDescription* club) {
  delete club_;
  club_ = club;
  if (club) {
    set_has_club();
  } else {
    clear_has_club();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetDescriptionResponse.club)
}

// -------------------------------------------------------------------

// GetClubTypeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetClubTypeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClubTypeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClubTypeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClubTypeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetClubTypeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubTypeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetClubTypeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubTypeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetClubTypeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetClubTypeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubTypeRequest.agent_id)
}

// optional .bgs.protocol.club.v1.UniqueClubType type = 2;
inline bool GetClubTypeRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetClubTypeRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetClubTypeRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetClubTypeRequest::clear_type() {
  if (type_ != NULL) type_->::bgs::protocol::club::v1::UniqueClubType::Clear();
  clear_has_type();
}
inline const ::bgs::protocol::club::v1::UniqueClubType& GetClubTypeRequest::type() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubTypeRequest.type)
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::bgs::protocol::club::v1::UniqueClubType* GetClubTypeRequest::mutable_type() {
  set_has_type();
  if (type_ == NULL) type_ = new ::bgs::protocol::club::v1::UniqueClubType;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubTypeRequest.type)
  return type_;
}
inline ::bgs::protocol::club::v1::UniqueClubType* GetClubTypeRequest::release_type() {
  clear_has_type();
  ::bgs::protocol::club::v1::UniqueClubType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void GetClubTypeRequest::set_allocated_type(::bgs::protocol::club::v1::UniqueClubType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubTypeRequest.type)
}

// -------------------------------------------------------------------

// GetClubTypeResponse

// optional .bgs.protocol.club.v1.UniqueClubType type = 1;
inline bool GetClubTypeResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClubTypeResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClubTypeResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClubTypeResponse::clear_type() {
  if (type_ != NULL) type_->::bgs::protocol::club::v1::UniqueClubType::Clear();
  clear_has_type();
}
inline const ::bgs::protocol::club::v1::UniqueClubType& GetClubTypeResponse::type() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubTypeResponse.type)
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::bgs::protocol::club::v1::UniqueClubType* GetClubTypeResponse::mutable_type() {
  set_has_type();
  if (type_ == NULL) type_ = new ::bgs::protocol::club::v1::UniqueClubType;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubTypeResponse.type)
  return type_;
}
inline ::bgs::protocol::club::v1::UniqueClubType* GetClubTypeResponse::release_type() {
  clear_has_type();
  ::bgs::protocol::club::v1::UniqueClubType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void GetClubTypeResponse::set_allocated_type(::bgs::protocol::club::v1::UniqueClubType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubTypeResponse.type)
}

// optional .bgs.protocol.club.v1.ClubRoleSet role_set = 2;
inline bool GetClubTypeResponse::has_role_set() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetClubTypeResponse::set_has_role_set() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetClubTypeResponse::clear_has_role_set() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetClubTypeResponse::clear_role_set() {
  if (role_set_ != NULL) role_set_->::bgs::protocol::club::v1::ClubRoleSet::Clear();
  clear_has_role_set();
}
inline const ::bgs::protocol::club::v1::ClubRoleSet& GetClubTypeResponse::role_set() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubTypeResponse.role_set)
  return role_set_ != NULL ? *role_set_ : *default_instance_->role_set_;
}
inline ::bgs::protocol::club::v1::ClubRoleSet* GetClubTypeResponse::mutable_role_set() {
  set_has_role_set();
  if (role_set_ == NULL) role_set_ = new ::bgs::protocol::club::v1::ClubRoleSet;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubTypeResponse.role_set)
  return role_set_;
}
inline ::bgs::protocol::club::v1::ClubRoleSet* GetClubTypeResponse::release_role_set() {
  clear_has_role_set();
  ::bgs::protocol::club::v1::ClubRoleSet* temp = role_set_;
  role_set_ = NULL;
  return temp;
}
inline void GetClubTypeResponse::set_allocated_role_set(::bgs::protocol::club::v1::ClubRoleSet* role_set) {
  delete role_set_;
  role_set_ = role_set;
  if (role_set) {
    set_has_role_set();
  } else {
    clear_has_role_set();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubTypeResponse.role_set)
}

// optional .bgs.protocol.club.v1.ClubTypeRangeSet range_set = 3;
inline bool GetClubTypeResponse::has_range_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetClubTypeResponse::set_has_range_set() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetClubTypeResponse::clear_has_range_set() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetClubTypeResponse::clear_range_set() {
  if (range_set_ != NULL) range_set_->::bgs::protocol::club::v1::ClubTypeRangeSet::Clear();
  clear_has_range_set();
}
inline const ::bgs::protocol::club::v1::ClubTypeRangeSet& GetClubTypeResponse::range_set() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubTypeResponse.range_set)
  return range_set_ != NULL ? *range_set_ : *default_instance_->range_set_;
}
inline ::bgs::protocol::club::v1::ClubTypeRangeSet* GetClubTypeResponse::mutable_range_set() {
  set_has_range_set();
  if (range_set_ == NULL) range_set_ = new ::bgs::protocol::club::v1::ClubTypeRangeSet;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubTypeResponse.range_set)
  return range_set_;
}
inline ::bgs::protocol::club::v1::ClubTypeRangeSet* GetClubTypeResponse::release_range_set() {
  clear_has_range_set();
  ::bgs::protocol::club::v1::ClubTypeRangeSet* temp = range_set_;
  range_set_ = NULL;
  return temp;
}
inline void GetClubTypeResponse::set_allocated_range_set(::bgs::protocol::club::v1::ClubTypeRangeSet* range_set) {
  delete range_set_;
  range_set_ = range_set;
  if (range_set) {
    set_has_range_set();
  } else {
    clear_has_range_set();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubTypeResponse.range_set)
}

// -------------------------------------------------------------------

// UpdateClubStateRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UpdateClubStateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateClubStateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateClubStateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateClubStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateClubStateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubStateRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateClubStateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateClubStateRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateClubStateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UpdateClubStateRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateClubStateRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UpdateClubStateRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateClubStateRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateClubStateRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateClubStateRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UpdateClubStateRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubStateRequest.club_id)
  return club_id_;
}
inline void UpdateClubStateRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateClubStateRequest.club_id)
}

// optional .bgs.protocol.club.v1.ClubStateOptions options = 3;
inline bool UpdateClubStateRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateClubStateRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateClubStateRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateClubStateRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::ClubStateOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::ClubStateOptions& UpdateClubStateRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubStateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::ClubStateOptions* UpdateClubStateRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::ClubStateOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateClubStateRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::ClubStateOptions* UpdateClubStateRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::ClubStateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateClubStateRequest::set_allocated_options(::bgs::protocol::club::v1::ClubStateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateClubStateRequest.options)
}

// -------------------------------------------------------------------

// UpdateClubSettingsRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UpdateClubSettingsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateClubSettingsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateClubSettingsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateClubSettingsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateClubSettingsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubSettingsRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateClubSettingsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateClubSettingsRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateClubSettingsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UpdateClubSettingsRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateClubSettingsRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UpdateClubSettingsRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateClubSettingsRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateClubSettingsRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateClubSettingsRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UpdateClubSettingsRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubSettingsRequest.club_id)
  return club_id_;
}
inline void UpdateClubSettingsRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateClubSettingsRequest.club_id)
}

// optional .bgs.protocol.club.v1.ClubSettingsOptions options = 3;
inline bool UpdateClubSettingsRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateClubSettingsRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateClubSettingsRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateClubSettingsRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::ClubSettingsOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::ClubSettingsOptions& UpdateClubSettingsRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateClubSettingsRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::ClubSettingsOptions* UpdateClubSettingsRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::ClubSettingsOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateClubSettingsRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::ClubSettingsOptions* UpdateClubSettingsRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::ClubSettingsOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateClubSettingsRequest::set_allocated_options(::bgs::protocol::club::v1::ClubSettingsOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateClubSettingsRequest.options)
}

// -------------------------------------------------------------------

// AddMemberRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AddMemberRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMemberRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMemberRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMemberRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AddMemberRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddMemberRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AddMemberRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AddMemberRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AddMemberRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AddMemberRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AddMemberRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AddMemberRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddMemberRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddMemberRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddMemberRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AddMemberRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddMemberRequest.club_id)
  return club_id_;
}
inline void AddMemberRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AddMemberRequest.club_id)
}

// optional .bgs.protocol.club.v1.CreateMemberOptions options = 3;
inline bool AddMemberRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddMemberRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddMemberRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddMemberRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateMemberOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateMemberOptions& AddMemberRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddMemberRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateMemberOptions* AddMemberRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateMemberOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AddMemberRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateMemberOptions* AddMemberRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateMemberOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void AddMemberRequest::set_allocated_options(::bgs::protocol::club::v1::CreateMemberOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AddMemberRequest.options)
}

// -------------------------------------------------------------------

// JoinRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool JoinRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& JoinRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.JoinRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* JoinRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.JoinRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* JoinRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void JoinRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.JoinRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool JoinRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 JoinRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.JoinRequest.club_id)
  return club_id_;
}
inline void JoinRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.JoinRequest.club_id)
}

// optional .bgs.protocol.club.v1.CreateMemberOptions options = 3;
inline bool JoinRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateMemberOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateMemberOptions& JoinRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.JoinRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateMemberOptions* JoinRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateMemberOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.JoinRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateMemberOptions* JoinRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateMemberOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void JoinRequest::set_allocated_options(::bgs::protocol::club::v1::CreateMemberOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.JoinRequest.options)
}

// -------------------------------------------------------------------

// LeaveRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool LeaveRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& LeaveRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.LeaveRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* LeaveRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.LeaveRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* LeaveRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void LeaveRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.LeaveRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool LeaveRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 LeaveRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.LeaveRequest.club_id)
  return club_id_;
}
inline void LeaveRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.LeaveRequest.club_id)
}

// -------------------------------------------------------------------

// KickRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool KickRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& KickRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.KickRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void KickRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.KickRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool KickRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 KickRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickRequest.club_id)
  return club_id_;
}
inline void KickRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.KickRequest.club_id)
}

// optional .bgs.protocol.club.v1.MemberId target_id = 3;
inline bool KickRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_target_id();
}
inline const ::bgs::protocol::club::v1::MemberId& KickRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickRequest.target_id)
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.KickRequest.target_id)
  return target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickRequest::release_target_id() {
  clear_has_target_id();
  ::bgs::protocol::club::v1::MemberId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}
inline void KickRequest::set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id) {
  delete target_id_;
  target_id_ = target_id;
  if (target_id) {
    set_has_target_id();
  } else {
    clear_has_target_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.KickRequest.target_id)
}

// -------------------------------------------------------------------

// GetMemberRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetMemberRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMemberRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMemberRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMemberRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetMemberRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMemberRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMemberRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetMemberRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMemberRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetMemberRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetMemberRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetMemberRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMemberRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMemberRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMemberRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetMemberRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMemberRequest.club_id)
  return club_id_;
}
inline void GetMemberRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetMemberRequest.club_id)
}

// optional .bgs.protocol.club.v1.MemberId member_id = 3;
inline bool GetMemberRequest::has_member_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMemberRequest::set_has_member_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMemberRequest::clear_has_member_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMemberRequest::clear_member_id() {
  if (member_id_ != NULL) member_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_member_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetMemberRequest::member_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMemberRequest.member_id)
  return member_id_ != NULL ? *member_id_ : *default_instance_->member_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMemberRequest::mutable_member_id() {
  set_has_member_id();
  if (member_id_ == NULL) member_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetMemberRequest.member_id)
  return member_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMemberRequest::release_member_id() {
  clear_has_member_id();
  ::bgs::protocol::club::v1::MemberId* temp = member_id_;
  member_id_ = NULL;
  return temp;
}
inline void GetMemberRequest::set_allocated_member_id(::bgs::protocol::club::v1::MemberId* member_id) {
  delete member_id_;
  member_id_ = member_id;
  if (member_id) {
    set_has_member_id();
  } else {
    clear_has_member_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetMemberRequest.member_id)
}

// -------------------------------------------------------------------

// GetMemberResponse

// optional .bgs.protocol.club.v1.Member member = 1;
inline bool GetMemberResponse::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMemberResponse::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMemberResponse::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMemberResponse::clear_member() {
  if (member_ != NULL) member_->::bgs::protocol::club::v1::Member::Clear();
  clear_has_member();
}
inline const ::bgs::protocol::club::v1::Member& GetMemberResponse::member() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMemberResponse.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::bgs::protocol::club::v1::Member* GetMemberResponse::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::bgs::protocol::club::v1::Member;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetMemberResponse.member)
  return member_;
}
inline ::bgs::protocol::club::v1::Member* GetMemberResponse::release_member() {
  clear_has_member();
  ::bgs::protocol::club::v1::Member* temp = member_;
  member_ = NULL;
  return temp;
}
inline void GetMemberResponse::set_allocated_member(::bgs::protocol::club::v1::Member* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetMemberResponse.member)
}

// -------------------------------------------------------------------

// GetMembersRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetMembersRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMembersRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMembersRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMembersRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetMembersRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMembersRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMembersRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetMembersRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetMembersRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetMembersRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetMembersRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetMembersRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMembersRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMembersRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMembersRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetMembersRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMembersRequest.club_id)
  return club_id_;
}
inline void GetMembersRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetMembersRequest.club_id)
}

// optional uint64 continuation = 4;
inline bool GetMembersRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMembersRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMembersRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMembersRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetMembersRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMembersRequest.continuation)
  return continuation_;
}
inline void GetMembersRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetMembersRequest.continuation)
}

// -------------------------------------------------------------------

// GetMembersResponse

// repeated .bgs.protocol.club.v1.Member member = 1;
inline int GetMembersResponse::member_size() const {
  return member_.size();
}
inline void GetMembersResponse::clear_member() {
  member_.Clear();
}
inline const ::bgs::protocol::club::v1::Member& GetMembersResponse::member(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMembersResponse.member)
  return member_.Get(index);
}
inline ::bgs::protocol::club::v1::Member* GetMembersResponse::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetMembersResponse.member)
  return member_.Mutable(index);
}
inline ::bgs::protocol::club::v1::Member* GetMembersResponse::add_member() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetMembersResponse.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Member >&
GetMembersResponse::member() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetMembersResponse.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Member >*
GetMembersResponse::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetMembersResponse.member)
  return &member_;
}

// optional uint64 continuation = 2;
inline bool GetMembersResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMembersResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMembersResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMembersResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetMembersResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetMembersResponse.continuation)
  return continuation_;
}
inline void GetMembersResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetMembersResponse.continuation)
}

// -------------------------------------------------------------------

// UpdateMemberStateRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UpdateMemberStateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateMemberStateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateMemberStateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateMemberStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateMemberStateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateMemberStateRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateMemberStateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateMemberStateRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateMemberStateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UpdateMemberStateRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateMemberStateRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UpdateMemberStateRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateMemberStateRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateMemberStateRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateMemberStateRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UpdateMemberStateRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateMemberStateRequest.club_id)
  return club_id_;
}
inline void UpdateMemberStateRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateMemberStateRequest.club_id)
}

// optional .bgs.protocol.club.v1.MemberId member_id = 3;
inline bool UpdateMemberStateRequest::has_member_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateMemberStateRequest::set_has_member_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateMemberStateRequest::clear_has_member_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateMemberStateRequest::clear_member_id() {
  if (member_id_ != NULL) member_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_member_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateMemberStateRequest::member_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateMemberStateRequest.member_id)
  return member_id_ != NULL ? *member_id_ : *default_instance_->member_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateMemberStateRequest::mutable_member_id() {
  set_has_member_id();
  if (member_id_ == NULL) member_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateMemberStateRequest.member_id)
  return member_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateMemberStateRequest::release_member_id() {
  clear_has_member_id();
  ::bgs::protocol::club::v1::MemberId* temp = member_id_;
  member_id_ = NULL;
  return temp;
}
inline void UpdateMemberStateRequest::set_allocated_member_id(::bgs::protocol::club::v1::MemberId* member_id) {
  delete member_id_;
  member_id_ = member_id;
  if (member_id) {
    set_has_member_id();
  } else {
    clear_has_member_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateMemberStateRequest.member_id)
}

// optional .bgs.protocol.club.v1.MemberStateOptions options = 5;
inline bool UpdateMemberStateRequest::has_options() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateMemberStateRequest::set_has_options() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateMemberStateRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateMemberStateRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::MemberStateOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::MemberStateOptions& UpdateMemberStateRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateMemberStateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::MemberStateOptions* UpdateMemberStateRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::MemberStateOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateMemberStateRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::MemberStateOptions* UpdateMemberStateRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::MemberStateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateMemberStateRequest::set_allocated_options(::bgs::protocol::club::v1::MemberStateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateMemberStateRequest.options)
}

// -------------------------------------------------------------------

// UpdateSubscriberStateRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UpdateSubscriberStateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateSubscriberStateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateSubscriberStateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateSubscriberStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateSubscriberStateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateSubscriberStateRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateSubscriberStateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateSubscriberStateRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateSubscriberStateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UpdateSubscriberStateRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateSubscriberStateRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UpdateSubscriberStateRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateSubscriberStateRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateSubscriberStateRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateSubscriberStateRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UpdateSubscriberStateRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateSubscriberStateRequest.club_id)
  return club_id_;
}
inline void UpdateSubscriberStateRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateSubscriberStateRequest.club_id)
}

// optional .bgs.protocol.club.v1.SubscriberStateOptions options = 3;
inline bool UpdateSubscriberStateRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateSubscriberStateRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateSubscriberStateRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateSubscriberStateRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::SubscriberStateOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::SubscriberStateOptions& UpdateSubscriberStateRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateSubscriberStateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::SubscriberStateOptions* UpdateSubscriberStateRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::SubscriberStateOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateSubscriberStateRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::SubscriberStateOptions* UpdateSubscriberStateRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::SubscriberStateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateSubscriberStateRequest::set_allocated_options(::bgs::protocol::club::v1::SubscriberStateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateSubscriberStateRequest.options)
}

// -------------------------------------------------------------------

// AssignRoleRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AssignRoleRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssignRoleRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssignRoleRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssignRoleRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AssignRoleRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AssignRoleRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AssignRoleRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AssignRoleRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AssignRoleRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AssignRoleRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AssignRoleRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AssignRoleRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssignRoleRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssignRoleRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssignRoleRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AssignRoleRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AssignRoleRequest.club_id)
  return club_id_;
}
inline void AssignRoleRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AssignRoleRequest.club_id)
}

// optional .bgs.protocol.club.v1.RoleOptions options = 3;
inline bool AssignRoleRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AssignRoleRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AssignRoleRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AssignRoleRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::RoleOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::RoleOptions& AssignRoleRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AssignRoleRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::RoleOptions* AssignRoleRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::RoleOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AssignRoleRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::RoleOptions* AssignRoleRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::RoleOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void AssignRoleRequest::set_allocated_options(::bgs::protocol::club::v1::RoleOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AssignRoleRequest.options)
}

// -------------------------------------------------------------------

// UnassignRoleRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UnassignRoleRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnassignRoleRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnassignRoleRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnassignRoleRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UnassignRoleRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnassignRoleRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnassignRoleRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UnassignRoleRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnassignRoleRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UnassignRoleRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UnassignRoleRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UnassignRoleRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnassignRoleRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnassignRoleRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnassignRoleRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UnassignRoleRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnassignRoleRequest.club_id)
  return club_id_;
}
inline void UnassignRoleRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UnassignRoleRequest.club_id)
}

// optional .bgs.protocol.club.v1.RoleOptions options = 3;
inline bool UnassignRoleRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnassignRoleRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnassignRoleRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnassignRoleRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::RoleOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::RoleOptions& UnassignRoleRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnassignRoleRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::RoleOptions* UnassignRoleRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::RoleOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UnassignRoleRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::RoleOptions* UnassignRoleRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::RoleOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UnassignRoleRequest::set_allocated_options(::bgs::protocol::club::v1::RoleOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UnassignRoleRequest.options)
}

// -------------------------------------------------------------------

// SendInvitationRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SendInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SendInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendInvitationRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SendInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SendInvitationRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SendInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SendInvitationRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SendInvitationRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SendInvitationRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendInvitationRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendInvitationRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendInvitationRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SendInvitationRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendInvitationRequest.club_id)
  return club_id_;
}
inline void SendInvitationRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SendInvitationRequest.club_id)
}

// optional .bgs.protocol.club.v1.SendInvitationOptions options = 3;
inline bool SendInvitationRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendInvitationRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendInvitationRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendInvitationRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::SendInvitationOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::SendInvitationOptions& SendInvitationRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendInvitationRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::SendInvitationOptions* SendInvitationRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::SendInvitationOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SendInvitationRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::SendInvitationOptions* SendInvitationRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::SendInvitationOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void SendInvitationRequest::set_allocated_options(::bgs::protocol::club::v1::SendInvitationOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SendInvitationRequest.options)
}

// -------------------------------------------------------------------

// AcceptInvitationRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AcceptInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AcceptInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptInvitationRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AcceptInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AcceptInvitationRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AcceptInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AcceptInvitationRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AcceptInvitationRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AcceptInvitationRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptInvitationRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptInvitationRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptInvitationRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AcceptInvitationRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptInvitationRequest.club_id)
  return club_id_;
}
inline void AcceptInvitationRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AcceptInvitationRequest.club_id)
}

// optional fixed64 invitation_id = 3;
inline bool AcceptInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 AcceptInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptInvitationRequest.invitation_id)
  return invitation_id_;
}
inline void AcceptInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AcceptInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// DeclineInvitationRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DeclineInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeclineInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeclineInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeclineInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DeclineInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineInvitationRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DeclineInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DeclineInvitationRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DeclineInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DeclineInvitationRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DeclineInvitationRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DeclineInvitationRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeclineInvitationRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeclineInvitationRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeclineInvitationRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DeclineInvitationRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineInvitationRequest.club_id)
  return club_id_;
}
inline void DeclineInvitationRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DeclineInvitationRequest.club_id)
}

// optional fixed64 invitation_id = 3;
inline bool DeclineInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeclineInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeclineInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeclineInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 DeclineInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineInvitationRequest.invitation_id)
  return invitation_id_;
}
inline void DeclineInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DeclineInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// RevokeInvitationRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool RevokeInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevokeInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevokeInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevokeInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& RevokeInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RevokeInvitationRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RevokeInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.RevokeInvitationRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RevokeInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void RevokeInvitationRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.RevokeInvitationRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool RevokeInvitationRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RevokeInvitationRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RevokeInvitationRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RevokeInvitationRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 RevokeInvitationRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RevokeInvitationRequest.club_id)
  return club_id_;
}
inline void RevokeInvitationRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.RevokeInvitationRequest.club_id)
}

// optional fixed64 invitation_id = 3;
inline bool RevokeInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RevokeInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RevokeInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RevokeInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 RevokeInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RevokeInvitationRequest.invitation_id)
  return invitation_id_;
}
inline void RevokeInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.RevokeInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// GetInvitationRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetInvitationRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetInvitationRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetInvitationRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetInvitationRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInvitationRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInvitationRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInvitationRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetInvitationRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationRequest.club_id)
  return club_id_;
}
inline void GetInvitationRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetInvitationRequest.club_id)
}

// optional fixed64 invitation_id = 3;
inline bool GetInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 GetInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationRequest.invitation_id)
  return invitation_id_;
}
inline void GetInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// GetInvitationResponse

// optional .bgs.protocol.club.v1.ClubInvitation invitation = 1;
inline bool GetInvitationResponse::has_invitation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInvitationResponse::set_has_invitation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInvitationResponse::clear_has_invitation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInvitationResponse::clear_invitation() {
  if (invitation_ != NULL) invitation_->::bgs::protocol::club::v1::ClubInvitation::Clear();
  clear_has_invitation();
}
inline const ::bgs::protocol::club::v1::ClubInvitation& GetInvitationResponse::invitation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationResponse.invitation)
  return invitation_ != NULL ? *invitation_ : *default_instance_->invitation_;
}
inline ::bgs::protocol::club::v1::ClubInvitation* GetInvitationResponse::mutable_invitation() {
  set_has_invitation();
  if (invitation_ == NULL) invitation_ = new ::bgs::protocol::club::v1::ClubInvitation;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetInvitationResponse.invitation)
  return invitation_;
}
inline ::bgs::protocol::club::v1::ClubInvitation* GetInvitationResponse::release_invitation() {
  clear_has_invitation();
  ::bgs::protocol::club::v1::ClubInvitation* temp = invitation_;
  invitation_ = NULL;
  return temp;
}
inline void GetInvitationResponse::set_allocated_invitation(::bgs::protocol::club::v1::ClubInvitation* invitation) {
  delete invitation_;
  invitation_ = invitation;
  if (invitation) {
    set_has_invitation();
  } else {
    clear_has_invitation();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetInvitationResponse.invitation)
}

// -------------------------------------------------------------------

// GetInvitationsRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetInvitationsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInvitationsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInvitationsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInvitationsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetInvitationsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationsRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetInvitationsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetInvitationsRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetInvitationsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetInvitationsRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetInvitationsRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetInvitationsRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInvitationsRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInvitationsRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInvitationsRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetInvitationsRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationsRequest.club_id)
  return club_id_;
}
inline void GetInvitationsRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetInvitationsRequest.club_id)
}

// optional uint64 continuation = 3;
inline bool GetInvitationsRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetInvitationsRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetInvitationsRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetInvitationsRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetInvitationsRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationsRequest.continuation)
  return continuation_;
}
inline void GetInvitationsRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetInvitationsRequest.continuation)
}

// -------------------------------------------------------------------

// GetInvitationsResponse

// repeated .bgs.protocol.club.v1.ClubInvitation invitation = 1;
inline int GetInvitationsResponse::invitation_size() const {
  return invitation_.size();
}
inline void GetInvitationsResponse::clear_invitation() {
  invitation_.Clear();
}
inline const ::bgs::protocol::club::v1::ClubInvitation& GetInvitationsResponse::invitation(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationsResponse.invitation)
  return invitation_.Get(index);
}
inline ::bgs::protocol::club::v1::ClubInvitation* GetInvitationsResponse::mutable_invitation(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetInvitationsResponse.invitation)
  return invitation_.Mutable(index);
}
inline ::bgs::protocol::club::v1::ClubInvitation* GetInvitationsResponse::add_invitation() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetInvitationsResponse.invitation)
  return invitation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubInvitation >&
GetInvitationsResponse::invitation() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetInvitationsResponse.invitation)
  return invitation_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubInvitation >*
GetInvitationsResponse::mutable_invitation() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetInvitationsResponse.invitation)
  return &invitation_;
}

// optional uint64 continuation = 2;
inline bool GetInvitationsResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInvitationsResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInvitationsResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInvitationsResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetInvitationsResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetInvitationsResponse.continuation)
  return continuation_;
}
inline void GetInvitationsResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetInvitationsResponse.continuation)
}

// -------------------------------------------------------------------

// SendSuggestionRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SendSuggestionRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSuggestionRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSuggestionRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSuggestionRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SendSuggestionRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendSuggestionRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SendSuggestionRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SendSuggestionRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SendSuggestionRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SendSuggestionRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SendSuggestionRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SendSuggestionRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendSuggestionRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendSuggestionRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendSuggestionRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SendSuggestionRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendSuggestionRequest.club_id)
  return club_id_;
}
inline void SendSuggestionRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SendSuggestionRequest.club_id)
}

// optional .bgs.protocol.club.v1.SendSuggestionOptions options = 3;
inline bool SendSuggestionRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendSuggestionRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendSuggestionRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendSuggestionRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::SendSuggestionOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::SendSuggestionOptions& SendSuggestionRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SendSuggestionRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::SendSuggestionOptions* SendSuggestionRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::SendSuggestionOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SendSuggestionRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::SendSuggestionOptions* SendSuggestionRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::SendSuggestionOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void SendSuggestionRequest::set_allocated_options(::bgs::protocol::club::v1::SendSuggestionOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SendSuggestionRequest.options)
}

// -------------------------------------------------------------------

// AcceptSuggestionRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AcceptSuggestionRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptSuggestionRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptSuggestionRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptSuggestionRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AcceptSuggestionRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptSuggestionRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AcceptSuggestionRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AcceptSuggestionRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AcceptSuggestionRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AcceptSuggestionRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AcceptSuggestionRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AcceptSuggestionRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptSuggestionRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptSuggestionRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptSuggestionRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AcceptSuggestionRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptSuggestionRequest.club_id)
  return club_id_;
}
inline void AcceptSuggestionRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AcceptSuggestionRequest.club_id)
}

// optional fixed64 suggestion_id = 3;
inline bool AcceptSuggestionRequest::has_suggestion_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptSuggestionRequest::set_has_suggestion_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptSuggestionRequest::clear_has_suggestion_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptSuggestionRequest::clear_suggestion_id() {
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  clear_has_suggestion_id();
}
inline ::google::protobuf::uint64 AcceptSuggestionRequest::suggestion_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AcceptSuggestionRequest.suggestion_id)
  return suggestion_id_;
}
inline void AcceptSuggestionRequest::set_suggestion_id(::google::protobuf::uint64 value) {
  set_has_suggestion_id();
  suggestion_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AcceptSuggestionRequest.suggestion_id)
}

// -------------------------------------------------------------------

// DeclineSuggestionRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DeclineSuggestionRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeclineSuggestionRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeclineSuggestionRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeclineSuggestionRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DeclineSuggestionRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineSuggestionRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DeclineSuggestionRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DeclineSuggestionRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DeclineSuggestionRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DeclineSuggestionRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DeclineSuggestionRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DeclineSuggestionRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeclineSuggestionRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeclineSuggestionRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeclineSuggestionRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DeclineSuggestionRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineSuggestionRequest.club_id)
  return club_id_;
}
inline void DeclineSuggestionRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DeclineSuggestionRequest.club_id)
}

// optional fixed64 suggestion_id = 3;
inline bool DeclineSuggestionRequest::has_suggestion_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeclineSuggestionRequest::set_has_suggestion_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeclineSuggestionRequest::clear_has_suggestion_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeclineSuggestionRequest::clear_suggestion_id() {
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  clear_has_suggestion_id();
}
inline ::google::protobuf::uint64 DeclineSuggestionRequest::suggestion_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DeclineSuggestionRequest.suggestion_id)
  return suggestion_id_;
}
inline void DeclineSuggestionRequest::set_suggestion_id(::google::protobuf::uint64 value) {
  set_has_suggestion_id();
  suggestion_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DeclineSuggestionRequest.suggestion_id)
}

// -------------------------------------------------------------------

// GetSuggestionRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetSuggestionRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetSuggestionRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetSuggestionRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetSuggestionRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetSuggestionRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetSuggestionRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetSuggestionRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetSuggestionRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetSuggestionRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionRequest.club_id)
  return club_id_;
}
inline void GetSuggestionRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetSuggestionRequest.club_id)
}

// optional fixed64 suggestion_id = 3;
inline bool GetSuggestionRequest::has_suggestion_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSuggestionRequest::set_has_suggestion_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSuggestionRequest::clear_has_suggestion_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSuggestionRequest::clear_suggestion_id() {
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  clear_has_suggestion_id();
}
inline ::google::protobuf::uint64 GetSuggestionRequest::suggestion_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionRequest.suggestion_id)
  return suggestion_id_;
}
inline void GetSuggestionRequest::set_suggestion_id(::google::protobuf::uint64 value) {
  set_has_suggestion_id();
  suggestion_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetSuggestionRequest.suggestion_id)
}

// -------------------------------------------------------------------

// GetSuggestionResponse

// optional .bgs.protocol.club.v1.ClubSuggestion suggestion = 1;
inline bool GetSuggestionResponse::has_suggestion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionResponse::set_has_suggestion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionResponse::clear_has_suggestion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionResponse::clear_suggestion() {
  if (suggestion_ != NULL) suggestion_->::bgs::protocol::club::v1::ClubSuggestion::Clear();
  clear_has_suggestion();
}
inline const ::bgs::protocol::club::v1::ClubSuggestion& GetSuggestionResponse::suggestion() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionResponse.suggestion)
  return suggestion_ != NULL ? *suggestion_ : *default_instance_->suggestion_;
}
inline ::bgs::protocol::club::v1::ClubSuggestion* GetSuggestionResponse::mutable_suggestion() {
  set_has_suggestion();
  if (suggestion_ == NULL) suggestion_ = new ::bgs::protocol::club::v1::ClubSuggestion;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetSuggestionResponse.suggestion)
  return suggestion_;
}
inline ::bgs::protocol::club::v1::ClubSuggestion* GetSuggestionResponse::release_suggestion() {
  clear_has_suggestion();
  ::bgs::protocol::club::v1::ClubSuggestion* temp = suggestion_;
  suggestion_ = NULL;
  return temp;
}
inline void GetSuggestionResponse::set_allocated_suggestion(::bgs::protocol::club::v1::ClubSuggestion* suggestion) {
  delete suggestion_;
  suggestion_ = suggestion;
  if (suggestion) {
    set_has_suggestion();
  } else {
    clear_has_suggestion();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetSuggestionResponse.suggestion)
}

// -------------------------------------------------------------------

// GetSuggestionsRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetSuggestionsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetSuggestionsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionsRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetSuggestionsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetSuggestionsRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetSuggestionsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetSuggestionsRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetSuggestionsRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetSuggestionsRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionsRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionsRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionsRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetSuggestionsRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionsRequest.club_id)
  return club_id_;
}
inline void GetSuggestionsRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetSuggestionsRequest.club_id)
}

// optional uint64 continuation = 3;
inline bool GetSuggestionsRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSuggestionsRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSuggestionsRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSuggestionsRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetSuggestionsRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionsRequest.continuation)
  return continuation_;
}
inline void GetSuggestionsRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetSuggestionsRequest.continuation)
}

// -------------------------------------------------------------------

// GetSuggestionsResponse

// repeated .bgs.protocol.club.v1.ClubSuggestion suggestion = 1;
inline int GetSuggestionsResponse::suggestion_size() const {
  return suggestion_.size();
}
inline void GetSuggestionsResponse::clear_suggestion() {
  suggestion_.Clear();
}
inline const ::bgs::protocol::club::v1::ClubSuggestion& GetSuggestionsResponse::suggestion(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionsResponse.suggestion)
  return suggestion_.Get(index);
}
inline ::bgs::protocol::club::v1::ClubSuggestion* GetSuggestionsResponse::mutable_suggestion(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetSuggestionsResponse.suggestion)
  return suggestion_.Mutable(index);
}
inline ::bgs::protocol::club::v1::ClubSuggestion* GetSuggestionsResponse::add_suggestion() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetSuggestionsResponse.suggestion)
  return suggestion_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubSuggestion >&
GetSuggestionsResponse::suggestion() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetSuggestionsResponse.suggestion)
  return suggestion_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubSuggestion >*
GetSuggestionsResponse::mutable_suggestion() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetSuggestionsResponse.suggestion)
  return &suggestion_;
}

// optional uint64 continuation = 2;
inline bool GetSuggestionsResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionsResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionsResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionsResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetSuggestionsResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetSuggestionsResponse.continuation)
  return continuation_;
}
inline void GetSuggestionsResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetSuggestionsResponse.continuation)
}

// -------------------------------------------------------------------

// CreateTicketRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool CreateTicketRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTicketRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTicketRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTicketRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& CreateTicketRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateTicketRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateTicketRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateTicketRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateTicketRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void CreateTicketRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateTicketRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool CreateTicketRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTicketRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTicketRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTicketRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 CreateTicketRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateTicketRequest.club_id)
  return club_id_;
}
inline void CreateTicketRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateTicketRequest.club_id)
}

// optional .bgs.protocol.club.v1.CreateTicketOptions options = 3;
inline bool CreateTicketRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateTicketRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateTicketRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateTicketRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateTicketOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateTicketOptions& CreateTicketRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateTicketRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateTicketOptions* CreateTicketRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateTicketOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateTicketRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateTicketOptions* CreateTicketRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateTicketOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void CreateTicketRequest::set_allocated_options(::bgs::protocol::club::v1::CreateTicketOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateTicketRequest.options)
}

// -------------------------------------------------------------------

// CreateTicketResponse

// optional .bgs.protocol.club.v1.ClubTicket ticket = 1;
inline bool CreateTicketResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTicketResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTicketResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTicketResponse::clear_ticket() {
  if (ticket_ != NULL) ticket_->::bgs::protocol::club::v1::ClubTicket::Clear();
  clear_has_ticket();
}
inline const ::bgs::protocol::club::v1::ClubTicket& CreateTicketResponse::ticket() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateTicketResponse.ticket)
  return ticket_ != NULL ? *ticket_ : *default_instance_->ticket_;
}
inline ::bgs::protocol::club::v1::ClubTicket* CreateTicketResponse::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) ticket_ = new ::bgs::protocol::club::v1::ClubTicket;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateTicketResponse.ticket)
  return ticket_;
}
inline ::bgs::protocol::club::v1::ClubTicket* CreateTicketResponse::release_ticket() {
  clear_has_ticket();
  ::bgs::protocol::club::v1::ClubTicket* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline void CreateTicketResponse::set_allocated_ticket(::bgs::protocol::club::v1::ClubTicket* ticket) {
  delete ticket_;
  ticket_ = ticket;
  if (ticket) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateTicketResponse.ticket)
}

// -------------------------------------------------------------------

// DestroyTicketRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DestroyTicketRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyTicketRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyTicketRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyTicketRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DestroyTicketRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyTicketRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyTicketRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyTicketRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyTicketRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DestroyTicketRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyTicketRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DestroyTicketRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyTicketRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyTicketRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyTicketRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DestroyTicketRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyTicketRequest.club_id)
  return club_id_;
}
inline void DestroyTicketRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyTicketRequest.club_id)
}

// optional string ticket_id = 3;
inline bool DestroyTicketRequest::has_ticket_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestroyTicketRequest::set_has_ticket_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestroyTicketRequest::clear_has_ticket_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestroyTicketRequest::clear_ticket_id() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_->clear();
  }
  clear_has_ticket_id();
}
inline const ::std::string& DestroyTicketRequest::ticket_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
  return *ticket_id_;
}
inline void DestroyTicketRequest::set_ticket_id(const ::std::string& value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
}
inline void DestroyTicketRequest::set_ticket_id(const char* value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
}
inline void DestroyTicketRequest::set_ticket_id(const char* value, size_t size) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
}
inline ::std::string* DestroyTicketRequest::mutable_ticket_id() {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
  return ticket_id_;
}
inline ::std::string* DestroyTicketRequest::release_ticket_id() {
  clear_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ticket_id_;
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DestroyTicketRequest::set_allocated_ticket_id(::std::string* ticket_id) {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (ticket_id) {
    set_has_ticket_id();
    ticket_id_ = ticket_id;
  } else {
    clear_has_ticket_id();
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyTicketRequest.ticket_id)
}

// -------------------------------------------------------------------

// RedeemTicketRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool RedeemTicketRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedeemTicketRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedeemTicketRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedeemTicketRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& RedeemTicketRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RedeemTicketRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RedeemTicketRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.RedeemTicketRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RedeemTicketRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void RedeemTicketRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.RedeemTicketRequest.agent_id)
}

// optional string ticket_id = 3;
inline bool RedeemTicketRequest::has_ticket_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedeemTicketRequest::set_has_ticket_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedeemTicketRequest::clear_has_ticket_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedeemTicketRequest::clear_ticket_id() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_->clear();
  }
  clear_has_ticket_id();
}
inline const ::std::string& RedeemTicketRequest::ticket_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
  return *ticket_id_;
}
inline void RedeemTicketRequest::set_ticket_id(const ::std::string& value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
}
inline void RedeemTicketRequest::set_ticket_id(const char* value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
}
inline void RedeemTicketRequest::set_ticket_id(const char* value, size_t size) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
}
inline ::std::string* RedeemTicketRequest::mutable_ticket_id() {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
  return ticket_id_;
}
inline ::std::string* RedeemTicketRequest::release_ticket_id() {
  clear_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ticket_id_;
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RedeemTicketRequest::set_allocated_ticket_id(::std::string* ticket_id) {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (ticket_id) {
    set_has_ticket_id();
    ticket_id_ = ticket_id;
  } else {
    clear_has_ticket_id();
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.RedeemTicketRequest.ticket_id)
}

// -------------------------------------------------------------------

// GetTicketRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetTicketRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTicketRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTicketRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTicketRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetTicketRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetTicketRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetTicketRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetTicketRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetTicketRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetTicketRequest.agent_id)
}

// optional string ticket_id = 3;
inline bool GetTicketRequest::has_ticket_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTicketRequest::set_has_ticket_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTicketRequest::clear_has_ticket_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTicketRequest::clear_ticket_id() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_->clear();
  }
  clear_has_ticket_id();
}
inline const ::std::string& GetTicketRequest::ticket_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
  return *ticket_id_;
}
inline void GetTicketRequest::set_ticket_id(const ::std::string& value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
}
inline void GetTicketRequest::set_ticket_id(const char* value) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
}
inline void GetTicketRequest::set_ticket_id(const char* value, size_t size) {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  ticket_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
}
inline ::std::string* GetTicketRequest::mutable_ticket_id() {
  set_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ticket_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
  return ticket_id_;
}
inline ::std::string* GetTicketRequest::release_ticket_id() {
  clear_has_ticket_id();
  if (ticket_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ticket_id_;
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetTicketRequest::set_allocated_ticket_id(::std::string* ticket_id) {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (ticket_id) {
    set_has_ticket_id();
    ticket_id_ = ticket_id;
  } else {
    clear_has_ticket_id();
    ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetTicketRequest.ticket_id)
}

// -------------------------------------------------------------------

// GetTicketResponse

// optional .bgs.protocol.club.v1.ClubTicket ticket = 1;
inline bool GetTicketResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTicketResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTicketResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTicketResponse::clear_ticket() {
  if (ticket_ != NULL) ticket_->::bgs::protocol::club::v1::ClubTicket::Clear();
  clear_has_ticket();
}
inline const ::bgs::protocol::club::v1::ClubTicket& GetTicketResponse::ticket() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketResponse.ticket)
  return ticket_ != NULL ? *ticket_ : *default_instance_->ticket_;
}
inline ::bgs::protocol::club::v1::ClubTicket* GetTicketResponse::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) ticket_ = new ::bgs::protocol::club::v1::ClubTicket;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetTicketResponse.ticket)
  return ticket_;
}
inline ::bgs::protocol::club::v1::ClubTicket* GetTicketResponse::release_ticket() {
  clear_has_ticket();
  ::bgs::protocol::club::v1::ClubTicket* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline void GetTicketResponse::set_allocated_ticket(::bgs::protocol::club::v1::ClubTicket* ticket) {
  delete ticket_;
  ticket_ = ticket;
  if (ticket) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetTicketResponse.ticket)
}

// -------------------------------------------------------------------

// GetTicketsRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetTicketsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTicketsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTicketsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTicketsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetTicketsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketsRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetTicketsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetTicketsRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetTicketsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetTicketsRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetTicketsRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetTicketsRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTicketsRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTicketsRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTicketsRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetTicketsRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketsRequest.club_id)
  return club_id_;
}
inline void GetTicketsRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetTicketsRequest.club_id)
}

// optional uint64 continuation = 3;
inline bool GetTicketsRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTicketsRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTicketsRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTicketsRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetTicketsRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketsRequest.continuation)
  return continuation_;
}
inline void GetTicketsRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetTicketsRequest.continuation)
}

// -------------------------------------------------------------------

// GetTicketsResponse

// repeated .bgs.protocol.club.v1.ClubTicket ticket = 1;
inline int GetTicketsResponse::ticket_size() const {
  return ticket_.size();
}
inline void GetTicketsResponse::clear_ticket() {
  ticket_.Clear();
}
inline const ::bgs::protocol::club::v1::ClubTicket& GetTicketsResponse::ticket(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketsResponse.ticket)
  return ticket_.Get(index);
}
inline ::bgs::protocol::club::v1::ClubTicket* GetTicketsResponse::mutable_ticket(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetTicketsResponse.ticket)
  return ticket_.Mutable(index);
}
inline ::bgs::protocol::club::v1::ClubTicket* GetTicketsResponse::add_ticket() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetTicketsResponse.ticket)
  return ticket_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubTicket >&
GetTicketsResponse::ticket() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetTicketsResponse.ticket)
  return ticket_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubTicket >*
GetTicketsResponse::mutable_ticket() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetTicketsResponse.ticket)
  return &ticket_;
}

// optional uint64 continuation = 2;
inline bool GetTicketsResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTicketsResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTicketsResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTicketsResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetTicketsResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetTicketsResponse.continuation)
  return continuation_;
}
inline void GetTicketsResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetTicketsResponse.continuation)
}

// -------------------------------------------------------------------

// AddBanRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AddBanRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBanRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBanRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBanRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AddBanRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddBanRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AddBanRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AddBanRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AddBanRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AddBanRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AddBanRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AddBanRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBanRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBanRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBanRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AddBanRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddBanRequest.club_id)
  return club_id_;
}
inline void AddBanRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AddBanRequest.club_id)
}

// optional .bgs.protocol.club.v1.AddBanOptions options = 3;
inline bool AddBanRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBanRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBanRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBanRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::AddBanOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::AddBanOptions& AddBanRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AddBanRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::AddBanOptions* AddBanRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::AddBanOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AddBanRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::AddBanOptions* AddBanRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::AddBanOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void AddBanRequest::set_allocated_options(::bgs::protocol::club::v1::AddBanOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AddBanRequest.options)
}

// -------------------------------------------------------------------

// RemoveBanRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool RemoveBanRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveBanRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveBanRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveBanRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& RemoveBanRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RemoveBanRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RemoveBanRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.RemoveBanRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RemoveBanRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void RemoveBanRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.RemoveBanRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool RemoveBanRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveBanRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveBanRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveBanRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 RemoveBanRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RemoveBanRequest.club_id)
  return club_id_;
}
inline void RemoveBanRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.RemoveBanRequest.club_id)
}

// optional .bgs.protocol.club.v1.MemberId target_id = 3;
inline bool RemoveBanRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveBanRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveBanRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveBanRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_target_id();
}
inline const ::bgs::protocol::club::v1::MemberId& RemoveBanRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.RemoveBanRequest.target_id)
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RemoveBanRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.RemoveBanRequest.target_id)
  return target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* RemoveBanRequest::release_target_id() {
  clear_has_target_id();
  ::bgs::protocol::club::v1::MemberId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}
inline void RemoveBanRequest::set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id) {
  delete target_id_;
  target_id_ = target_id;
  if (target_id) {
    set_has_target_id();
  } else {
    clear_has_target_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.RemoveBanRequest.target_id)
}

// -------------------------------------------------------------------

// GetBanRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetBanRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBanRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBanRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBanRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetBanRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBanRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBanRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetBanRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBanRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetBanRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetBanRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetBanRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBanRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBanRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBanRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetBanRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBanRequest.club_id)
  return club_id_;
}
inline void GetBanRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetBanRequest.club_id)
}

// optional .bgs.protocol.club.v1.MemberId target_id = 3;
inline bool GetBanRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetBanRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetBanRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetBanRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_target_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetBanRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBanRequest.target_id)
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBanRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetBanRequest.target_id)
  return target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBanRequest::release_target_id() {
  clear_has_target_id();
  ::bgs::protocol::club::v1::MemberId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}
inline void GetBanRequest::set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id) {
  delete target_id_;
  target_id_ = target_id;
  if (target_id) {
    set_has_target_id();
  } else {
    clear_has_target_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetBanRequest.target_id)
}

// -------------------------------------------------------------------

// GetBanResponse

// optional .bgs.protocol.club.v1.ClubBan ban = 1;
inline bool GetBanResponse::has_ban() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBanResponse::set_has_ban() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBanResponse::clear_has_ban() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBanResponse::clear_ban() {
  if (ban_ != NULL) ban_->::bgs::protocol::club::v1::ClubBan::Clear();
  clear_has_ban();
}
inline const ::bgs::protocol::club::v1::ClubBan& GetBanResponse::ban() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBanResponse.ban)
  return ban_ != NULL ? *ban_ : *default_instance_->ban_;
}
inline ::bgs::protocol::club::v1::ClubBan* GetBanResponse::mutable_ban() {
  set_has_ban();
  if (ban_ == NULL) ban_ = new ::bgs::protocol::club::v1::ClubBan;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetBanResponse.ban)
  return ban_;
}
inline ::bgs::protocol::club::v1::ClubBan* GetBanResponse::release_ban() {
  clear_has_ban();
  ::bgs::protocol::club::v1::ClubBan* temp = ban_;
  ban_ = NULL;
  return temp;
}
inline void GetBanResponse::set_allocated_ban(::bgs::protocol::club::v1::ClubBan* ban) {
  delete ban_;
  ban_ = ban;
  if (ban) {
    set_has_ban();
  } else {
    clear_has_ban();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetBanResponse.ban)
}

// -------------------------------------------------------------------

// GetBansRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetBansRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBansRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBansRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBansRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetBansRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBansRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBansRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetBansRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetBansRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetBansRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetBansRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetBansRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBansRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBansRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBansRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetBansRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBansRequest.club_id)
  return club_id_;
}
inline void GetBansRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetBansRequest.club_id)
}

// optional uint64 continuation = 3;
inline bool GetBansRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetBansRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetBansRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetBansRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetBansRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBansRequest.continuation)
  return continuation_;
}
inline void GetBansRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetBansRequest.continuation)
}

// -------------------------------------------------------------------

// GetBansResponse

// repeated .bgs.protocol.club.v1.ClubBan ban = 1;
inline int GetBansResponse::ban_size() const {
  return ban_.size();
}
inline void GetBansResponse::clear_ban() {
  ban_.Clear();
}
inline const ::bgs::protocol::club::v1::ClubBan& GetBansResponse::ban(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBansResponse.ban)
  return ban_.Get(index);
}
inline ::bgs::protocol::club::v1::ClubBan* GetBansResponse::mutable_ban(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetBansResponse.ban)
  return ban_.Mutable(index);
}
inline ::bgs::protocol::club::v1::ClubBan* GetBansResponse::add_ban() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetBansResponse.ban)
  return ban_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubBan >&
GetBansResponse::ban() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetBansResponse.ban)
  return ban_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::ClubBan >*
GetBansResponse::mutable_ban() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetBansResponse.ban)
  return &ban_;
}

// optional uint64 continuation = 2;
inline bool GetBansResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBansResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBansResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBansResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetBansResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetBansResponse.continuation)
  return continuation_;
}
inline void GetBansResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetBansResponse.continuation)
}

// -------------------------------------------------------------------

// SubscribeStreamRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SubscribeStreamRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeStreamRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeStreamRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeStreamRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SubscribeStreamRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SubscribeStreamRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SubscribeStreamRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SubscribeStreamRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SubscribeStreamRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SubscribeStreamRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SubscribeStreamRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SubscribeStreamRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeStreamRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeStreamRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeStreamRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SubscribeStreamRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SubscribeStreamRequest.club_id)
  return club_id_;
}
inline void SubscribeStreamRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SubscribeStreamRequest.club_id)
}

// repeated uint64 stream_id = 3;
inline int SubscribeStreamRequest::stream_id_size() const {
  return stream_id_.size();
}
inline void SubscribeStreamRequest::clear_stream_id() {
  stream_id_.Clear();
}
inline ::google::protobuf::uint64 SubscribeStreamRequest::stream_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SubscribeStreamRequest.stream_id)
  return stream_id_.Get(index);
}
inline void SubscribeStreamRequest::set_stream_id(int index, ::google::protobuf::uint64 value) {
  stream_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SubscribeStreamRequest.stream_id)
}
inline void SubscribeStreamRequest::add_stream_id(::google::protobuf::uint64 value) {
  stream_id_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.SubscribeStreamRequest.stream_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SubscribeStreamRequest::stream_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.SubscribeStreamRequest.stream_id)
  return stream_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SubscribeStreamRequest::mutable_stream_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.SubscribeStreamRequest.stream_id)
  return &stream_id_;
}

// -------------------------------------------------------------------

// UnsubscribeStreamRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UnsubscribeStreamRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeStreamRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeStreamRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeStreamRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UnsubscribeStreamRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnsubscribeStreamRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnsubscribeStreamRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UnsubscribeStreamRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UnsubscribeStreamRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UnsubscribeStreamRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UnsubscribeStreamRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UnsubscribeStreamRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsubscribeStreamRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsubscribeStreamRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsubscribeStreamRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UnsubscribeStreamRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnsubscribeStreamRequest.club_id)
  return club_id_;
}
inline void UnsubscribeStreamRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UnsubscribeStreamRequest.club_id)
}

// repeated uint64 stream_id = 3;
inline int UnsubscribeStreamRequest::stream_id_size() const {
  return stream_id_.size();
}
inline void UnsubscribeStreamRequest::clear_stream_id() {
  stream_id_.Clear();
}
inline ::google::protobuf::uint64 UnsubscribeStreamRequest::stream_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UnsubscribeStreamRequest.stream_id)
  return stream_id_.Get(index);
}
inline void UnsubscribeStreamRequest::set_stream_id(int index, ::google::protobuf::uint64 value) {
  stream_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UnsubscribeStreamRequest.stream_id)
}
inline void UnsubscribeStreamRequest::add_stream_id(::google::protobuf::uint64 value) {
  stream_id_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.UnsubscribeStreamRequest.stream_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UnsubscribeStreamRequest::stream_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.UnsubscribeStreamRequest.stream_id)
  return stream_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UnsubscribeStreamRequest::mutable_stream_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.UnsubscribeStreamRequest.stream_id)
  return &stream_id_;
}

// -------------------------------------------------------------------

// CreateStreamRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool CreateStreamRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateStreamRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateStreamRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateStreamRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& CreateStreamRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateStreamRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateStreamRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateStreamRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateStreamRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void CreateStreamRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateStreamRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool CreateStreamRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateStreamRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateStreamRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateStreamRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 CreateStreamRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateStreamRequest.club_id)
  return club_id_;
}
inline void CreateStreamRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateStreamRequest.club_id)
}

// optional .bgs.protocol.club.v1.CreateStreamOptions options = 3;
inline bool CreateStreamRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateStreamRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateStreamRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateStreamRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateStreamOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateStreamOptions& CreateStreamRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateStreamRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateStreamOptions* CreateStreamRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateStreamOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateStreamRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateStreamOptions* CreateStreamRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateStreamOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void CreateStreamRequest::set_allocated_options(::bgs::protocol::club::v1::CreateStreamOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateStreamRequest.options)
}

// -------------------------------------------------------------------

// CreateStreamResponse

// optional uint64 club_id = 1;
inline bool CreateStreamResponse::has_club_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateStreamResponse::set_has_club_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateStreamResponse::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateStreamResponse::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 CreateStreamResponse::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateStreamResponse.club_id)
  return club_id_;
}
inline void CreateStreamResponse::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateStreamResponse.club_id)
}

// optional uint64 stream_id = 2;
inline bool CreateStreamResponse::has_stream_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateStreamResponse::set_has_stream_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateStreamResponse::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateStreamResponse::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 CreateStreamResponse::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateStreamResponse.stream_id)
  return stream_id_;
}
inline void CreateStreamResponse::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateStreamResponse.stream_id)
}

// -------------------------------------------------------------------

// DestroyStreamRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DestroyStreamRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyStreamRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyStreamRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyStreamRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DestroyStreamRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyStreamRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyStreamRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyStreamRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyStreamRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DestroyStreamRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyStreamRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DestroyStreamRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyStreamRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyStreamRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyStreamRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DestroyStreamRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyStreamRequest.club_id)
  return club_id_;
}
inline void DestroyStreamRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyStreamRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool DestroyStreamRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestroyStreamRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestroyStreamRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestroyStreamRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 DestroyStreamRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyStreamRequest.stream_id)
  return stream_id_;
}
inline void DestroyStreamRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyStreamRequest.stream_id)
}

// -------------------------------------------------------------------

// GetStreamRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetStreamRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetStreamRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetStreamRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetStreamRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetStreamRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamRequest.club_id)
  return club_id_;
}
inline void GetStreamRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool GetStreamRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 GetStreamRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamRequest.stream_id)
  return stream_id_;
}
inline void GetStreamRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamRequest.stream_id)
}

// -------------------------------------------------------------------

// GetStreamResponse

// optional .bgs.protocol.club.v1.Stream stream = 1;
inline bool GetStreamResponse::has_stream() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamResponse::set_has_stream() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamResponse::clear_has_stream() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamResponse::clear_stream() {
  if (stream_ != NULL) stream_->::bgs::protocol::club::v1::Stream::Clear();
  clear_has_stream();
}
inline const ::bgs::protocol::club::v1::Stream& GetStreamResponse::stream() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamResponse.stream)
  return stream_ != NULL ? *stream_ : *default_instance_->stream_;
}
inline ::bgs::protocol::club::v1::Stream* GetStreamResponse::mutable_stream() {
  set_has_stream();
  if (stream_ == NULL) stream_ = new ::bgs::protocol::club::v1::Stream;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamResponse.stream)
  return stream_;
}
inline ::bgs::protocol::club::v1::Stream* GetStreamResponse::release_stream() {
  clear_has_stream();
  ::bgs::protocol::club::v1::Stream* temp = stream_;
  stream_ = NULL;
  return temp;
}
inline void GetStreamResponse::set_allocated_stream(::bgs::protocol::club::v1::Stream* stream) {
  delete stream_;
  stream_ = stream;
  if (stream) {
    set_has_stream();
  } else {
    clear_has_stream();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamResponse.stream)
}

// -------------------------------------------------------------------

// GetStreamsRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetStreamsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetStreamsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamsRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetStreamsRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamsRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetStreamsRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamsRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamsRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamsRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetStreamsRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsRequest.club_id)
  return club_id_;
}
inline void GetStreamsRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamsRequest.club_id)
}

// optional uint64 continuation = 3;
inline bool GetStreamsRequest::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamsRequest::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamsRequest::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamsRequest::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetStreamsRequest::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsRequest.continuation)
  return continuation_;
}
inline void GetStreamsRequest::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamsRequest.continuation)
}

// -------------------------------------------------------------------

// GetStreamsResponse

// repeated .bgs.protocol.club.v1.Stream stream = 1;
inline int GetStreamsResponse::stream_size() const {
  return stream_.size();
}
inline void GetStreamsResponse::clear_stream() {
  stream_.Clear();
}
inline const ::bgs::protocol::club::v1::Stream& GetStreamsResponse::stream(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsResponse.stream)
  return stream_.Get(index);
}
inline ::bgs::protocol::club::v1::Stream* GetStreamsResponse::mutable_stream(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamsResponse.stream)
  return stream_.Mutable(index);
}
inline ::bgs::protocol::club::v1::Stream* GetStreamsResponse::add_stream() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetStreamsResponse.stream)
  return stream_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Stream >&
GetStreamsResponse::stream() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetStreamsResponse.stream)
  return stream_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::Stream >*
GetStreamsResponse::mutable_stream() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetStreamsResponse.stream)
  return &stream_;
}

// repeated .bgs.protocol.club.v1.StreamView view = 2;
inline int GetStreamsResponse::view_size() const {
  return view_.size();
}
inline void GetStreamsResponse::clear_view() {
  view_.Clear();
}
inline const ::bgs::protocol::club::v1::StreamView& GetStreamsResponse::view(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsResponse.view)
  return view_.Get(index);
}
inline ::bgs::protocol::club::v1::StreamView* GetStreamsResponse::mutable_view(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamsResponse.view)
  return view_.Mutable(index);
}
inline ::bgs::protocol::club::v1::StreamView* GetStreamsResponse::add_view() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetStreamsResponse.view)
  return view_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamView >&
GetStreamsResponse::view() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetStreamsResponse.view)
  return view_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamView >*
GetStreamsResponse::mutable_view() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetStreamsResponse.view)
  return &view_;
}

// optional uint64 continuation = 3;
inline bool GetStreamsResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamsResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamsResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamsResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetStreamsResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamsResponse.continuation)
  return continuation_;
}
inline void GetStreamsResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamsResponse.continuation)
}

// -------------------------------------------------------------------

// UpdateStreamStateRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool UpdateStreamStateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateStreamStateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateStreamStateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateStreamStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& UpdateStreamStateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateStreamStateRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateStreamStateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateStreamStateRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* UpdateStreamStateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void UpdateStreamStateRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateStreamStateRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool UpdateStreamStateRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateStreamStateRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateStreamStateRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateStreamStateRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 UpdateStreamStateRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateStreamStateRequest.club_id)
  return club_id_;
}
inline void UpdateStreamStateRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateStreamStateRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool UpdateStreamStateRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateStreamStateRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateStreamStateRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateStreamStateRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 UpdateStreamStateRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateStreamStateRequest.stream_id)
  return stream_id_;
}
inline void UpdateStreamStateRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.UpdateStreamStateRequest.stream_id)
}

// optional .bgs.protocol.club.v1.StreamStateOptions options = 5;
inline bool UpdateStreamStateRequest::has_options() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateStreamStateRequest::set_has_options() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateStreamStateRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateStreamStateRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::StreamStateOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::StreamStateOptions& UpdateStreamStateRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.UpdateStreamStateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::StreamStateOptions* UpdateStreamStateRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::StreamStateOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.UpdateStreamStateRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::StreamStateOptions* UpdateStreamStateRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::StreamStateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateStreamStateRequest::set_allocated_options(::bgs::protocol::club::v1::StreamStateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.UpdateStreamStateRequest.options)
}

// -------------------------------------------------------------------

// SetStreamFocusRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SetStreamFocusRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetStreamFocusRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetStreamFocusRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetStreamFocusRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SetStreamFocusRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetStreamFocusRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetStreamFocusRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SetStreamFocusRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetStreamFocusRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SetStreamFocusRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SetStreamFocusRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SetStreamFocusRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetStreamFocusRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetStreamFocusRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetStreamFocusRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SetStreamFocusRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetStreamFocusRequest.club_id)
  return club_id_;
}
inline void SetStreamFocusRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetStreamFocusRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool SetStreamFocusRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetStreamFocusRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetStreamFocusRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetStreamFocusRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 SetStreamFocusRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetStreamFocusRequest.stream_id)
  return stream_id_;
}
inline void SetStreamFocusRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetStreamFocusRequest.stream_id)
}

// optional bool focus = 4;
inline bool SetStreamFocusRequest::has_focus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetStreamFocusRequest::set_has_focus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetStreamFocusRequest::clear_has_focus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetStreamFocusRequest::clear_focus() {
  focus_ = false;
  clear_has_focus();
}
inline bool SetStreamFocusRequest::focus() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetStreamFocusRequest.focus)
  return focus_;
}
inline void SetStreamFocusRequest::set_focus(bool value) {
  set_has_focus();
  focus_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetStreamFocusRequest.focus)
}

// -------------------------------------------------------------------

// CreateMessageRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool CreateMessageRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateMessageRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateMessageRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateMessageRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& CreateMessageRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateMessageRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateMessageRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateMessageRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* CreateMessageRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void CreateMessageRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateMessageRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool CreateMessageRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateMessageRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateMessageRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateMessageRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 CreateMessageRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateMessageRequest.club_id)
  return club_id_;
}
inline void CreateMessageRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateMessageRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool CreateMessageRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateMessageRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateMessageRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateMessageRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 CreateMessageRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateMessageRequest.stream_id)
  return stream_id_;
}
inline void CreateMessageRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.CreateMessageRequest.stream_id)
}

// optional .bgs.protocol.club.v1.CreateMessageOptions options = 4;
inline bool CreateMessageRequest::has_options() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateMessageRequest::set_has_options() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateMessageRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateMessageRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateMessageOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateMessageOptions& CreateMessageRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateMessageRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateMessageOptions* CreateMessageRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateMessageOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateMessageRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateMessageOptions* CreateMessageRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateMessageOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void CreateMessageRequest::set_allocated_options(::bgs::protocol::club::v1::CreateMessageOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateMessageRequest.options)
}

// -------------------------------------------------------------------

// CreateMessageResponse

// optional .bgs.protocol.club.v1.StreamMessage message = 1;
inline bool CreateMessageResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateMessageResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateMessageResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateMessageResponse::clear_message() {
  if (message_ != NULL) message_->::bgs::protocol::club::v1::StreamMessage::Clear();
  clear_has_message();
}
inline const ::bgs::protocol::club::v1::StreamMessage& CreateMessageResponse::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.CreateMessageResponse.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* CreateMessageResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) message_ = new ::bgs::protocol::club::v1::StreamMessage;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.CreateMessageResponse.message)
  return message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* CreateMessageResponse::release_message() {
  clear_has_message();
  ::bgs::protocol::club::v1::StreamMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void CreateMessageResponse::set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.CreateMessageResponse.message)
}

// -------------------------------------------------------------------

// DestroyMessageRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool DestroyMessageRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyMessageRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyMessageRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyMessageRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& DestroyMessageRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyMessageRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyMessageRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyMessageRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* DestroyMessageRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void DestroyMessageRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyMessageRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool DestroyMessageRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyMessageRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyMessageRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyMessageRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 DestroyMessageRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyMessageRequest.club_id)
  return club_id_;
}
inline void DestroyMessageRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyMessageRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool DestroyMessageRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestroyMessageRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestroyMessageRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestroyMessageRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 DestroyMessageRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyMessageRequest.stream_id)
  return stream_id_;
}
inline void DestroyMessageRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.DestroyMessageRequest.stream_id)
}

// optional .bgs.protocol.MessageId message_id = 4;
inline bool DestroyMessageRequest::has_message_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DestroyMessageRequest::set_has_message_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DestroyMessageRequest::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DestroyMessageRequest::clear_message_id() {
  if (message_id_ != NULL) message_id_->::bgs::protocol::MessageId::Clear();
  clear_has_message_id();
}
inline const ::bgs::protocol::MessageId& DestroyMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyMessageRequest.message_id)
  return message_id_ != NULL ? *message_id_ : *default_instance_->message_id_;
}
inline ::bgs::protocol::MessageId* DestroyMessageRequest::mutable_message_id() {
  set_has_message_id();
  if (message_id_ == NULL) message_id_ = new ::bgs::protocol::MessageId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyMessageRequest.message_id)
  return message_id_;
}
inline ::bgs::protocol::MessageId* DestroyMessageRequest::release_message_id() {
  clear_has_message_id();
  ::bgs::protocol::MessageId* temp = message_id_;
  message_id_ = NULL;
  return temp;
}
inline void DestroyMessageRequest::set_allocated_message_id(::bgs::protocol::MessageId* message_id) {
  delete message_id_;
  message_id_ = message_id;
  if (message_id) {
    set_has_message_id();
  } else {
    clear_has_message_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyMessageRequest.message_id)
}

// -------------------------------------------------------------------

// DestroyMessageResponse

// optional .bgs.protocol.club.v1.StreamMessage message = 1;
inline bool DestroyMessageResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyMessageResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyMessageResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyMessageResponse::clear_message() {
  if (message_ != NULL) message_->::bgs::protocol::club::v1::StreamMessage::Clear();
  clear_has_message();
}
inline const ::bgs::protocol::club::v1::StreamMessage& DestroyMessageResponse::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.DestroyMessageResponse.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* DestroyMessageResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) message_ = new ::bgs::protocol::club::v1::StreamMessage;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.DestroyMessageResponse.message)
  return message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* DestroyMessageResponse::release_message() {
  clear_has_message();
  ::bgs::protocol::club::v1::StreamMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void DestroyMessageResponse::set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.DestroyMessageResponse.message)
}

// -------------------------------------------------------------------

// EditMessageRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool EditMessageRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditMessageRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditMessageRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditMessageRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& EditMessageRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* EditMessageRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.EditMessageRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* EditMessageRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void EditMessageRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.EditMessageRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool EditMessageRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditMessageRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditMessageRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditMessageRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 EditMessageRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageRequest.club_id)
  return club_id_;
}
inline void EditMessageRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.EditMessageRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool EditMessageRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditMessageRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditMessageRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditMessageRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 EditMessageRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageRequest.stream_id)
  return stream_id_;
}
inline void EditMessageRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.EditMessageRequest.stream_id)
}

// optional .bgs.protocol.MessageId message_id = 4;
inline bool EditMessageRequest::has_message_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EditMessageRequest::set_has_message_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EditMessageRequest::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EditMessageRequest::clear_message_id() {
  if (message_id_ != NULL) message_id_->::bgs::protocol::MessageId::Clear();
  clear_has_message_id();
}
inline const ::bgs::protocol::MessageId& EditMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageRequest.message_id)
  return message_id_ != NULL ? *message_id_ : *default_instance_->message_id_;
}
inline ::bgs::protocol::MessageId* EditMessageRequest::mutable_message_id() {
  set_has_message_id();
  if (message_id_ == NULL) message_id_ = new ::bgs::protocol::MessageId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.EditMessageRequest.message_id)
  return message_id_;
}
inline ::bgs::protocol::MessageId* EditMessageRequest::release_message_id() {
  clear_has_message_id();
  ::bgs::protocol::MessageId* temp = message_id_;
  message_id_ = NULL;
  return temp;
}
inline void EditMessageRequest::set_allocated_message_id(::bgs::protocol::MessageId* message_id) {
  delete message_id_;
  message_id_ = message_id;
  if (message_id) {
    set_has_message_id();
  } else {
    clear_has_message_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.EditMessageRequest.message_id)
}

// optional .bgs.protocol.club.v1.CreateMessageOptions options = 5;
inline bool EditMessageRequest::has_options() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EditMessageRequest::set_has_options() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EditMessageRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EditMessageRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::club::v1::CreateMessageOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::club::v1::CreateMessageOptions& EditMessageRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::club::v1::CreateMessageOptions* EditMessageRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::club::v1::CreateMessageOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.EditMessageRequest.options)
  return options_;
}
inline ::bgs::protocol::club::v1::CreateMessageOptions* EditMessageRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::club::v1::CreateMessageOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void EditMessageRequest::set_allocated_options(::bgs::protocol::club::v1::CreateMessageOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.EditMessageRequest.options)
}

// -------------------------------------------------------------------

// EditMessageResponse

// optional .bgs.protocol.club.v1.StreamMessage message = 1;
inline bool EditMessageResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditMessageResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditMessageResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditMessageResponse::clear_message() {
  if (message_ != NULL) message_->::bgs::protocol::club::v1::StreamMessage::Clear();
  clear_has_message();
}
inline const ::bgs::protocol::club::v1::StreamMessage& EditMessageResponse::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.EditMessageResponse.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* EditMessageResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) message_ = new ::bgs::protocol::club::v1::StreamMessage;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.EditMessageResponse.message)
  return message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* EditMessageResponse::release_message() {
  clear_has_message();
  ::bgs::protocol::club::v1::StreamMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void EditMessageResponse::set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.EditMessageResponse.message)
}

// -------------------------------------------------------------------

// SetMessagePinnedRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SetMessagePinnedRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMessagePinnedRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMessagePinnedRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMessagePinnedRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SetMessagePinnedRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetMessagePinnedRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetMessagePinnedRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SetMessagePinnedRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetMessagePinnedRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SetMessagePinnedRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SetMessagePinnedRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SetMessagePinnedRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetMessagePinnedRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetMessagePinnedRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetMessagePinnedRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SetMessagePinnedRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetMessagePinnedRequest.club_id)
  return club_id_;
}
inline void SetMessagePinnedRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetMessagePinnedRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool SetMessagePinnedRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetMessagePinnedRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetMessagePinnedRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetMessagePinnedRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 SetMessagePinnedRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetMessagePinnedRequest.stream_id)
  return stream_id_;
}
inline void SetMessagePinnedRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetMessagePinnedRequest.stream_id)
}

// -------------------------------------------------------------------

// SetTypingIndicatorRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool SetTypingIndicatorRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTypingIndicatorRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTypingIndicatorRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTypingIndicatorRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& SetTypingIndicatorRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetTypingIndicatorRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetTypingIndicatorRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.SetTypingIndicatorRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* SetTypingIndicatorRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void SetTypingIndicatorRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.SetTypingIndicatorRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool SetTypingIndicatorRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTypingIndicatorRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTypingIndicatorRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTypingIndicatorRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 SetTypingIndicatorRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetTypingIndicatorRequest.club_id)
  return club_id_;
}
inline void SetTypingIndicatorRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetTypingIndicatorRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool SetTypingIndicatorRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetTypingIndicatorRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetTypingIndicatorRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetTypingIndicatorRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 SetTypingIndicatorRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetTypingIndicatorRequest.stream_id)
  return stream_id_;
}
inline void SetTypingIndicatorRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetTypingIndicatorRequest.stream_id)
}

// optional .bgs.protocol.TypingIndicator indicator = 4;
inline bool SetTypingIndicatorRequest::has_indicator() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetTypingIndicatorRequest::set_has_indicator() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetTypingIndicatorRequest::clear_has_indicator() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetTypingIndicatorRequest::clear_indicator() {
  indicator_ = 0;
  clear_has_indicator();
}
inline ::bgs::protocol::TypingIndicator SetTypingIndicatorRequest::indicator() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.SetTypingIndicatorRequest.indicator)
  return static_cast< ::bgs::protocol::TypingIndicator >(indicator_);
}
inline void SetTypingIndicatorRequest::set_indicator(::bgs::protocol::TypingIndicator value) {
  assert(::bgs::protocol::TypingIndicator_IsValid(value));
  set_has_indicator();
  indicator_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.SetTypingIndicatorRequest.indicator)
}

// -------------------------------------------------------------------

// AdvanceStreamViewTimeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AdvanceStreamViewTimeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvanceStreamViewTimeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvanceStreamViewTimeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvanceStreamViewTimeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AdvanceStreamViewTimeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceStreamViewTimeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceStreamViewTimeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AdvanceStreamViewTimeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AdvanceStreamViewTimeRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvanceStreamViewTimeRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvanceStreamViewTimeRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvanceStreamViewTimeRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AdvanceStreamViewTimeRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.club_id)
  return club_id_;
}
inline void AdvanceStreamViewTimeRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.club_id)
}

// optional uint64 stream_id_deprecated = 3 [deprecated = true];
inline bool AdvanceStreamViewTimeRequest::has_stream_id_deprecated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdvanceStreamViewTimeRequest::set_has_stream_id_deprecated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdvanceStreamViewTimeRequest::clear_has_stream_id_deprecated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdvanceStreamViewTimeRequest::clear_stream_id_deprecated() {
  stream_id_deprecated_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id_deprecated();
}
inline ::google::protobuf::uint64 AdvanceStreamViewTimeRequest::stream_id_deprecated() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id_deprecated)
  return stream_id_deprecated_;
}
inline void AdvanceStreamViewTimeRequest::set_stream_id_deprecated(::google::protobuf::uint64 value) {
  set_has_stream_id_deprecated();
  stream_id_deprecated_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id_deprecated)
}

// repeated uint64 stream_id = 4 [packed = true];
inline int AdvanceStreamViewTimeRequest::stream_id_size() const {
  return stream_id_.size();
}
inline void AdvanceStreamViewTimeRequest::clear_stream_id() {
  stream_id_.Clear();
}
inline ::google::protobuf::uint64 AdvanceStreamViewTimeRequest::stream_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id)
  return stream_id_.Get(index);
}
inline void AdvanceStreamViewTimeRequest::set_stream_id(int index, ::google::protobuf::uint64 value) {
  stream_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id)
}
inline void AdvanceStreamViewTimeRequest::add_stream_id(::google::protobuf::uint64 value) {
  stream_id_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AdvanceStreamViewTimeRequest::stream_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id)
  return stream_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AdvanceStreamViewTimeRequest::mutable_stream_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.stream_id)
  return &stream_id_;
}

// -------------------------------------------------------------------

// AdvanceStreamMentionViewTimeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AdvanceStreamMentionViewTimeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvanceStreamMentionViewTimeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AdvanceStreamMentionViewTimeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceStreamMentionViewTimeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceStreamMentionViewTimeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AdvanceStreamMentionViewTimeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AdvanceStreamMentionViewTimeRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvanceStreamMentionViewTimeRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AdvanceStreamMentionViewTimeRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.club_id)
  return club_id_;
}
inline void AdvanceStreamMentionViewTimeRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool AdvanceStreamMentionViewTimeRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdvanceStreamMentionViewTimeRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdvanceStreamMentionViewTimeRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 AdvanceStreamMentionViewTimeRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.stream_id)
  return stream_id_;
}
inline void AdvanceStreamMentionViewTimeRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.stream_id)
}

// -------------------------------------------------------------------

// AdvanceActivityViewTimeRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool AdvanceActivityViewTimeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvanceActivityViewTimeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvanceActivityViewTimeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvanceActivityViewTimeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& AdvanceActivityViewTimeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceActivityViewTimeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* AdvanceActivityViewTimeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void AdvanceActivityViewTimeRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool AdvanceActivityViewTimeRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvanceActivityViewTimeRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvanceActivityViewTimeRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvanceActivityViewTimeRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 AdvanceActivityViewTimeRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.club_id)
  return club_id_;
}
inline void AdvanceActivityViewTimeRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.club_id)
}

// -------------------------------------------------------------------

// GetStreamHistoryRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetStreamHistoryRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamHistoryRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamHistoryRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamHistoryRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetStreamHistoryRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamHistoryRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamHistoryRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamHistoryRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetStreamHistoryRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamHistoryRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetStreamHistoryRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamHistoryRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamHistoryRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamHistoryRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetStreamHistoryRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryRequest.club_id)
  return club_id_;
}
inline void GetStreamHistoryRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamHistoryRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool GetStreamHistoryRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamHistoryRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamHistoryRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamHistoryRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 GetStreamHistoryRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryRequest.stream_id)
  return stream_id_;
}
inline void GetStreamHistoryRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamHistoryRequest.stream_id)
}

// optional .bgs.protocol.GetEventOptions options = 4;
inline bool GetStreamHistoryRequest::has_options() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetStreamHistoryRequest::set_has_options() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetStreamHistoryRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetStreamHistoryRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::GetEventOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::GetEventOptions& GetStreamHistoryRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::GetEventOptions* GetStreamHistoryRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::GetEventOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamHistoryRequest.options)
  return options_;
}
inline ::bgs::protocol::GetEventOptions* GetStreamHistoryRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::GetEventOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void GetStreamHistoryRequest::set_allocated_options(::bgs::protocol::GetEventOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamHistoryRequest.options)
}

// -------------------------------------------------------------------

// GetStreamHistoryResponse

// repeated .bgs.protocol.club.v1.StreamMessage message = 1;
inline int GetStreamHistoryResponse::message_size() const {
  return message_.size();
}
inline void GetStreamHistoryResponse::clear_message() {
  message_.Clear();
}
inline const ::bgs::protocol::club::v1::StreamMessage& GetStreamHistoryResponse::message(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryResponse.message)
  return message_.Get(index);
}
inline ::bgs::protocol::club::v1::StreamMessage* GetStreamHistoryResponse::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamHistoryResponse.message)
  return message_.Mutable(index);
}
inline ::bgs::protocol::club::v1::StreamMessage* GetStreamHistoryResponse::add_message() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.GetStreamHistoryResponse.message)
  return message_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamMessage >&
GetStreamHistoryResponse::message() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.GetStreamHistoryResponse.message)
  return message_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::StreamMessage >*
GetStreamHistoryResponse::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.GetStreamHistoryResponse.message)
  return &message_;
}

// optional uint64 continuation = 2;
inline bool GetStreamHistoryResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamHistoryResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamHistoryResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamHistoryResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetStreamHistoryResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamHistoryResponse.continuation)
  return continuation_;
}
inline void GetStreamHistoryResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamHistoryResponse.continuation)
}

// -------------------------------------------------------------------

// GetStreamMessageRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetStreamMessageRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamMessageRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamMessageRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamMessageRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetStreamMessageRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamMessageRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamMessageRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamMessageRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamMessageRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetStreamMessageRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamMessageRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetStreamMessageRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamMessageRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamMessageRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamMessageRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetStreamMessageRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamMessageRequest.club_id)
  return club_id_;
}
inline void GetStreamMessageRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamMessageRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool GetStreamMessageRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamMessageRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamMessageRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamMessageRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 GetStreamMessageRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamMessageRequest.stream_id)
  return stream_id_;
}
inline void GetStreamMessageRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamMessageRequest.stream_id)
}

// optional .bgs.protocol.MessageId message_id = 4;
inline bool GetStreamMessageRequest::has_message_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetStreamMessageRequest::set_has_message_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetStreamMessageRequest::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetStreamMessageRequest::clear_message_id() {
  if (message_id_ != NULL) message_id_->::bgs::protocol::MessageId::Clear();
  clear_has_message_id();
}
inline const ::bgs::protocol::MessageId& GetStreamMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamMessageRequest.message_id)
  return message_id_ != NULL ? *message_id_ : *default_instance_->message_id_;
}
inline ::bgs::protocol::MessageId* GetStreamMessageRequest::mutable_message_id() {
  set_has_message_id();
  if (message_id_ == NULL) message_id_ = new ::bgs::protocol::MessageId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamMessageRequest.message_id)
  return message_id_;
}
inline ::bgs::protocol::MessageId* GetStreamMessageRequest::release_message_id() {
  clear_has_message_id();
  ::bgs::protocol::MessageId* temp = message_id_;
  message_id_ = NULL;
  return temp;
}
inline void GetStreamMessageRequest::set_allocated_message_id(::bgs::protocol::MessageId* message_id) {
  delete message_id_;
  message_id_ = message_id;
  if (message_id) {
    set_has_message_id();
  } else {
    clear_has_message_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamMessageRequest.message_id)
}

// -------------------------------------------------------------------

// GetStreamMessageResponse

// optional .bgs.protocol.club.v1.StreamMessage message = 1;
inline bool GetStreamMessageResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamMessageResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamMessageResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamMessageResponse::clear_message() {
  if (message_ != NULL) message_->::bgs::protocol::club::v1::StreamMessage::Clear();
  clear_has_message();
}
inline const ::bgs::protocol::club::v1::StreamMessage& GetStreamMessageResponse::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamMessageResponse.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* GetStreamMessageResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) message_ = new ::bgs::protocol::club::v1::StreamMessage;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamMessageResponse.message)
  return message_;
}
inline ::bgs::protocol::club::v1::StreamMessage* GetStreamMessageResponse::release_message() {
  clear_has_message();
  ::bgs::protocol::club::v1::StreamMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void GetStreamMessageResponse::set_allocated_message(::bgs::protocol::club::v1::StreamMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamMessageResponse.message)
}

// -------------------------------------------------------------------

// GetClubActivityRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetClubActivityRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClubActivityRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClubActivityRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClubActivityRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetClubActivityRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubActivityRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetClubActivityRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubActivityRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetClubActivityRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetClubActivityRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubActivityRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetClubActivityRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetClubActivityRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetClubActivityRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetClubActivityRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetClubActivityRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubActivityRequest.club_id)
  return club_id_;
}
inline void GetClubActivityRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetClubActivityRequest.club_id)
}

// optional .bgs.protocol.GetEventOptions options = 3;
inline bool GetClubActivityRequest::has_options() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetClubActivityRequest::set_has_options() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetClubActivityRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetClubActivityRequest::clear_options() {
  if (options_ != NULL) options_->::bgs::protocol::GetEventOptions::Clear();
  clear_has_options();
}
inline const ::bgs::protocol::GetEventOptions& GetClubActivityRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubActivityRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::bgs::protocol::GetEventOptions* GetClubActivityRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::bgs::protocol::GetEventOptions;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetClubActivityRequest.options)
  return options_;
}
inline ::bgs::protocol::GetEventOptions* GetClubActivityRequest::release_options() {
  clear_has_options();
  ::bgs::protocol::GetEventOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void GetClubActivityRequest::set_allocated_options(::bgs::protocol::GetEventOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetClubActivityRequest.options)
}

// -------------------------------------------------------------------

// GetClubActivityResponse

// optional uint64 continuation = 2;
inline bool GetClubActivityResponse::has_continuation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClubActivityResponse::set_has_continuation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClubActivityResponse::clear_has_continuation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClubActivityResponse::clear_continuation() {
  continuation_ = GOOGLE_ULONGLONG(0);
  clear_has_continuation();
}
inline ::google::protobuf::uint64 GetClubActivityResponse::continuation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetClubActivityResponse.continuation)
  return continuation_;
}
inline void GetClubActivityResponse::set_continuation(::google::protobuf::uint64 value) {
  set_has_continuation();
  continuation_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetClubActivityResponse.continuation)
}

// -------------------------------------------------------------------

// GetStreamVoiceTokenRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool GetStreamVoiceTokenRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamVoiceTokenRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamVoiceTokenRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamVoiceTokenRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& GetStreamVoiceTokenRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamVoiceTokenRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* GetStreamVoiceTokenRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void GetStreamVoiceTokenRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool GetStreamVoiceTokenRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamVoiceTokenRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamVoiceTokenRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamVoiceTokenRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 GetStreamVoiceTokenRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.club_id)
  return club_id_;
}
inline void GetStreamVoiceTokenRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool GetStreamVoiceTokenRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStreamVoiceTokenRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStreamVoiceTokenRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStreamVoiceTokenRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 GetStreamVoiceTokenRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.stream_id)
  return stream_id_;
}
inline void GetStreamVoiceTokenRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.stream_id)
}

// optional uint32 version = 4;
inline bool GetStreamVoiceTokenRequest::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetStreamVoiceTokenRequest::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetStreamVoiceTokenRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetStreamVoiceTokenRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 GetStreamVoiceTokenRequest::version() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.version)
  return version_;
}
inline void GetStreamVoiceTokenRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamVoiceTokenRequest.version)
}

// -------------------------------------------------------------------

// GetStreamVoiceTokenResponse

// optional string channel_uri = 1;
inline bool GetStreamVoiceTokenResponse::has_channel_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStreamVoiceTokenResponse::set_has_channel_uri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStreamVoiceTokenResponse::clear_has_channel_uri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStreamVoiceTokenResponse::clear_channel_uri() {
  if (channel_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_uri_->clear();
  }
  clear_has_channel_uri();
}
inline const ::std::string& GetStreamVoiceTokenResponse::channel_uri() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
  return *channel_uri_;
}
inline void GetStreamVoiceTokenResponse::set_channel_uri(const ::std::string& value) {
  set_has_channel_uri();
  if (channel_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_uri_ = new ::std::string;
  }
  channel_uri_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
}
inline void GetStreamVoiceTokenResponse::set_channel_uri(const char* value) {
  set_has_channel_uri();
  if (channel_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_uri_ = new ::std::string;
  }
  channel_uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
}
inline void GetStreamVoiceTokenResponse::set_channel_uri(const char* value, size_t size) {
  set_has_channel_uri();
  if (channel_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_uri_ = new ::std::string;
  }
  channel_uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
}
inline ::std::string* GetStreamVoiceTokenResponse::mutable_channel_uri() {
  set_has_channel_uri();
  if (channel_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
  return channel_uri_;
}
inline ::std::string* GetStreamVoiceTokenResponse::release_channel_uri() {
  clear_has_channel_uri();
  if (channel_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_uri_;
    channel_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetStreamVoiceTokenResponse::set_allocated_channel_uri(::std::string* channel_uri) {
  if (channel_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_uri_;
  }
  if (channel_uri) {
    set_has_channel_uri();
    channel_uri_ = channel_uri;
  } else {
    clear_has_channel_uri();
    channel_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.channel_uri)
}

// optional .bgs.protocol.VoiceCredentials credentials = 2;
inline bool GetStreamVoiceTokenResponse::has_credentials() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStreamVoiceTokenResponse::set_has_credentials() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStreamVoiceTokenResponse::clear_has_credentials() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStreamVoiceTokenResponse::clear_credentials() {
  if (credentials_ != NULL) credentials_->::bgs::protocol::VoiceCredentials::Clear();
  clear_has_credentials();
}
inline const ::bgs::protocol::VoiceCredentials& GetStreamVoiceTokenResponse::credentials() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.credentials)
  return credentials_ != NULL ? *credentials_ : *default_instance_->credentials_;
}
inline ::bgs::protocol::VoiceCredentials* GetStreamVoiceTokenResponse::mutable_credentials() {
  set_has_credentials();
  if (credentials_ == NULL) credentials_ = new ::bgs::protocol::VoiceCredentials;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.credentials)
  return credentials_;
}
inline ::bgs::protocol::VoiceCredentials* GetStreamVoiceTokenResponse::release_credentials() {
  clear_has_credentials();
  ::bgs::protocol::VoiceCredentials* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
inline void GetStreamVoiceTokenResponse::set_allocated_credentials(::bgs::protocol::VoiceCredentials* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    set_has_credentials();
  } else {
    clear_has_credentials();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.GetStreamVoiceTokenResponse.credentials)
}

// -------------------------------------------------------------------

// KickFromStreamVoiceRequest

// optional .bgs.protocol.club.v1.MemberId agent_id = 1;
inline bool KickFromStreamVoiceRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickFromStreamVoiceRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickFromStreamVoiceRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickFromStreamVoiceRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_agent_id();
}
inline const ::bgs::protocol::club::v1::MemberId& KickFromStreamVoiceRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickFromStreamVoiceRequest.agent_id)
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickFromStreamVoiceRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.KickFromStreamVoiceRequest.agent_id)
  return agent_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickFromStreamVoiceRequest::release_agent_id() {
  clear_has_agent_id();
  ::bgs::protocol::club::v1::MemberId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}
inline void KickFromStreamVoiceRequest::set_allocated_agent_id(::bgs::protocol::club::v1::MemberId* agent_id) {
  delete agent_id_;
  agent_id_ = agent_id;
  if (agent_id) {
    set_has_agent_id();
  } else {
    clear_has_agent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.KickFromStreamVoiceRequest.agent_id)
}

// optional uint64 club_id = 2;
inline bool KickFromStreamVoiceRequest::has_club_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickFromStreamVoiceRequest::set_has_club_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickFromStreamVoiceRequest::clear_has_club_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickFromStreamVoiceRequest::clear_club_id() {
  club_id_ = GOOGLE_ULONGLONG(0);
  clear_has_club_id();
}
inline ::google::protobuf::uint64 KickFromStreamVoiceRequest::club_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickFromStreamVoiceRequest.club_id)
  return club_id_;
}
inline void KickFromStreamVoiceRequest::set_club_id(::google::protobuf::uint64 value) {
  set_has_club_id();
  club_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.KickFromStreamVoiceRequest.club_id)
}

// optional uint64 stream_id = 3;
inline bool KickFromStreamVoiceRequest::has_stream_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickFromStreamVoiceRequest::set_has_stream_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickFromStreamVoiceRequest::clear_has_stream_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickFromStreamVoiceRequest::clear_stream_id() {
  stream_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stream_id();
}
inline ::google::protobuf::uint64 KickFromStreamVoiceRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickFromStreamVoiceRequest.stream_id)
  return stream_id_;
}
inline void KickFromStreamVoiceRequest::set_stream_id(::google::protobuf::uint64 value) {
  set_has_stream_id();
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.KickFromStreamVoiceRequest.stream_id)
}

// optional .bgs.protocol.club.v1.MemberId target_id = 4;
inline bool KickFromStreamVoiceRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KickFromStreamVoiceRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KickFromStreamVoiceRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KickFromStreamVoiceRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bgs::protocol::club::v1::MemberId::Clear();
  clear_has_target_id();
}
inline const ::bgs::protocol::club::v1::MemberId& KickFromStreamVoiceRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.KickFromStreamVoiceRequest.target_id)
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickFromStreamVoiceRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bgs::protocol::club::v1::MemberId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.KickFromStreamVoiceRequest.target_id)
  return target_id_;
}
inline ::bgs::protocol::club::v1::MemberId* KickFromStreamVoiceRequest::release_target_id() {
  clear_has_target_id();
  ::bgs::protocol::club::v1::MemberId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}
inline void KickFromStreamVoiceRequest::set_allocated_target_id(::bgs::protocol::club::v1::MemberId* target_id) {
  delete target_id_;
  target_id_ = target_id;
  if (target_id) {
    set_has_target_id();
  } else {
    clear_has_target_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.KickFromStreamVoiceRequest.target_id)
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

#ifndef SWIG
namespace google {
namespace protobuf {
}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_club_5frequest_2eproto__INCLUDED
