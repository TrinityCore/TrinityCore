// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_tag.proto

#ifndef PROTOBUF_club_5ftag_2eproto__INCLUDED
#define PROTOBUF_club_5ftag_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "rpc_types.pb.h"
#include "Define.h" // for TC_PROTO_API
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

// Internal implementation detail -- do not call these.
void TC_PROTO_API protobuf_AddDesc_club_5ftag_2eproto();
void protobuf_AssignDesc_club_5ftag_2eproto();
void protobuf_ShutdownFile_club_5ftag_2eproto();

class TagOptions;
class TagIdentifier;
class LocalizedTag;

enum TagAction {
  TAG_ACTION_NONE = 0,
  TAG_ACTION_CLEAR = 1,
  TAG_ACTION_SET = 2
};
TC_PROTO_API bool TagAction_IsValid(int value);
const TagAction TagAction_MIN = TAG_ACTION_NONE;
const TagAction TagAction_MAX = TAG_ACTION_SET;
const int TagAction_ARRAYSIZE = TagAction_MAX + 1;

TC_PROTO_API const ::google::protobuf::EnumDescriptor* TagAction_descriptor();
inline const ::std::string& TagAction_Name(TagAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    TagAction_descriptor(), value);
}
inline bool TagAction_Parse(
    const ::std::string& name, TagAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TagAction>(
    TagAction_descriptor(), name, value);
}
enum TagType {
  TAG_TYPE_INVALID = 0,
  TAG_TYPE_PLATFORM = 1,
  TAG_TYPE_CUSTOM = 2
};
TC_PROTO_API bool TagType_IsValid(int value);
const TagType TagType_MIN = TAG_TYPE_INVALID;
const TagType TagType_MAX = TAG_TYPE_CUSTOM;
const int TagType_ARRAYSIZE = TagType_MAX + 1;

TC_PROTO_API const ::google::protobuf::EnumDescriptor* TagType_descriptor();
inline const ::std::string& TagType_Name(TagType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TagType_descriptor(), value);
}
inline bool TagType_Parse(
    const ::std::string& name, TagType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TagType>(
    TagType_descriptor(), name, value);
}
// ===================================================================

class TC_PROTO_API TagOptions : public ::google::protobuf::Message {
 public:
  TagOptions();
  virtual ~TagOptions();

  TagOptions(const TagOptions& from);

  inline TagOptions& operator=(const TagOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagOptions& default_instance();

  void Swap(TagOptions* other);

  // implements Message ----------------------------------------------

  TagOptions* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);

  // repeated .bgs.protocol.club.v1.TagIdentifier tag = 2;
  inline int tag_size() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::bgs::protocol::club::v1::TagIdentifier& tag(int index) const;
  inline ::bgs::protocol::club::v1::TagIdentifier* mutable_tag(int index);
  inline ::bgs::protocol::club::v1::TagIdentifier* add_tag();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::TagIdentifier >&
      tag() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::TagIdentifier >*
      mutable_tag();

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.TagOptions)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::TagIdentifier > tag_;
  ::google::protobuf::uint32 action_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5ftag_2eproto();
  friend void protobuf_AssignDesc_club_5ftag_2eproto();
  friend void protobuf_ShutdownFile_club_5ftag_2eproto();

  void InitAsDefaultInstance();
  static TagOptions* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API TagIdentifier : public ::google::protobuf::Message {
 public:
  TagIdentifier();
  virtual ~TagIdentifier();

  TagIdentifier(const TagIdentifier& from);

  inline TagIdentifier& operator=(const TagIdentifier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagIdentifier& default_instance();

  void Swap(TagIdentifier* other);

  // implements Message ----------------------------------------------

  TagIdentifier* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.TagIdentifier)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5ftag_2eproto();
  friend void protobuf_AssignDesc_club_5ftag_2eproto();
  friend void protobuf_ShutdownFile_club_5ftag_2eproto();

  void InitAsDefaultInstance();
  static TagIdentifier* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API LocalizedTag : public ::google::protobuf::Message {
 public:
  LocalizedTag();
  virtual ~LocalizedTag();

  LocalizedTag(const LocalizedTag& from);

  inline LocalizedTag& operator=(const LocalizedTag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalizedTag& default_instance();

  void Swap(LocalizedTag* other);

  // implements Message ----------------------------------------------

  LocalizedTag* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bgs.protocol.club.v1.TagIdentifier tag_id = 1;
  inline bool has_tag_id() const;
  inline void clear_tag_id();
  static const int kTagIdFieldNumber = 1;
  inline const ::bgs::protocol::club::v1::TagIdentifier& tag_id() const;
  inline ::bgs::protocol::club::v1::TagIdentifier* mutable_tag_id();
  inline ::bgs::protocol::club::v1::TagIdentifier* release_tag_id();
  inline void set_allocated_tag_id(::bgs::protocol::club::v1::TagIdentifier* tag_id);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.LocalizedTag)
 private:
  inline void set_has_tag_id();
  inline void clear_has_tag_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::club::v1::TagIdentifier* tag_id_;
  ::std::string* name_;
  ::std::string* description_;
  friend void TC_PROTO_API protobuf_AddDesc_club_5ftag_2eproto();
  friend void protobuf_AssignDesc_club_5ftag_2eproto();
  friend void protobuf_ShutdownFile_club_5ftag_2eproto();

  void InitAsDefaultInstance();
  static LocalizedTag* default_instance_;
};
// ===================================================================

// ===================================================================

// ===================================================================

// TagOptions

// optional uint32 action = 1;
inline bool TagOptions::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagOptions::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagOptions::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagOptions::clear_action() {
  action_ = 0u;
  clear_has_action();
}
inline ::google::protobuf::uint32 TagOptions::action() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.TagOptions.action)
  return action_;
}
inline void TagOptions::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.TagOptions.action)
}

// repeated .bgs.protocol.club.v1.TagIdentifier tag = 2;
inline int TagOptions::tag_size() const {
  return tag_.size();
}
inline void TagOptions::clear_tag() {
  tag_.Clear();
}
inline const ::bgs::protocol::club::v1::TagIdentifier& TagOptions::tag(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.TagOptions.tag)
  return tag_.Get(index);
}
inline ::bgs::protocol::club::v1::TagIdentifier* TagOptions::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.TagOptions.tag)
  return tag_.Mutable(index);
}
inline ::bgs::protocol::club::v1::TagIdentifier* TagOptions::add_tag() {
  // @@protoc_insertion_point(field_add:bgs.protocol.club.v1.TagOptions.tag)
  return tag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::TagIdentifier >&
TagOptions::tag() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.club.v1.TagOptions.tag)
  return tag_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::club::v1::TagIdentifier >*
TagOptions::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.club.v1.TagOptions.tag)
  return &tag_;
}

// -------------------------------------------------------------------

// TagIdentifier

// optional uint32 id = 1;
inline bool TagIdentifier::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagIdentifier::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagIdentifier::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagIdentifier::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TagIdentifier::id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.TagIdentifier.id)
  return id_;
}
inline void TagIdentifier::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.TagIdentifier.id)
}

// optional uint32 type = 2;
inline bool TagIdentifier::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagIdentifier::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagIdentifier::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagIdentifier::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TagIdentifier::type() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.TagIdentifier.type)
  return type_;
}
inline void TagIdentifier::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.TagIdentifier.type)
}

// -------------------------------------------------------------------

// LocalizedTag

// optional .bgs.protocol.club.v1.TagIdentifier tag_id = 1;
inline bool LocalizedTag::has_tag_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalizedTag::set_has_tag_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocalizedTag::clear_has_tag_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocalizedTag::clear_tag_id() {
  if (tag_id_ != NULL) tag_id_->::bgs::protocol::club::v1::TagIdentifier::Clear();
  clear_has_tag_id();
}
inline const ::bgs::protocol::club::v1::TagIdentifier& LocalizedTag::tag_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.LocalizedTag.tag_id)
  return tag_id_ != NULL ? *tag_id_ : *default_instance_->tag_id_;
}
inline ::bgs::protocol::club::v1::TagIdentifier* LocalizedTag::mutable_tag_id() {
  set_has_tag_id();
  if (tag_id_ == NULL) tag_id_ = new ::bgs::protocol::club::v1::TagIdentifier;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.LocalizedTag.tag_id)
  return tag_id_;
}
inline ::bgs::protocol::club::v1::TagIdentifier* LocalizedTag::release_tag_id() {
  clear_has_tag_id();
  ::bgs::protocol::club::v1::TagIdentifier* temp = tag_id_;
  tag_id_ = NULL;
  return temp;
}
inline void LocalizedTag::set_allocated_tag_id(::bgs::protocol::club::v1::TagIdentifier* tag_id) {
  delete tag_id_;
  tag_id_ = tag_id;
  if (tag_id) {
    set_has_tag_id();
  } else {
    clear_has_tag_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.LocalizedTag.tag_id)
}

// optional string name = 2;
inline bool LocalizedTag::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocalizedTag::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocalizedTag::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocalizedTag::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LocalizedTag::name() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.LocalizedTag.name)
  return *name_;
}
inline void LocalizedTag::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.LocalizedTag.name)
}
inline void LocalizedTag::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.LocalizedTag.name)
}
inline void LocalizedTag::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.LocalizedTag.name)
}
inline ::std::string* LocalizedTag::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.LocalizedTag.name)
  return name_;
}
inline ::std::string* LocalizedTag::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LocalizedTag::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.LocalizedTag.name)
}

// optional string description = 3;
inline bool LocalizedTag::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocalizedTag::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LocalizedTag::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LocalizedTag::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& LocalizedTag::description() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.LocalizedTag.description)
  return *description_;
}
inline void LocalizedTag::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.LocalizedTag.description)
}
inline void LocalizedTag::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.club.v1.LocalizedTag.description)
}
inline void LocalizedTag::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.club.v1.LocalizedTag.description)
}
inline ::std::string* LocalizedTag::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.LocalizedTag.description)
  return description_;
}
inline ::std::string* LocalizedTag::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LocalizedTag::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.LocalizedTag.description)
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

#ifndef SWIG
namespace google {
namespace protobuf {
template <> struct is_proto_enum< ::bgs::protocol::club::v1::TagAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::club::v1::TagAction>() {
  return ::bgs::protocol::club::v1::TagAction_descriptor();
}
template <> struct is_proto_enum< ::bgs::protocol::club::v1::TagType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::club::v1::TagType>() {
  return ::bgs::protocol::club::v1::TagType_descriptor();
}
}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_club_5ftag_2eproto__INCLUDED
