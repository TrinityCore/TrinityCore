// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voice_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "voice_types.pb.h"

#include <algorithm>
#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "Log.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* VoiceCredentials_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoiceCredentials_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VoiceJoinType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* VoiceMuteReason_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_voice_5ftypes_2eproto() {
  protobuf_AddDesc_voice_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "voice_types.proto");
  GOOGLE_CHECK(file != NULL);
  VoiceCredentials_descriptor_ = file->message_type(0);
  static const int VoiceCredentials_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, voice_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, join_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, mute_reason_),
  };
  VoiceCredentials_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VoiceCredentials_descriptor_,
      VoiceCredentials::default_instance_,
      VoiceCredentials_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCredentials, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VoiceCredentials));
  VoiceJoinType_descriptor_ = file->enum_type(0);
  VoiceMuteReason_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_voice_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VoiceCredentials_descriptor_, &VoiceCredentials::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_voice_5ftypes_2eproto() {
  delete VoiceCredentials::default_instance_;
  delete VoiceCredentials_reflection_;
}

void protobuf_AddDesc_voice_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021voice_types.proto\022\014bgs.protocol\"\244\001\n\020Vo"
    "iceCredentials\022\020\n\010voice_id\030\001 \001(\t\022\r\n\005toke"
    "n\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\022.\n\tjoin_type\030\004 \001(\0162"
    "\033.bgs.protocol.VoiceJoinType\0222\n\013mute_rea"
    "son\030\005 \001(\0162\035.bgs.protocol.VoiceMuteReason"
    "*<\n\rVoiceJoinType\022\025\n\021VOICE_JOIN_NORMAL\020\000"
    "\022\024\n\020VOICE_JOIN_MUTED\020\001*\243\001\n\017VoiceMuteReas"
    "on\022\032\n\026VOICE_MUTE_REASON_NONE\020\000\0222\n.VOICE_"
    "MUTE_REASON_PARENTAL_CONTROL_LISTEN_ONLY"
    "\020\001\022\037\n\033VOICE_MUTE_REASON_REQUESTED\020\002\022\037\n\033V"
    "OICE_MUTE_REASON_SQUELCHED\020\003B\002H\001", 432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "voice_types.proto", &protobuf_RegisterTypes);
  VoiceCredentials::default_instance_ = new VoiceCredentials();
  VoiceCredentials::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_voice_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_voice_5ftypes_2eproto {
  StaticDescriptorInitializer_voice_5ftypes_2eproto() {
    protobuf_AddDesc_voice_5ftypes_2eproto();
  }
} static_descriptor_initializer_voice_5ftypes_2eproto_;
const ::google::protobuf::EnumDescriptor* VoiceJoinType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceJoinType_descriptor_;
}
bool VoiceJoinType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceMuteReason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceMuteReason_descriptor_;
}
bool VoiceMuteReason_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int VoiceCredentials::kVoiceIdFieldNumber;
const int VoiceCredentials::kTokenFieldNumber;
const int VoiceCredentials::kUrlFieldNumber;
const int VoiceCredentials::kJoinTypeFieldNumber;
const int VoiceCredentials::kMuteReasonFieldNumber;
#endif  // !_MSC_VER

VoiceCredentials::VoiceCredentials()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.VoiceCredentials)
}

void VoiceCredentials::InitAsDefaultInstance() {
}

VoiceCredentials::VoiceCredentials(const VoiceCredentials& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.VoiceCredentials)
}

void VoiceCredentials::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  voice_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  join_type_ = 0;
  mute_reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoiceCredentials::~VoiceCredentials() {
  // @@protoc_insertion_point(destructor:bgs.protocol.VoiceCredentials)
  SharedDtor();
}

void VoiceCredentials::SharedDtor() {
  if (voice_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voice_id_;
  }
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void VoiceCredentials::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceCredentials::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceCredentials_descriptor_;
}

const VoiceCredentials& VoiceCredentials::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_voice_5ftypes_2eproto();
  return *default_instance_;
}

VoiceCredentials* VoiceCredentials::default_instance_ = NULL;

VoiceCredentials* VoiceCredentials::New() const {
  return new VoiceCredentials;
}

void VoiceCredentials::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<VoiceCredentials*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(join_type_, mute_reason_);
    if (has_voice_id()) {
      if (voice_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        voice_id_->clear();
      }
    }
    if (has_token()) {
      if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        token_->clear();
      }
    }
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VoiceCredentials::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bgs.protocol.VoiceCredentials)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string voice_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voice_id().data(), this->voice_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "voice_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional string token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // optional string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_join_type;
        break;
      }

      // optional .bgs.protocol.VoiceJoinType join_type = 4;
      case 4: {
        if (tag == 32) {
         parse_join_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bgs::protocol::VoiceJoinType_IsValid(value)) {
            set_join_type(static_cast< ::bgs::protocol::VoiceJoinType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mute_reason;
        break;
      }

      // optional .bgs.protocol.VoiceMuteReason mute_reason = 5;
      case 5: {
        if (tag == 40) {
         parse_mute_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bgs::protocol::VoiceMuteReason_IsValid(value)) {
            set_mute_reason(static_cast< ::bgs::protocol::VoiceMuteReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bgs.protocol.VoiceCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bgs.protocol.VoiceCredentials)
  return false;
#undef DO_
}

void VoiceCredentials::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bgs.protocol.VoiceCredentials)
  // optional string voice_id = 1;
  if (has_voice_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_id().data(), this->voice_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "voice_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->voice_id(), output);
  }

  // optional string token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // optional .bgs.protocol.VoiceJoinType join_type = 4;
  if (has_join_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->join_type(), output);
  }

  // optional .bgs.protocol.VoiceMuteReason mute_reason = 5;
  if (has_mute_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mute_reason(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bgs.protocol.VoiceCredentials)
}

::google::protobuf::uint8* VoiceCredentials::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.VoiceCredentials)
  // optional string voice_id = 1;
  if (has_voice_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_id().data(), this->voice_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "voice_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->voice_id(), target);
  }

  // optional string token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // optional .bgs.protocol.VoiceJoinType join_type = 4;
  if (has_join_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->join_type(), target);
  }

  // optional .bgs.protocol.VoiceMuteReason mute_reason = 5;
  if (has_mute_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mute_reason(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.VoiceCredentials)
  return target;
}

int VoiceCredentials::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string voice_id = 1;
    if (has_voice_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voice_id());
    }

    // optional string token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .bgs.protocol.VoiceJoinType join_type = 4;
    if (has_join_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->join_type());
    }

    // optional .bgs.protocol.VoiceMuteReason mute_reason = 5;
    if (has_mute_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mute_reason());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceCredentials::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VoiceCredentials* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoiceCredentials*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoiceCredentials::MergeFrom(const VoiceCredentials& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_voice_id()) {
      set_voice_id(from.voice_id());
    }
    if (from.has_token()) {
      set_token(from.token());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_join_type()) {
      set_join_type(from.join_type());
    }
    if (from.has_mute_reason()) {
      set_mute_reason(from.mute_reason());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VoiceCredentials::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCredentials::CopyFrom(const VoiceCredentials& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCredentials::IsInitialized() const {

  return true;
}

void VoiceCredentials::Swap(VoiceCredentials* other) {
  if (other != this) {
    std::swap(voice_id_, other->voice_id_);
    std::swap(token_, other->token_);
    std::swap(url_, other->url_);
    std::swap(join_type_, other->join_type_);
    std::swap(mute_reason_, other->mute_reason_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VoiceCredentials::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoiceCredentials_descriptor_;
  metadata.reflection = VoiceCredentials_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
