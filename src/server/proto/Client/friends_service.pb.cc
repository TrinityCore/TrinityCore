// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friends_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "friends_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace friends {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RevokeInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RevokeInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeclineInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeclineInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IgnoreInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IgnoreInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveFriendRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveFriendRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RevokeAllInvitationsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RevokeAllInvitationsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewFriendsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewFriendsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewFriendsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewFriendsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateFriendStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateFriendStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFriendListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFriendListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFriendListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFriendListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateFriendshipRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateFriendshipRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FriendNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateFriendStateNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateFriendStateNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvitationNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvitationNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SentInvitationAddedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SentInvitationAddedNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SentInvitationRemovedNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SentInvitationRemovedNotification_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* FriendsService_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* FriendsListener_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_friends_5fservice_2eproto() {
  protobuf_AddDesc_friends_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "friends_service.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeRequest_descriptor_ = file->message_type(0);
  static const int SubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, object_id_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  UnsubscribeRequest_descriptor_ = file->message_type(1);
  static const int UnsubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, object_id_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  SendInvitationRequest_descriptor_ = file->message_type(2);
  static const int SendInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, agent_identity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, params_),
  };
  SendInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendInvitationRequest_descriptor_,
      SendInvitationRequest::default_instance_,
      SendInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendInvitationRequest));
  RevokeInvitationRequest_descriptor_ = file->message_type(3);
  static const int RevokeInvitationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, invitation_id_),
  };
  RevokeInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RevokeInvitationRequest_descriptor_,
      RevokeInvitationRequest::default_instance_,
      RevokeInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RevokeInvitationRequest));
  AcceptInvitationRequest_descriptor_ = file->message_type(4);
  static const int AcceptInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, invitation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, options_),
  };
  AcceptInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptInvitationRequest_descriptor_,
      AcceptInvitationRequest::default_instance_,
      AcceptInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptInvitationRequest));
  DeclineInvitationRequest_descriptor_ = file->message_type(5);
  static const int DeclineInvitationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, invitation_id_),
  };
  DeclineInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeclineInvitationRequest_descriptor_,
      DeclineInvitationRequest::default_instance_,
      DeclineInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeclineInvitationRequest));
  IgnoreInvitationRequest_descriptor_ = file->message_type(6);
  static const int IgnoreInvitationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreInvitationRequest, invitation_id_),
  };
  IgnoreInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IgnoreInvitationRequest_descriptor_,
      IgnoreInvitationRequest::default_instance_,
      IgnoreInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IgnoreInvitationRequest));
  RemoveFriendRequest_descriptor_ = file->message_type(7);
  static const int RemoveFriendRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFriendRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFriendRequest, target_id_),
  };
  RemoveFriendRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveFriendRequest_descriptor_,
      RemoveFriendRequest::default_instance_,
      RemoveFriendRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFriendRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFriendRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveFriendRequest));
  RevokeAllInvitationsRequest_descriptor_ = file->message_type(8);
  static const int RevokeAllInvitationsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeAllInvitationsRequest, agent_id_),
  };
  RevokeAllInvitationsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RevokeAllInvitationsRequest_descriptor_,
      RevokeAllInvitationsRequest::default_instance_,
      RevokeAllInvitationsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeAllInvitationsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeAllInvitationsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RevokeAllInvitationsRequest));
  ViewFriendsRequest_descriptor_ = file->message_type(9);
  static const int ViewFriendsRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsRequest, target_id_),
  };
  ViewFriendsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewFriendsRequest_descriptor_,
      ViewFriendsRequest::default_instance_,
      ViewFriendsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewFriendsRequest));
  ViewFriendsResponse_descriptor_ = file->message_type(10);
  static const int ViewFriendsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsResponse, friends_),
  };
  ViewFriendsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewFriendsResponse_descriptor_,
      ViewFriendsResponse::default_instance_,
      ViewFriendsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewFriendsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewFriendsResponse));
  UpdateFriendStateRequest_descriptor_ = file->message_type(11);
  static const int UpdateFriendStateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateRequest, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateRequest, attribute_),
  };
  UpdateFriendStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateFriendStateRequest_descriptor_,
      UpdateFriendStateRequest::default_instance_,
      UpdateFriendStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateFriendStateRequest));
  GetFriendListRequest_descriptor_ = file->message_type(12);
  static const int GetFriendListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListRequest, agent_id_),
  };
  GetFriendListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFriendListRequest_descriptor_,
      GetFriendListRequest::default_instance_,
      GetFriendListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFriendListRequest));
  GetFriendListResponse_descriptor_ = file->message_type(13);
  static const int GetFriendListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListResponse, friends_),
  };
  GetFriendListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFriendListResponse_descriptor_,
      GetFriendListResponse::default_instance_,
      GetFriendListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFriendListResponse));
  CreateFriendshipRequest_descriptor_ = file->message_type(14);
  static const int CreateFriendshipRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFriendshipRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFriendshipRequest, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFriendshipRequest, role_),
  };
  CreateFriendshipRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateFriendshipRequest_descriptor_,
      CreateFriendshipRequest::default_instance_,
      CreateFriendshipRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFriendshipRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFriendshipRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateFriendshipRequest));
  FriendNotification_descriptor_ = file->message_type(15);
  static const int FriendNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendNotification, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendNotification, account_id_),
  };
  FriendNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FriendNotification_descriptor_,
      FriendNotification::default_instance_,
      FriendNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FriendNotification));
  UpdateFriendStateNotification_descriptor_ = file->message_type(16);
  static const int UpdateFriendStateNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateNotification, changed_friend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateNotification, account_id_),
  };
  UpdateFriendStateNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateFriendStateNotification_descriptor_,
      UpdateFriendStateNotification::default_instance_,
      UpdateFriendStateNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFriendStateNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateFriendStateNotification));
  InvitationNotification_descriptor_ = file->message_type(17);
  static const int InvitationNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationNotification, invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationNotification, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationNotification, account_id_),
  };
  InvitationNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvitationNotification_descriptor_,
      InvitationNotification::default_instance_,
      InvitationNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvitationNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvitationNotification));
  SentInvitationAddedNotification_descriptor_ = file->message_type(18);
  static const int SentInvitationAddedNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationAddedNotification, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationAddedNotification, invitation_),
  };
  SentInvitationAddedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SentInvitationAddedNotification_descriptor_,
      SentInvitationAddedNotification::default_instance_,
      SentInvitationAddedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationAddedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationAddedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SentInvitationAddedNotification));
  SentInvitationRemovedNotification_descriptor_ = file->message_type(19);
  static const int SentInvitationRemovedNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationRemovedNotification, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationRemovedNotification, invitation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationRemovedNotification, reason_),
  };
  SentInvitationRemovedNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SentInvitationRemovedNotification_descriptor_,
      SentInvitationRemovedNotification::default_instance_,
      SentInvitationRemovedNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationRemovedNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SentInvitationRemovedNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SentInvitationRemovedNotification));
  FriendsService_descriptor_ = file->service(0);
  FriendsListener_descriptor_ = file->service(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_friends_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendInvitationRequest_descriptor_, &SendInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RevokeInvitationRequest_descriptor_, &RevokeInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptInvitationRequest_descriptor_, &AcceptInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeclineInvitationRequest_descriptor_, &DeclineInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IgnoreInvitationRequest_descriptor_, &IgnoreInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveFriendRequest_descriptor_, &RemoveFriendRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RevokeAllInvitationsRequest_descriptor_, &RevokeAllInvitationsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewFriendsRequest_descriptor_, &ViewFriendsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewFriendsResponse_descriptor_, &ViewFriendsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateFriendStateRequest_descriptor_, &UpdateFriendStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFriendListRequest_descriptor_, &GetFriendListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFriendListResponse_descriptor_, &GetFriendListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateFriendshipRequest_descriptor_, &CreateFriendshipRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FriendNotification_descriptor_, &FriendNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateFriendStateNotification_descriptor_, &UpdateFriendStateNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvitationNotification_descriptor_, &InvitationNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SentInvitationAddedNotification_descriptor_, &SentInvitationAddedNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SentInvitationRemovedNotification_descriptor_, &SentInvitationRemovedNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_friends_5fservice_2eproto() {
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete SendInvitationRequest::default_instance_;
  delete SendInvitationRequest_reflection_;
  delete RevokeInvitationRequest::default_instance_;
  delete RevokeInvitationRequest_reflection_;
  delete AcceptInvitationRequest::default_instance_;
  delete AcceptInvitationRequest_reflection_;
  delete DeclineInvitationRequest::default_instance_;
  delete DeclineInvitationRequest_reflection_;
  delete IgnoreInvitationRequest::default_instance_;
  delete IgnoreInvitationRequest_reflection_;
  delete RemoveFriendRequest::default_instance_;
  delete RemoveFriendRequest_reflection_;
  delete RevokeAllInvitationsRequest::default_instance_;
  delete RevokeAllInvitationsRequest_reflection_;
  delete ViewFriendsRequest::default_instance_;
  delete ViewFriendsRequest_reflection_;
  delete ViewFriendsResponse::default_instance_;
  delete ViewFriendsResponse_reflection_;
  delete UpdateFriendStateRequest::default_instance_;
  delete UpdateFriendStateRequest_reflection_;
  delete GetFriendListRequest::default_instance_;
  delete GetFriendListRequest_reflection_;
  delete GetFriendListResponse::default_instance_;
  delete GetFriendListResponse_reflection_;
  delete CreateFriendshipRequest::default_instance_;
  delete CreateFriendshipRequest_reflection_;
  delete FriendNotification::default_instance_;
  delete FriendNotification_reflection_;
  delete UpdateFriendStateNotification::default_instance_;
  delete UpdateFriendStateNotification_reflection_;
  delete InvitationNotification::default_instance_;
  delete InvitationNotification_reflection_;
  delete SentInvitationAddedNotification::default_instance_;
  delete SentInvitationAddedNotification_reflection_;
  delete SentInvitationRemovedNotification::default_instance_;
  delete SentInvitationRemovedNotification_reflection_;
}

void protobuf_AddDesc_friends_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::protobuf_AddDesc_attribute_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::friends::v1::protobuf_AddDesc_friends_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_invitation_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025friends_service.proto\022\027bgs.protocol.fr"
    "iends.v1\032\025attribute_types.proto\032\022entity_"
    "types.proto\032\023friends_types.proto\032\026invita"
    "tion_types.proto\032\017rpc_types.proto\"W\n\020Sub"
    "scribeRequest\0220\n\010agent_id\030\001 \001(\0132\026.bgs.pr"
    "otocol.EntityIdB\006\202\371+\002 \001\022\021\n\tobject_id\030\002 \002"
    "(\004\"Y\n\022UnsubscribeRequest\0220\n\010agent_id\030\001 \001"
    "(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002 \001\022\021\n\tob"
    "ject_id\030\002 \001(\004\"\252\001\n\025SendInvitationRequest\022"
    "6\n\016agent_identity\030\001 \001(\0132\026.bgs.protocol.I"
    "dentityB\006\202\371+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs"
    ".protocol.EntityId\022.\n\006params\030\003 \002(\0132\036.bgs"
    ".protocol.InvitationParams\"b\n\027RevokeInvi"
    "tationRequest\0220\n\010agent_id\030\001 \001(\0132\026.bgs.pr"
    "otocol.EntityIdB\006\202\371+\002 \001\022\025\n\rinvitation_id"
    "\030\002 \001(\006\"\245\001\n\027AcceptInvitationRequest\0220\n\010ag"
    "ent_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371"
    "+\002 \001\022\025\n\rinvitation_id\030\003 \002(\006\022A\n\007options\030\004"
    " \001(\01320.bgs.protocol.friends.v1.AcceptInv"
    "itationOptions\"c\n\030DeclineInvitationReque"
    "st\0220\n\010agent_id\030\001 \001(\0132\026.bgs.protocol.Enti"
    "tyIdB\006\202\371+\002 \001\022\025\n\rinvitation_id\030\003 \002(\006\"b\n\027I"
    "gnoreInvitationRequest\0220\n\010agent_id\030\001 \001(\013"
    "2\026.bgs.protocol.EntityIdB\006\202\371+\002 \001\022\025\n\rinvi"
    "tation_id\030\003 \002(\006\"r\n\023RemoveFriendRequest\0220"
    "\n\010agent_id\030\001 \001(\0132\026.bgs.protocol.EntityId"
    "B\006\202\371+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs.protoc"
    "ol.EntityId\"O\n\033RevokeAllInvitationsReque"
    "st\0220\n\010agent_id\030\002 \001(\0132\026.bgs.protocol.Enti"
    "tyIdB\006\202\371+\002\020\001\"q\n\022ViewFriendsRequest\0220\n\010ag"
    "ent_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371"
    "+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs.protocol.E"
    "ntityId\"O\n\023ViewFriendsResponse\0228\n\007friend"
    "s\030\001 \003(\0132\'.bgs.protocol.friends.v1.Friend"
    "OfFriend\"\243\001\n\030UpdateFriendStateRequest\0220\n"
    "\010agent_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB"
    "\006\202\371+\002 \001\022)\n\ttarget_id\030\002 \002(\0132\026.bgs.protoco"
    "l.EntityId\022*\n\tattribute\030\003 \003(\0132\027.bgs.prot"
    "ocol.Attribute\"H\n\024GetFriendListRequest\0220"
    "\n\010agent_id\030\002 \001(\0132\026.bgs.protocol.EntityId"
    "B\006\202\371+\002\020\001\"I\n\025GetFriendListResponse\0220\n\007fri"
    "ends\030\001 \003(\0132\037.bgs.protocol.friends.v1.Fri"
    "end\"\224\001\n\027CreateFriendshipRequest\0220\n\010agent"
    "_id\030\001 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002\020"
    "\001\022)\n\ttarget_id\030\002 \001(\0132\026.bgs.protocol.Enti"
    "tyId\022\034\n\004role\030\003 \003(\rB\016\020\001\212\371+\010*\006\n\004\010\001\020\001\"q\n\022Fr"
    "iendNotification\022/\n\006target\030\001 \002(\0132\037.bgs.p"
    "rotocol.friends.v1.Friend\022*\n\naccount_id\030"
    "\005 \001(\0132\026.bgs.protocol.EntityId\"\204\001\n\035Update"
    "FriendStateNotification\0227\n\016changed_frien"
    "d\030\001 \002(\0132\037.bgs.protocol.friends.v1.Friend"
    "\022*\n\naccount_id\030\005 \001(\0132\026.bgs.protocol.Enti"
    "tyId\"\230\001\n\026InvitationNotification\022\?\n\ninvit"
    "ation\030\001 \002(\0132+.bgs.protocol.friends.v1.Re"
    "ceivedInvitation\022\021\n\006reason\030\003 \001(\r:\0010\022*\n\na"
    "ccount_id\030\005 \001(\0132\026.bgs.protocol.EntityId\""
    "\212\001\n\037SentInvitationAddedNotification\022*\n\na"
    "ccount_id\030\001 \001(\0132\026.bgs.protocol.EntityId\022"
    ";\n\ninvitation\030\002 \001(\0132\'.bgs.protocol.frien"
    "ds.v1.SentInvitation\"v\n!SentInvitationRe"
    "movedNotification\022*\n\naccount_id\030\001 \001(\0132\026."
    "bgs.protocol.EntityId\022\025\n\rinvitation_id\030\002"
    " \001(\006\022\016\n\006reason\030\003 \001(\r2\230\013\n\016FriendsService\022"
    "l\n\tSubscribe\022).bgs.protocol.friends.v1.S"
    "ubscribeRequest\032*.bgs.protocol.friends.v"
    "1.SubscribeResponse\"\010\202\371+\004\010\001\020\001\022`\n\016SendInv"
    "itation\022..bgs.protocol.friends.v1.SendIn"
    "vitationRequest\032\024.bgs.protocol.NoData\"\010\202"
    "\371+\004\010\002\020\001\022d\n\020AcceptInvitation\0220.bgs.protoc"
    "ol.friends.v1.AcceptInvitationRequest\032\024."
    "bgs.protocol.NoData\"\010\202\371+\004\010\003\020\001\022d\n\020RevokeI"
    "nvitation\0220.bgs.protocol.friends.v1.Revo"
    "keInvitationRequest\032\024.bgs.protocol.NoDat"
    "a\"\010\202\371+\004\010\004\020\001\022i\n\021DeclineInvitation\0221.bgs.p"
    "rotocol.friends.v1.DeclineInvitationRequ"
    "est\032\024.bgs.protocol.NoData\"\013\210\002\001\202\371+\004\010\005\020\001\022d"
    "\n\020IgnoreInvitation\0220.bgs.protocol.friend"
    "s.v1.IgnoreInvitationRequest\032\024.bgs.proto"
    "col.NoData\"\010\202\371+\004\010\006\020\001\022\\\n\014RemoveFriend\022,.b"
    "gs.protocol.friends.v1.RemoveFriendReque"
    "st\032\024.bgs.protocol.NoData\"\010\202\371+\004\010\010\020\001\022r\n\013Vi"
    "ewFriends\022+.bgs.protocol.friends.v1.View"
    "FriendsRequest\032,.bgs.protocol.friends.v1"
    ".ViewFriendsResponse\"\010\202\371+\004\010\t\020\001\022f\n\021Update"
    "FriendState\0221.bgs.protocol.friends.v1.Up"
    "dateFriendStateRequest\032\024.bgs.protocol.No"
    "Data\"\010\202\371+\004\010\n\020\001\022Z\n\013Unsubscribe\022+.bgs.prot"
    "ocol.friends.v1.UnsubscribeRequest\032\024.bgs"
    ".protocol.NoData\"\010\202\371+\004\010\013\020\001\022j\n\024RevokeAllI"
    "nvitations\0224.bgs.protocol.friends.v1.Rev"
    "okeAllInvitationsRequest\032\024.bgs.protocol."
    "NoData\"\006\202\371+\002\010\014\022v\n\rGetFriendList\022-.bgs.pr"
    "otocol.friends.v1.GetFriendListRequest\032."
    ".bgs.protocol.friends.v1.GetFriendListRe"
    "sponse\"\006\202\371+\002\010\r\022b\n\020CreateFriendship\0220.bgs"
    ".protocol.friends.v1.CreateFriendshipReq"
    "uest\032\024.bgs.protocol.NoData\"\006\202\371+\002\010\016\032;\202\371+1"
    "\n$bnet.protocol.friends.FriendsService*\007"
    "friends0\001\212\371+\002\020\0012\314\006\n\017FriendsListener\022_\n\rO"
    "nFriendAdded\022+.bgs.protocol.friends.v1.F"
    "riendNotification\032\031.bgs.protocol.NO_RESP"
    "ONSE\"\006\202\371+\002\010\001\022a\n\017OnFriendRemoved\022+.bgs.pr"
    "otocol.friends.v1.FriendNotification\032\031.b"
    "gs.protocol.NO_RESPONSE\"\006\202\371+\002\010\002\022o\n\031OnRec"
    "eivedInvitationAdded\022/.bgs.protocol.frie"
    "nds.v1.InvitationNotification\032\031.bgs.prot"
    "ocol.NO_RESPONSE\"\006\202\371+\002\010\003\022q\n\033OnReceivedIn"
    "vitationRemoved\022/.bgs.protocol.friends.v"
    "1.InvitationNotification\032\031.bgs.protocol."
    "NO_RESPONSE\"\006\202\371+\002\010\004\022t\n\025OnSentInvitationA"
    "dded\0228.bgs.protocol.friends.v1.SentInvit"
    "ationAddedNotification\032\031.bgs.protocol.NO"
    "_RESPONSE\"\006\202\371+\002\010\005\022x\n\027OnSentInvitationRem"
    "oved\022:.bgs.protocol.friends.v1.SentInvit"
    "ationRemovedNotification\032\031.bgs.protocol."
    "NO_RESPONSE\"\006\202\371+\002\010\006\022p\n\023OnUpdateFriendSta"
    "te\0226.bgs.protocol.friends.v1.UpdateFrien"
    "dStateNotification\032\031.bgs.protocol.NO_RES"
    "PONSE\"\006\202\371+\002\010\007\032/\202\371+%\n#bnet.protocol.frien"
    "ds.FriendsNotify\212\371+\002\010\001B7\n\030bnet.protocol."
    "friends.v1B\023FriendsServiceProtoH\002\200\001\000\210\001\001", 4839);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "friends_service.proto", &protobuf_RegisterTypes);
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  SendInvitationRequest::default_instance_ = new SendInvitationRequest();
  RevokeInvitationRequest::default_instance_ = new RevokeInvitationRequest();
  AcceptInvitationRequest::default_instance_ = new AcceptInvitationRequest();
  DeclineInvitationRequest::default_instance_ = new DeclineInvitationRequest();
  IgnoreInvitationRequest::default_instance_ = new IgnoreInvitationRequest();
  RemoveFriendRequest::default_instance_ = new RemoveFriendRequest();
  RevokeAllInvitationsRequest::default_instance_ = new RevokeAllInvitationsRequest();
  ViewFriendsRequest::default_instance_ = new ViewFriendsRequest();
  ViewFriendsResponse::default_instance_ = new ViewFriendsResponse();
  UpdateFriendStateRequest::default_instance_ = new UpdateFriendStateRequest();
  GetFriendListRequest::default_instance_ = new GetFriendListRequest();
  GetFriendListResponse::default_instance_ = new GetFriendListResponse();
  CreateFriendshipRequest::default_instance_ = new CreateFriendshipRequest();
  FriendNotification::default_instance_ = new FriendNotification();
  UpdateFriendStateNotification::default_instance_ = new UpdateFriendStateNotification();
  InvitationNotification::default_instance_ = new InvitationNotification();
  SentInvitationAddedNotification::default_instance_ = new SentInvitationAddedNotification();
  SentInvitationRemovedNotification::default_instance_ = new SentInvitationRemovedNotification();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  SendInvitationRequest::default_instance_->InitAsDefaultInstance();
  RevokeInvitationRequest::default_instance_->InitAsDefaultInstance();
  AcceptInvitationRequest::default_instance_->InitAsDefaultInstance();
  DeclineInvitationRequest::default_instance_->InitAsDefaultInstance();
  IgnoreInvitationRequest::default_instance_->InitAsDefaultInstance();
  RemoveFriendRequest::default_instance_->InitAsDefaultInstance();
  RevokeAllInvitationsRequest::default_instance_->InitAsDefaultInstance();
  ViewFriendsRequest::default_instance_->InitAsDefaultInstance();
  ViewFriendsResponse::default_instance_->InitAsDefaultInstance();
  UpdateFriendStateRequest::default_instance_->InitAsDefaultInstance();
  GetFriendListRequest::default_instance_->InitAsDefaultInstance();
  GetFriendListResponse::default_instance_->InitAsDefaultInstance();
  CreateFriendshipRequest::default_instance_->InitAsDefaultInstance();
  FriendNotification::default_instance_->InitAsDefaultInstance();
  UpdateFriendStateNotification::default_instance_->InitAsDefaultInstance();
  InvitationNotification::default_instance_->InitAsDefaultInstance();
  SentInvitationAddedNotification::default_instance_->InitAsDefaultInstance();
  SentInvitationRemovedNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_friends_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_friends_5fservice_2eproto {
  StaticDescriptorInitializer_friends_5fservice_2eproto() {
    protobuf_AddDesc_friends_5fservice_2eproto();
  }
} static_descriptor_initializer_friends_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kAgentIdFieldNumber;
const int SubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kAgentIdFieldNumber;
const int UnsubscribeRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  object_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SendInvitationRequest::kAgentIdentityFieldNumber;
const int SendInvitationRequest::kTargetIdFieldNumber;
const int SendInvitationRequest::kParamsFieldNumber;
#endif  // !_MSC_VER

SendInvitationRequest::SendInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.SendInvitationRequest)
}

void SendInvitationRequest::InitAsDefaultInstance() {
  agent_identity_ = const_cast< ::bgs::protocol::Identity*>(&::bgs::protocol::Identity::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  params_ = const_cast< ::bgs::protocol::InvitationParams*>(&::bgs::protocol::InvitationParams::default_instance());
}

SendInvitationRequest::SendInvitationRequest(const SendInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.SendInvitationRequest)
}

void SendInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_identity_ = NULL;
  target_id_ = NULL;
  params_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendInvitationRequest::~SendInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.SendInvitationRequest)
  SharedDtor();
}

void SendInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_identity_;
    delete target_id_;
    delete params_;
  }
}

void SendInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendInvitationRequest_descriptor_;
}

const SendInvitationRequest& SendInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

SendInvitationRequest* SendInvitationRequest::default_instance_ = NULL;

SendInvitationRequest* SendInvitationRequest::New() const {
  return new SendInvitationRequest;
}

void SendInvitationRequest::Swap(SendInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SendInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendInvitationRequest_descriptor_;
  metadata.reflection = SendInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RevokeInvitationRequest::kAgentIdFieldNumber;
const int RevokeInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

RevokeInvitationRequest::RevokeInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.RevokeInvitationRequest)
}

void RevokeInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

RevokeInvitationRequest::RevokeInvitationRequest(const RevokeInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.RevokeInvitationRequest)
}

void RevokeInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RevokeInvitationRequest::~RevokeInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.RevokeInvitationRequest)
  SharedDtor();
}

void RevokeInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void RevokeInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RevokeInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RevokeInvitationRequest_descriptor_;
}

const RevokeInvitationRequest& RevokeInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

RevokeInvitationRequest* RevokeInvitationRequest::default_instance_ = NULL;

RevokeInvitationRequest* RevokeInvitationRequest::New() const {
  return new RevokeInvitationRequest;
}

void RevokeInvitationRequest::Swap(RevokeInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RevokeInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RevokeInvitationRequest_descriptor_;
  metadata.reflection = RevokeInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AcceptInvitationRequest::kAgentIdFieldNumber;
const int AcceptInvitationRequest::kInvitationIdFieldNumber;
const int AcceptInvitationRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

AcceptInvitationRequest::AcceptInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.AcceptInvitationRequest)
}

void AcceptInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  options_ = const_cast< ::bgs::protocol::friends::v1::AcceptInvitationOptions*>(&::bgs::protocol::friends::v1::AcceptInvitationOptions::default_instance());
}

AcceptInvitationRequest::AcceptInvitationRequest(const AcceptInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.AcceptInvitationRequest)
}

void AcceptInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptInvitationRequest::~AcceptInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.AcceptInvitationRequest)
  SharedDtor();
}

void AcceptInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void AcceptInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptInvitationRequest_descriptor_;
}

const AcceptInvitationRequest& AcceptInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

AcceptInvitationRequest* AcceptInvitationRequest::default_instance_ = NULL;

AcceptInvitationRequest* AcceptInvitationRequest::New() const {
  return new AcceptInvitationRequest;
}

void AcceptInvitationRequest::Swap(AcceptInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AcceptInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptInvitationRequest_descriptor_;
  metadata.reflection = AcceptInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DeclineInvitationRequest::kAgentIdFieldNumber;
const int DeclineInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

DeclineInvitationRequest::DeclineInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.DeclineInvitationRequest)
}

void DeclineInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

DeclineInvitationRequest::DeclineInvitationRequest(const DeclineInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.DeclineInvitationRequest)
}

void DeclineInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeclineInvitationRequest::~DeclineInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.DeclineInvitationRequest)
  SharedDtor();
}

void DeclineInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DeclineInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclineInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeclineInvitationRequest_descriptor_;
}

const DeclineInvitationRequest& DeclineInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

DeclineInvitationRequest* DeclineInvitationRequest::default_instance_ = NULL;

DeclineInvitationRequest* DeclineInvitationRequest::New() const {
  return new DeclineInvitationRequest;
}

void DeclineInvitationRequest::Swap(DeclineInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DeclineInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeclineInvitationRequest_descriptor_;
  metadata.reflection = DeclineInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int IgnoreInvitationRequest::kAgentIdFieldNumber;
const int IgnoreInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

IgnoreInvitationRequest::IgnoreInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.IgnoreInvitationRequest)
}

void IgnoreInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

IgnoreInvitationRequest::IgnoreInvitationRequest(const IgnoreInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.IgnoreInvitationRequest)
}

void IgnoreInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IgnoreInvitationRequest::~IgnoreInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.IgnoreInvitationRequest)
  SharedDtor();
}

void IgnoreInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void IgnoreInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IgnoreInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IgnoreInvitationRequest_descriptor_;
}

const IgnoreInvitationRequest& IgnoreInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

IgnoreInvitationRequest* IgnoreInvitationRequest::default_instance_ = NULL;

IgnoreInvitationRequest* IgnoreInvitationRequest::New() const {
  return new IgnoreInvitationRequest;
}

void IgnoreInvitationRequest::Swap(IgnoreInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata IgnoreInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IgnoreInvitationRequest_descriptor_;
  metadata.reflection = IgnoreInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RemoveFriendRequest::kAgentIdFieldNumber;
const int RemoveFriendRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

RemoveFriendRequest::RemoveFriendRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.RemoveFriendRequest)
}

void RemoveFriendRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

RemoveFriendRequest::RemoveFriendRequest(const RemoveFriendRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.RemoveFriendRequest)
}

void RemoveFriendRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveFriendRequest::~RemoveFriendRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.RemoveFriendRequest)
  SharedDtor();
}

void RemoveFriendRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void RemoveFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveFriendRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveFriendRequest_descriptor_;
}

const RemoveFriendRequest& RemoveFriendRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

RemoveFriendRequest* RemoveFriendRequest::default_instance_ = NULL;

RemoveFriendRequest* RemoveFriendRequest::New() const {
  return new RemoveFriendRequest;
}

void RemoveFriendRequest::Swap(RemoveFriendRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RemoveFriendRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveFriendRequest_descriptor_;
  metadata.reflection = RemoveFriendRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RevokeAllInvitationsRequest::kAgentIdFieldNumber;
#endif  // !_MSC_VER

RevokeAllInvitationsRequest::RevokeAllInvitationsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.RevokeAllInvitationsRequest)
}

void RevokeAllInvitationsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

RevokeAllInvitationsRequest::RevokeAllInvitationsRequest(const RevokeAllInvitationsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.RevokeAllInvitationsRequest)
}

void RevokeAllInvitationsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RevokeAllInvitationsRequest::~RevokeAllInvitationsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.RevokeAllInvitationsRequest)
  SharedDtor();
}

void RevokeAllInvitationsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void RevokeAllInvitationsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RevokeAllInvitationsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RevokeAllInvitationsRequest_descriptor_;
}

const RevokeAllInvitationsRequest& RevokeAllInvitationsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

RevokeAllInvitationsRequest* RevokeAllInvitationsRequest::default_instance_ = NULL;

RevokeAllInvitationsRequest* RevokeAllInvitationsRequest::New() const {
  return new RevokeAllInvitationsRequest;
}

void RevokeAllInvitationsRequest::Swap(RevokeAllInvitationsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RevokeAllInvitationsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RevokeAllInvitationsRequest_descriptor_;
  metadata.reflection = RevokeAllInvitationsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ViewFriendsRequest::kAgentIdFieldNumber;
const int ViewFriendsRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

ViewFriendsRequest::ViewFriendsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.ViewFriendsRequest)
}

void ViewFriendsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

ViewFriendsRequest::ViewFriendsRequest(const ViewFriendsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.ViewFriendsRequest)
}

void ViewFriendsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewFriendsRequest::~ViewFriendsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.ViewFriendsRequest)
  SharedDtor();
}

void ViewFriendsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void ViewFriendsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewFriendsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewFriendsRequest_descriptor_;
}

const ViewFriendsRequest& ViewFriendsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

ViewFriendsRequest* ViewFriendsRequest::default_instance_ = NULL;

ViewFriendsRequest* ViewFriendsRequest::New() const {
  return new ViewFriendsRequest;
}

void ViewFriendsRequest::Swap(ViewFriendsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ViewFriendsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewFriendsRequest_descriptor_;
  metadata.reflection = ViewFriendsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ViewFriendsResponse::kFriendsFieldNumber;
#endif  // !_MSC_VER

ViewFriendsResponse::ViewFriendsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.ViewFriendsResponse)
}

void ViewFriendsResponse::InitAsDefaultInstance() {
}

ViewFriendsResponse::ViewFriendsResponse(const ViewFriendsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.ViewFriendsResponse)
}

void ViewFriendsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewFriendsResponse::~ViewFriendsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.ViewFriendsResponse)
  SharedDtor();
}

void ViewFriendsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ViewFriendsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewFriendsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewFriendsResponse_descriptor_;
}

const ViewFriendsResponse& ViewFriendsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

ViewFriendsResponse* ViewFriendsResponse::default_instance_ = NULL;

ViewFriendsResponse* ViewFriendsResponse::New() const {
  return new ViewFriendsResponse;
}

void ViewFriendsResponse::Swap(ViewFriendsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ViewFriendsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewFriendsResponse_descriptor_;
  metadata.reflection = ViewFriendsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateFriendStateRequest::kAgentIdFieldNumber;
const int UpdateFriendStateRequest::kTargetIdFieldNumber;
const int UpdateFriendStateRequest::kAttributeFieldNumber;
#endif  // !_MSC_VER

UpdateFriendStateRequest::UpdateFriendStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.UpdateFriendStateRequest)
}

void UpdateFriendStateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UpdateFriendStateRequest::UpdateFriendStateRequest(const UpdateFriendStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.UpdateFriendStateRequest)
}

void UpdateFriendStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateFriendStateRequest::~UpdateFriendStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.UpdateFriendStateRequest)
  SharedDtor();
}

void UpdateFriendStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void UpdateFriendStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFriendStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateFriendStateRequest_descriptor_;
}

const UpdateFriendStateRequest& UpdateFriendStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

UpdateFriendStateRequest* UpdateFriendStateRequest::default_instance_ = NULL;

UpdateFriendStateRequest* UpdateFriendStateRequest::New() const {
  return new UpdateFriendStateRequest;
}

void UpdateFriendStateRequest::Swap(UpdateFriendStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateFriendStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateFriendStateRequest_descriptor_;
  metadata.reflection = UpdateFriendStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetFriendListRequest::kAgentIdFieldNumber;
#endif  // !_MSC_VER

GetFriendListRequest::GetFriendListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.GetFriendListRequest)
}

void GetFriendListRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetFriendListRequest::GetFriendListRequest(const GetFriendListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.GetFriendListRequest)
}

void GetFriendListRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFriendListRequest::~GetFriendListRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.GetFriendListRequest)
  SharedDtor();
}

void GetFriendListRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetFriendListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFriendListRequest_descriptor_;
}

const GetFriendListRequest& GetFriendListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

GetFriendListRequest* GetFriendListRequest::default_instance_ = NULL;

GetFriendListRequest* GetFriendListRequest::New() const {
  return new GetFriendListRequest;
}

void GetFriendListRequest::Swap(GetFriendListRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetFriendListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFriendListRequest_descriptor_;
  metadata.reflection = GetFriendListRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetFriendListResponse::kFriendsFieldNumber;
#endif  // !_MSC_VER

GetFriendListResponse::GetFriendListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.GetFriendListResponse)
}

void GetFriendListResponse::InitAsDefaultInstance() {
}

GetFriendListResponse::GetFriendListResponse(const GetFriendListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.GetFriendListResponse)
}

void GetFriendListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFriendListResponse::~GetFriendListResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.GetFriendListResponse)
  SharedDtor();
}

void GetFriendListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFriendListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFriendListResponse_descriptor_;
}

const GetFriendListResponse& GetFriendListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

GetFriendListResponse* GetFriendListResponse::default_instance_ = NULL;

GetFriendListResponse* GetFriendListResponse::New() const {
  return new GetFriendListResponse;
}

void GetFriendListResponse::Swap(GetFriendListResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetFriendListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFriendListResponse_descriptor_;
  metadata.reflection = GetFriendListResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateFriendshipRequest::kAgentIdFieldNumber;
const int CreateFriendshipRequest::kTargetIdFieldNumber;
const int CreateFriendshipRequest::kRoleFieldNumber;
#endif  // !_MSC_VER

CreateFriendshipRequest::CreateFriendshipRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.CreateFriendshipRequest)
}

void CreateFriendshipRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

CreateFriendshipRequest::CreateFriendshipRequest(const CreateFriendshipRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.CreateFriendshipRequest)
}

void CreateFriendshipRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateFriendshipRequest::~CreateFriendshipRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.CreateFriendshipRequest)
  SharedDtor();
}

void CreateFriendshipRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void CreateFriendshipRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateFriendshipRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateFriendshipRequest_descriptor_;
}

const CreateFriendshipRequest& CreateFriendshipRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

CreateFriendshipRequest* CreateFriendshipRequest::default_instance_ = NULL;

CreateFriendshipRequest* CreateFriendshipRequest::New() const {
  return new CreateFriendshipRequest;
}

void CreateFriendshipRequest::Swap(CreateFriendshipRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateFriendshipRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateFriendshipRequest_descriptor_;
  metadata.reflection = CreateFriendshipRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int FriendNotification::kTargetFieldNumber;
const int FriendNotification::kAccountIdFieldNumber;
#endif  // !_MSC_VER

FriendNotification::FriendNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.FriendNotification)
}

void FriendNotification::InitAsDefaultInstance() {
  target_ = const_cast< ::bgs::protocol::friends::v1::Friend*>(&::bgs::protocol::friends::v1::Friend::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

FriendNotification::FriendNotification(const FriendNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.FriendNotification)
}

void FriendNotification::SharedCtor() {
  _cached_size_ = 0;
  target_ = NULL;
  account_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FriendNotification::~FriendNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.FriendNotification)
  SharedDtor();
}

void FriendNotification::SharedDtor() {
  if (this != default_instance_) {
    delete target_;
    delete account_id_;
  }
}

void FriendNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendNotification_descriptor_;
}

const FriendNotification& FriendNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

FriendNotification* FriendNotification::default_instance_ = NULL;

FriendNotification* FriendNotification::New() const {
  return new FriendNotification;
}

void FriendNotification::Swap(FriendNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata FriendNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendNotification_descriptor_;
  metadata.reflection = FriendNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateFriendStateNotification::kChangedFriendFieldNumber;
const int UpdateFriendStateNotification::kAccountIdFieldNumber;
#endif  // !_MSC_VER

UpdateFriendStateNotification::UpdateFriendStateNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.UpdateFriendStateNotification)
}

void UpdateFriendStateNotification::InitAsDefaultInstance() {
  changed_friend_ = const_cast< ::bgs::protocol::friends::v1::Friend*>(&::bgs::protocol::friends::v1::Friend::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

UpdateFriendStateNotification::UpdateFriendStateNotification(const UpdateFriendStateNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.UpdateFriendStateNotification)
}

void UpdateFriendStateNotification::SharedCtor() {
  _cached_size_ = 0;
  changed_friend_ = NULL;
  account_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateFriendStateNotification::~UpdateFriendStateNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.UpdateFriendStateNotification)
  SharedDtor();
}

void UpdateFriendStateNotification::SharedDtor() {
  if (this != default_instance_) {
    delete changed_friend_;
    delete account_id_;
  }
}

void UpdateFriendStateNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFriendStateNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateFriendStateNotification_descriptor_;
}

const UpdateFriendStateNotification& UpdateFriendStateNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

UpdateFriendStateNotification* UpdateFriendStateNotification::default_instance_ = NULL;

UpdateFriendStateNotification* UpdateFriendStateNotification::New() const {
  return new UpdateFriendStateNotification;
}

void UpdateFriendStateNotification::Swap(UpdateFriendStateNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateFriendStateNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateFriendStateNotification_descriptor_;
  metadata.reflection = UpdateFriendStateNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int InvitationNotification::kInvitationFieldNumber;
const int InvitationNotification::kReasonFieldNumber;
const int InvitationNotification::kAccountIdFieldNumber;
#endif  // !_MSC_VER

InvitationNotification::InvitationNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.InvitationNotification)
}

void InvitationNotification::InitAsDefaultInstance() {
  invitation_ = const_cast< ::bgs::protocol::friends::v1::ReceivedInvitation*>(&::bgs::protocol::friends::v1::ReceivedInvitation::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

InvitationNotification::InvitationNotification(const InvitationNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.InvitationNotification)
}

void InvitationNotification::SharedCtor() {
  _cached_size_ = 0;
  invitation_ = NULL;
  reason_ = 0u;
  account_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvitationNotification::~InvitationNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.InvitationNotification)
  SharedDtor();
}

void InvitationNotification::SharedDtor() {
  if (this != default_instance_) {
    delete invitation_;
    delete account_id_;
  }
}

void InvitationNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitationNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvitationNotification_descriptor_;
}

const InvitationNotification& InvitationNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

InvitationNotification* InvitationNotification::default_instance_ = NULL;

InvitationNotification* InvitationNotification::New() const {
  return new InvitationNotification;
}

void InvitationNotification::Swap(InvitationNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata InvitationNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvitationNotification_descriptor_;
  metadata.reflection = InvitationNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SentInvitationAddedNotification::kAccountIdFieldNumber;
const int SentInvitationAddedNotification::kInvitationFieldNumber;
#endif  // !_MSC_VER

SentInvitationAddedNotification::SentInvitationAddedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.SentInvitationAddedNotification)
}

void SentInvitationAddedNotification::InitAsDefaultInstance() {
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  invitation_ = const_cast< ::bgs::protocol::friends::v1::SentInvitation*>(&::bgs::protocol::friends::v1::SentInvitation::default_instance());
}

SentInvitationAddedNotification::SentInvitationAddedNotification(const SentInvitationAddedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.SentInvitationAddedNotification)
}

void SentInvitationAddedNotification::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = NULL;
  invitation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SentInvitationAddedNotification::~SentInvitationAddedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.SentInvitationAddedNotification)
  SharedDtor();
}

void SentInvitationAddedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete account_id_;
    delete invitation_;
  }
}

void SentInvitationAddedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SentInvitationAddedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SentInvitationAddedNotification_descriptor_;
}

const SentInvitationAddedNotification& SentInvitationAddedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

SentInvitationAddedNotification* SentInvitationAddedNotification::default_instance_ = NULL;

SentInvitationAddedNotification* SentInvitationAddedNotification::New() const {
  return new SentInvitationAddedNotification;
}

void SentInvitationAddedNotification::Swap(SentInvitationAddedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SentInvitationAddedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SentInvitationAddedNotification_descriptor_;
  metadata.reflection = SentInvitationAddedNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SentInvitationRemovedNotification::kAccountIdFieldNumber;
const int SentInvitationRemovedNotification::kInvitationIdFieldNumber;
const int SentInvitationRemovedNotification::kReasonFieldNumber;
#endif  // !_MSC_VER

SentInvitationRemovedNotification::SentInvitationRemovedNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.friends.v1.SentInvitationRemovedNotification)
}

void SentInvitationRemovedNotification::InitAsDefaultInstance() {
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

SentInvitationRemovedNotification::SentInvitationRemovedNotification(const SentInvitationRemovedNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.friends.v1.SentInvitationRemovedNotification)
}

void SentInvitationRemovedNotification::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = NULL;
  invitation_id_ = GOOGLE_ULONGLONG(0);
  reason_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SentInvitationRemovedNotification::~SentInvitationRemovedNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.friends.v1.SentInvitationRemovedNotification)
  SharedDtor();
}

void SentInvitationRemovedNotification::SharedDtor() {
  if (this != default_instance_) {
    delete account_id_;
  }
}

void SentInvitationRemovedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SentInvitationRemovedNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SentInvitationRemovedNotification_descriptor_;
}

const SentInvitationRemovedNotification& SentInvitationRemovedNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_friends_5fservice_2eproto();
  return *default_instance_;
}

SentInvitationRemovedNotification* SentInvitationRemovedNotification::default_instance_ = NULL;

SentInvitationRemovedNotification* SentInvitationRemovedNotification::New() const {
  return new SentInvitationRemovedNotification;
}

void SentInvitationRemovedNotification::Swap(SentInvitationRemovedNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SentInvitationRemovedNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SentInvitationRemovedNotification_descriptor_;
  metadata.reflection = SentInvitationRemovedNotification_reflection_;
  return metadata;
}

// ===================================================================

FriendsService::FriendsService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

FriendsService::~FriendsService() {
}

google::protobuf::ServiceDescriptor const* FriendsService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendsService_descriptor_;
}

void FriendsService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 1:
      ParseAndHandleSubscribe(token, methodId, buffer);
      break;
    case 2:
      ParseAndHandleSendInvitation(token, methodId, buffer);
      break;
    case 3:
      ParseAndHandleAcceptInvitation(token, methodId, buffer);
      break;
    case 4:
      ParseAndHandleRevokeInvitation(token, methodId, buffer);
      break;
    case 5:
      ParseAndHandleDeclineInvitation(token, methodId, buffer);
      break;
    case 6:
      ParseAndHandleIgnoreInvitation(token, methodId, buffer);
      break;
    case 8:
      ParseAndHandleRemoveFriend(token, methodId, buffer);
      break;
    case 9:
      ParseAndHandleViewFriends(token, methodId, buffer);
      break;
    case 10:
      ParseAndHandleUpdateFriendState(token, methodId, buffer);
      break;
    case 11:
      ParseAndHandleUnsubscribe(token, methodId, buffer);
      break;
    case 12:
      ParseAndHandleRevokeAllInvitations(token, methodId, buffer);
      break;
    case 13:
      ParseAndHandleGetFriendList(token, methodId, buffer);
      break;
    case 14:
      ParseAndHandleCreateFriendship(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 FriendsService::HandleSubscribe(::bgs::protocol::friends::v1::SubscribeRequest const* request, ::bgs::protocol::friends::v1::SubscribeResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.Subscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleSendInvitation(::bgs::protocol::friends::v1::SendInvitationRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.SendInvitation", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleAcceptInvitation(::bgs::protocol::friends::v1::AcceptInvitationRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.AcceptInvitation", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleRevokeInvitation(::bgs::protocol::friends::v1::RevokeInvitationRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.RevokeInvitation", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleDeclineInvitation(::bgs::protocol::friends::v1::DeclineInvitationRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.DeclineInvitation", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleIgnoreInvitation(::bgs::protocol::friends::v1::IgnoreInvitationRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.IgnoreInvitation", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleRemoveFriend(::bgs::protocol::friends::v1::RemoveFriendRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.RemoveFriend", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleViewFriends(::bgs::protocol::friends::v1::ViewFriendsRequest const* request, ::bgs::protocol::friends::v1::ViewFriendsResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.ViewFriends", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleUpdateFriendState(::bgs::protocol::friends::v1::UpdateFriendStateRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.UpdateFriendState", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleUnsubscribe(::bgs::protocol::friends::v1::UnsubscribeRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.Unsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleRevokeAllInvitations(::bgs::protocol::friends::v1::RevokeAllInvitationsRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.RevokeAllInvitations", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleGetFriendList(::bgs::protocol::friends::v1::GetFriendListRequest const* request, ::bgs::protocol::friends::v1::GetFriendListResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.GetFriendList", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 FriendsService::HandleCreateFriendship(::bgs::protocol::friends::v1::CreateFriendshipRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("FriendsService.CreateFriendship", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void FriendsService::ParseAndHandleSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::SubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.Subscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.Subscribe", "bgs.protocol.friends.v1.SubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.Subscribe", ::bgs::protocol::friends::v1::SubscribeResponse::descriptor());
  ::bgs::protocol::friends::v1::SubscribeResponse response;
  uint32 status = HandleSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleSendInvitation(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::SendInvitationRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.SendInvitation");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.SendInvitation", "bgs.protocol.friends.v1.SendInvitationRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.SendInvitation", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleSendInvitation(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleAcceptInvitation(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::AcceptInvitationRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.AcceptInvitation");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.AcceptInvitation", "bgs.protocol.friends.v1.AcceptInvitationRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.AcceptInvitation", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleAcceptInvitation(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleRevokeInvitation(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::RevokeInvitationRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.RevokeInvitation");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.RevokeInvitation", "bgs.protocol.friends.v1.RevokeInvitationRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.RevokeInvitation", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleRevokeInvitation(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleDeclineInvitation(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::DeclineInvitationRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.DeclineInvitation");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.DeclineInvitation", "bgs.protocol.friends.v1.DeclineInvitationRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.DeclineInvitation", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleDeclineInvitation(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleIgnoreInvitation(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::IgnoreInvitationRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.IgnoreInvitation");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.IgnoreInvitation", "bgs.protocol.friends.v1.IgnoreInvitationRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.IgnoreInvitation", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleIgnoreInvitation(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleRemoveFriend(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::RemoveFriendRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.RemoveFriend");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.RemoveFriend", "bgs.protocol.friends.v1.RemoveFriendRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.RemoveFriend", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleRemoveFriend(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleViewFriends(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::ViewFriendsRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.ViewFriends");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.ViewFriends", "bgs.protocol.friends.v1.ViewFriendsRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.ViewFriends", ::bgs::protocol::friends::v1::ViewFriendsResponse::descriptor());
  ::bgs::protocol::friends::v1::ViewFriendsResponse response;
  uint32 status = HandleViewFriends(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleUpdateFriendState(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::UpdateFriendStateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.UpdateFriendState");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.UpdateFriendState", "bgs.protocol.friends.v1.UpdateFriendStateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.UpdateFriendState", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUpdateFriendState(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::UnsubscribeRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.Unsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.Unsubscribe", "bgs.protocol.friends.v1.UnsubscribeRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.Unsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleRevokeAllInvitations(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::RevokeAllInvitationsRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.RevokeAllInvitations");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.RevokeAllInvitations", "bgs.protocol.friends.v1.RevokeAllInvitationsRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.RevokeAllInvitations", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleRevokeAllInvitations(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleGetFriendList(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::GetFriendListRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.GetFriendList");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.GetFriendList", "bgs.protocol.friends.v1.GetFriendListRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.GetFriendList", ::bgs::protocol::friends::v1::GetFriendListResponse::descriptor());
  ::bgs::protocol::friends::v1::GetFriendListResponse response;
  uint32 status = HandleGetFriendList(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void FriendsService::ParseAndHandleCreateFriendship(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::friends::v1::CreateFriendshipRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("FriendsService.CreateFriendship");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("FriendsService.CreateFriendship", "bgs.protocol.friends.v1.CreateFriendshipRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "FriendsService.CreateFriendship", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleCreateFriendship(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

// ===================================================================

FriendsListener::FriendsListener(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

FriendsListener::~FriendsListener() {
}

google::protobuf::ServiceDescriptor const* FriendsListener::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendsListener_descriptor_;
}

void FriendsListener::OnFriendAdded(::bgs::protocol::friends::v1::FriendNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnFriendAdded", "bgs.protocol.friends.v1.FriendNotification", request);
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnFriendRemoved(::bgs::protocol::friends::v1::FriendNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnFriendRemoved", "bgs.protocol.friends.v1.FriendNotification", request);
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnReceivedInvitationAdded(::bgs::protocol::friends::v1::InvitationNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnReceivedInvitationAdded", "bgs.protocol.friends.v1.InvitationNotification", request);
  SendRequest(service_hash_, 3 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnReceivedInvitationRemoved(::bgs::protocol::friends::v1::InvitationNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnReceivedInvitationRemoved", "bgs.protocol.friends.v1.InvitationNotification", request);
  SendRequest(service_hash_, 4 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnSentInvitationAdded(::bgs::protocol::friends::v1::SentInvitationAddedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnSentInvitationAdded", "bgs.protocol.friends.v1.SentInvitationAddedNotification", request);
  SendRequest(service_hash_, 5 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnSentInvitationRemoved(::bgs::protocol::friends::v1::SentInvitationRemovedNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnSentInvitationRemoved", "bgs.protocol.friends.v1.SentInvitationRemovedNotification", request);
  SendRequest(service_hash_, 6 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::OnUpdateFriendState(::bgs::protocol::friends::v1::UpdateFriendStateNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("FriendsListener.OnUpdateFriendState", "bgs.protocol.friends.v1.UpdateFriendStateNotification", request);
  SendRequest(service_hash_, 7 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void FriendsListener::CallServerMethod(uint32 /*token*/, uint32 methodId, MessageBuffer /*buffer*/) {
  LogDisallowedMethod(methodId);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace friends
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
