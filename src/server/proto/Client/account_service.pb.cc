// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "account_service.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include "BattlenetRpcErrorCodes.h"
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace account {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ResolveAccountRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResolveAccountRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResolveAccountResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResolveAccountResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountFlagUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountFlagUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscriptionUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscriptionUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscriptionUpdateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscriptionUpdateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAccountStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAccountStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAccountStateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAccountStateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSignedAccountStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSignedAccountStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSignedAccountStateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSignedAccountStateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameAccountStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameAccountStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameAccountStateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameAccountStateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLicensesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLicensesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLicensesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLicensesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameSessionInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameSessionInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameSessionInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameSessionInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameTimeRemainingInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameTimeRemainingInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameTimeRemainingInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameTimeRemainingInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCAISInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCAISInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCAISInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCAISInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAuthorizedDataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAuthorizedDataRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAuthorizedDataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAuthorizedDataResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountStateNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountStateNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountStateNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountStateNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAccountSessionNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAccountSessionNotification_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* AccountService_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* AccountListener_descriptor_ = NULL;

}  // namespace

void protobuf_AssignDesc_account_5fservice_2eproto() {
  protobuf_AddDesc_account_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "account_service.proto");
  GOOGLE_CHECK(file != NULL);
  ResolveAccountRequest_descriptor_ = file->message_type(0);
  static const int ResolveAccountRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountRequest, ref_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountRequest, fetch_id_),
  };
  ResolveAccountRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResolveAccountRequest_descriptor_,
      ResolveAccountRequest::default_instance_,
      ResolveAccountRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResolveAccountRequest));
  ResolveAccountResponse_descriptor_ = file->message_type(1);
  static const int ResolveAccountResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountResponse, id_),
  };
  ResolveAccountResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResolveAccountResponse_descriptor_,
      ResolveAccountResponse::default_instance_,
      ResolveAccountResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveAccountResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResolveAccountResponse));
  GameAccountFlagUpdateRequest_descriptor_ = file->message_type(2);
  static const int GameAccountFlagUpdateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountFlagUpdateRequest, game_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountFlagUpdateRequest, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountFlagUpdateRequest, active_),
  };
  GameAccountFlagUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountFlagUpdateRequest_descriptor_,
      GameAccountFlagUpdateRequest::default_instance_,
      GameAccountFlagUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountFlagUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountFlagUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountFlagUpdateRequest));
  SubscriptionUpdateRequest_descriptor_ = file->message_type(3);
  static const int SubscriptionUpdateRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateRequest, ref_),
  };
  SubscriptionUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscriptionUpdateRequest_descriptor_,
      SubscriptionUpdateRequest::default_instance_,
      SubscriptionUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscriptionUpdateRequest));
  SubscriptionUpdateResponse_descriptor_ = file->message_type(4);
  static const int SubscriptionUpdateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateResponse, ref_),
  };
  SubscriptionUpdateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscriptionUpdateResponse_descriptor_,
      SubscriptionUpdateResponse::default_instance_,
      SubscriptionUpdateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionUpdateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscriptionUpdateResponse));
  GetAccountStateRequest_descriptor_ = file->message_type(5);
  static const int GetAccountStateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, tags_),
  };
  GetAccountStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAccountStateRequest_descriptor_,
      GetAccountStateRequest::default_instance_,
      GetAccountStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAccountStateRequest));
  GetAccountStateResponse_descriptor_ = file->message_type(6);
  static const int GetAccountStateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateResponse, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateResponse, tags_),
  };
  GetAccountStateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAccountStateResponse_descriptor_,
      GetAccountStateResponse::default_instance_,
      GetAccountStateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccountStateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAccountStateResponse));
  GetSignedAccountStateRequest_descriptor_ = file->message_type(7);
  static const int GetSignedAccountStateRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateRequest, account_),
  };
  GetSignedAccountStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSignedAccountStateRequest_descriptor_,
      GetSignedAccountStateRequest::default_instance_,
      GetSignedAccountStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSignedAccountStateRequest));
  GetSignedAccountStateResponse_descriptor_ = file->message_type(8);
  static const int GetSignedAccountStateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateResponse, token_),
  };
  GetSignedAccountStateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSignedAccountStateResponse_descriptor_,
      GetSignedAccountStateResponse::default_instance_,
      GetSignedAccountStateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignedAccountStateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSignedAccountStateResponse));
  GetGameAccountStateRequest_descriptor_ = file->message_type(9);
  static const int GetGameAccountStateRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, tags_),
  };
  GetGameAccountStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameAccountStateRequest_descriptor_,
      GetGameAccountStateRequest::default_instance_,
      GetGameAccountStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameAccountStateRequest));
  GetGameAccountStateResponse_descriptor_ = file->message_type(10);
  static const int GetGameAccountStateResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateResponse, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateResponse, tags_),
  };
  GetGameAccountStateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameAccountStateResponse_descriptor_,
      GetGameAccountStateResponse::default_instance_,
      GetGameAccountStateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameAccountStateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameAccountStateResponse));
  GetLicensesRequest_descriptor_ = file->message_type(11);
  static const int GetLicensesRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, fetch_account_licenses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, fetch_game_account_licenses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, fetch_dynamic_account_licenses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, exclude_unknown_program_),
  };
  GetLicensesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLicensesRequest_descriptor_,
      GetLicensesRequest::default_instance_,
      GetLicensesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLicensesRequest));
  GetLicensesResponse_descriptor_ = file->message_type(12);
  static const int GetLicensesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesResponse, licenses_),
  };
  GetLicensesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLicensesResponse_descriptor_,
      GetLicensesResponse::default_instance_,
      GetLicensesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLicensesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLicensesResponse));
  GetGameSessionInfoRequest_descriptor_ = file->message_type(13);
  static const int GetGameSessionInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoRequest, entity_id_),
  };
  GetGameSessionInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameSessionInfoRequest_descriptor_,
      GetGameSessionInfoRequest::default_instance_,
      GetGameSessionInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameSessionInfoRequest));
  GetGameSessionInfoResponse_descriptor_ = file->message_type(14);
  static const int GetGameSessionInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoResponse, session_info_),
  };
  GetGameSessionInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameSessionInfoResponse_descriptor_,
      GetGameSessionInfoResponse::default_instance_,
      GetGameSessionInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSessionInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameSessionInfoResponse));
  GetGameTimeRemainingInfoRequest_descriptor_ = file->message_type(15);
  static const int GetGameTimeRemainingInfoRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoRequest, game_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoRequest, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoRequest, benefactor_id_),
  };
  GetGameTimeRemainingInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameTimeRemainingInfoRequest_descriptor_,
      GetGameTimeRemainingInfoRequest::default_instance_,
      GetGameTimeRemainingInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameTimeRemainingInfoRequest));
  GetGameTimeRemainingInfoResponse_descriptor_ = file->message_type(16);
  static const int GetGameTimeRemainingInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoResponse, game_time_remaining_info_),
  };
  GetGameTimeRemainingInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameTimeRemainingInfoResponse_descriptor_,
      GetGameTimeRemainingInfoResponse::default_instance_,
      GetGameTimeRemainingInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameTimeRemainingInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameTimeRemainingInfoResponse));
  GetCAISInfoRequest_descriptor_ = file->message_type(17);
  static const int GetCAISInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoRequest, entity_id_),
  };
  GetCAISInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCAISInfoRequest_descriptor_,
      GetCAISInfoRequest::default_instance_,
      GetCAISInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCAISInfoRequest));
  GetCAISInfoResponse_descriptor_ = file->message_type(18);
  static const int GetCAISInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoResponse, cais_info_),
  };
  GetCAISInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCAISInfoResponse_descriptor_,
      GetCAISInfoResponse::default_instance_,
      GetCAISInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCAISInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCAISInfoResponse));
  GetAuthorizedDataRequest_descriptor_ = file->message_type(19);
  static const int GetAuthorizedDataRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataRequest, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataRequest, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataRequest, privileged_network_),
  };
  GetAuthorizedDataRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAuthorizedDataRequest_descriptor_,
      GetAuthorizedDataRequest::default_instance_,
      GetAuthorizedDataRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAuthorizedDataRequest));
  GetAuthorizedDataResponse_descriptor_ = file->message_type(20);
  static const int GetAuthorizedDataResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataResponse, data_),
  };
  GetAuthorizedDataResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAuthorizedDataResponse_descriptor_,
      GetAuthorizedDataResponse::default_instance_,
      GetAuthorizedDataResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthorizedDataResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAuthorizedDataResponse));
  AccountStateNotification_descriptor_ = file->message_type(21);
  static const int AccountStateNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, account_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, subscriber_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, account_tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, subscription_completed_),
  };
  AccountStateNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccountStateNotification_descriptor_,
      AccountStateNotification::default_instance_,
      AccountStateNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountStateNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccountStateNotification));
  GameAccountStateNotification_descriptor_ = file->message_type(22);
  static const int GameAccountStateNotification_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, game_account_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, subscriber_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, game_account_tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, subscription_completed_),
  };
  GameAccountStateNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountStateNotification_descriptor_,
      GameAccountStateNotification::default_instance_,
      GameAccountStateNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountStateNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountStateNotification));
  GameAccountNotification_descriptor_ = file->message_type(23);
  static const int GameAccountNotification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountNotification, game_accounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountNotification, subscriber_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountNotification, account_tags_),
  };
  GameAccountNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountNotification_descriptor_,
      GameAccountNotification::default_instance_,
      GameAccountNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountNotification));
  GameAccountSessionNotification_descriptor_ = file->message_type(24);
  static const int GameAccountSessionNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountSessionNotification, game_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountSessionNotification, session_info_),
  };
  GameAccountSessionNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAccountSessionNotification_descriptor_,
      GameAccountSessionNotification::default_instance_,
      GameAccountSessionNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountSessionNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAccountSessionNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAccountSessionNotification));
  AccountService_descriptor_ = file->service(0);
  AccountListener_descriptor_ = file->service(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_account_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResolveAccountRequest_descriptor_, &ResolveAccountRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResolveAccountResponse_descriptor_, &ResolveAccountResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountFlagUpdateRequest_descriptor_, &GameAccountFlagUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscriptionUpdateRequest_descriptor_, &SubscriptionUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscriptionUpdateResponse_descriptor_, &SubscriptionUpdateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAccountStateRequest_descriptor_, &GetAccountStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAccountStateResponse_descriptor_, &GetAccountStateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSignedAccountStateRequest_descriptor_, &GetSignedAccountStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSignedAccountStateResponse_descriptor_, &GetSignedAccountStateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameAccountStateRequest_descriptor_, &GetGameAccountStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameAccountStateResponse_descriptor_, &GetGameAccountStateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLicensesRequest_descriptor_, &GetLicensesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLicensesResponse_descriptor_, &GetLicensesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameSessionInfoRequest_descriptor_, &GetGameSessionInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameSessionInfoResponse_descriptor_, &GetGameSessionInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameTimeRemainingInfoRequest_descriptor_, &GetGameTimeRemainingInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameTimeRemainingInfoResponse_descriptor_, &GetGameTimeRemainingInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCAISInfoRequest_descriptor_, &GetCAISInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCAISInfoResponse_descriptor_, &GetCAISInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAuthorizedDataRequest_descriptor_, &GetAuthorizedDataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAuthorizedDataResponse_descriptor_, &GetAuthorizedDataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccountStateNotification_descriptor_, &AccountStateNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountStateNotification_descriptor_, &GameAccountStateNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountNotification_descriptor_, &GameAccountNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAccountSessionNotification_descriptor_, &GameAccountSessionNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_account_5fservice_2eproto() {
  delete ResolveAccountRequest::default_instance_;
  delete ResolveAccountRequest_reflection_;
  delete ResolveAccountResponse::default_instance_;
  delete ResolveAccountResponse_reflection_;
  delete GameAccountFlagUpdateRequest::default_instance_;
  delete GameAccountFlagUpdateRequest_reflection_;
  delete SubscriptionUpdateRequest::default_instance_;
  delete SubscriptionUpdateRequest_reflection_;
  delete SubscriptionUpdateResponse::default_instance_;
  delete SubscriptionUpdateResponse_reflection_;
  delete GetAccountStateRequest::default_instance_;
  delete GetAccountStateRequest_reflection_;
  delete GetAccountStateResponse::default_instance_;
  delete GetAccountStateResponse_reflection_;
  delete GetSignedAccountStateRequest::default_instance_;
  delete GetSignedAccountStateRequest_reflection_;
  delete GetSignedAccountStateResponse::default_instance_;
  delete GetSignedAccountStateResponse_reflection_;
  delete GetGameAccountStateRequest::default_instance_;
  delete GetGameAccountStateRequest_reflection_;
  delete GetGameAccountStateResponse::default_instance_;
  delete GetGameAccountStateResponse_reflection_;
  delete GetLicensesRequest::default_instance_;
  delete GetLicensesRequest_reflection_;
  delete GetLicensesResponse::default_instance_;
  delete GetLicensesResponse_reflection_;
  delete GetGameSessionInfoRequest::default_instance_;
  delete GetGameSessionInfoRequest_reflection_;
  delete GetGameSessionInfoResponse::default_instance_;
  delete GetGameSessionInfoResponse_reflection_;
  delete GetGameTimeRemainingInfoRequest::default_instance_;
  delete GetGameTimeRemainingInfoRequest_reflection_;
  delete GetGameTimeRemainingInfoResponse::default_instance_;
  delete GetGameTimeRemainingInfoResponse_reflection_;
  delete GetCAISInfoRequest::default_instance_;
  delete GetCAISInfoRequest_reflection_;
  delete GetCAISInfoResponse::default_instance_;
  delete GetCAISInfoResponse_reflection_;
  delete GetAuthorizedDataRequest::default_instance_;
  delete GetAuthorizedDataRequest_reflection_;
  delete GetAuthorizedDataResponse::default_instance_;
  delete GetAuthorizedDataResponse_reflection_;
  delete AccountStateNotification::default_instance_;
  delete AccountStateNotification_reflection_;
  delete GameAccountStateNotification::default_instance_;
  delete GameAccountStateNotification_reflection_;
  delete GameAccountNotification::default_instance_;
  delete GameAccountNotification_reflection_;
  delete GameAccountSessionNotification::default_instance_;
  delete GameAccountSessionNotification_reflection_;
}

void protobuf_AddDesc_account_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::account::v1::protobuf_AddDesc_account_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_entity_5ftypes_2eproto();
  ::bgs::protocol::protobuf_AddDesc_rpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025account_service.proto\022\027bgs.protocol.ac"
    "count.v1\032\023account_types.proto\032\022entity_ty"
    "pes.proto\032\017rpc_types.proto\"i\n\025ResolveAcc"
    "ountRequest\022>\n\003ref\030\001 \001(\0132).bgs.protocol."
    "account.v1.AccountReferenceB\006\202\371+\002\020\001\022\020\n\010f"
    "etch_id\030\014 \001(\010\"H\n\026ResolveAccountResponse\022"
    ".\n\002id\030\014 \001(\0132\".bgs.protocol.account.v1.Ac"
    "countId\"~\n\034GameAccountFlagUpdateRequest\022"
    "@\n\014game_account\030\001 \001(\0132*.bgs.protocol.acc"
    "ount.v1.GameAccountHandle\022\014\n\004flag\030\002 \001(\004\022"
    "\016\n\006active\030\003 \001(\010\"V\n\031SubscriptionUpdateReq"
    "uest\0229\n\003ref\030\002 \003(\0132,.bgs.protocol.account"
    ".v1.SubscriberReference\"W\n\032SubscriptionU"
    "pdateResponse\0229\n\003ref\030\001 \003(\0132,.bgs.protoco"
    "l.account.v1.SubscriberReference\"\344\001\n\026Get"
    "AccountStateRequest\0221\n\tentity_id\030\001 \001(\0132\026"
    ".bgs.protocol.EntityIdB\006\202\371+\002\020\001\022\017\n\007progra"
    "m\030\002 \001(\r\022\016\n\006region\030\003 \001(\r\022=\n\007options\030\n \001(\013"
    "2,.bgs.protocol.account.v1.AccountFieldO"
    "ptions\0227\n\004tags\030\013 \001(\0132).bgs.protocol.acco"
    "unt.v1.AccountFieldTags\"\210\001\n\027GetAccountSt"
    "ateResponse\0224\n\005state\030\001 \001(\0132%.bgs.protoco"
    "l.account.v1.AccountState\0227\n\004tags\030\002 \001(\0132"
    ").bgs.protocol.account.v1.AccountFieldTa"
    "gs\"[\n\034GetSignedAccountStateRequest\022;\n\007ac"
    "count\030\001 \001(\0132\".bgs.protocol.account.v1.Ac"
    "countIdB\006\202\371+\002\020\001\".\n\035GetSignedAccountState"
    "Response\022\r\n\005token\030\001 \001(\t\"\205\002\n\032GetGameAccou"
    "ntStateRequest\022.\n\naccount_id\030\001 \001(\0132\026.bgs"
    ".protocol.EntityIdB\002\030\001\0227\n\017game_account_i"
    "d\030\002 \001(\0132\026.bgs.protocol.EntityIdB\006\202\371+\002\020\001\022"
    "A\n\007options\030\n \001(\01320.bgs.protocol.account."
    "v1.GameAccountFieldOptions\022;\n\004tags\030\013 \001(\013"
    "2-.bgs.protocol.account.v1.GameAccountFi"
    "eldTags\"\224\001\n\033GetGameAccountStateResponse\022"
    "8\n\005state\030\001 \001(\0132).bgs.protocol.account.v1"
    ".GameAccountState\022;\n\004tags\030\002 \001(\0132-.bgs.pr"
    "otocol.account.v1.GameAccountFieldTags\"\355"
    "\001\n\022GetLicensesRequest\0221\n\ttarget_id\030\001 \001(\013"
    "2\026.bgs.protocol.EntityIdB\006\202\371+\002\020\001\022\036\n\026fetc"
    "h_account_licenses\030\002 \001(\010\022#\n\033fetch_game_a"
    "ccount_licenses\030\003 \001(\010\022&\n\036fetch_dynamic_a"
    "ccount_licenses\030\004 \001(\010\022\017\n\007program\030\005 \001(\007\022&"
    "\n\027exclude_unknown_program\030\006 \001(\010:\005false\"P"
    "\n\023GetLicensesResponse\0229\n\010licenses\030\001 \003(\0132"
    "\'.bgs.protocol.account.v1.AccountLicense"
    "\"F\n\031GetGameSessionInfoRequest\022)\n\tentity_"
    "id\030\001 \001(\0132\026.bgs.protocol.EntityId\"\\\n\032GetG"
    "ameSessionInfoResponse\022>\n\014session_info\030\002"
    " \001(\0132(.bgs.protocol.account.v1.GameSessi"
    "onInfo\"\225\001\n\037GetGameTimeRemainingInfoReque"
    "st\022/\n\017game_account_id\030\001 \001(\0132\026.bgs.protoc"
    "ol.EntityId\022*\n\naccount_id\030\002 \001(\0132\026.bgs.pr"
    "otocol.EntityId\022\025\n\rbenefactor_id\030\003 \001(\t\"t"
    "\n GetGameTimeRemainingInfoResponse\022P\n\030ga"
    "me_time_remaining_info\030\001 \001(\0132..bgs.proto"
    "col.account.v1.GameTimeRemainingInfo\"G\n\022"
    "GetCAISInfoRequest\0221\n\tentity_id\030\001 \001(\0132\026."
    "bgs.protocol.EntityIdB\006\202\371+\002\020\001\"G\n\023GetCAIS"
    "InfoResponse\0220\n\tcais_info\030\001 \001(\0132\035.bgs.pr"
    "otocol.account.v1.CAIS\"v\n\030GetAuthorizedD"
    "ataRequest\0221\n\tentity_id\030\001 \001(\0132\026.bgs.prot"
    "ocol.EntityIdB\006\202\371+\002\020\001\022\013\n\003tag\030\002 \003(\t\022\032\n\022pr"
    "ivileged_network\030\003 \001(\010\"R\n\031GetAuthorizedD"
    "ataResponse\0225\n\004data\030\001 \003(\0132\'.bgs.protocol"
    ".account.v1.AuthorizedData\"\324\001\n\030AccountSt"
    "ateNotification\022<\n\raccount_state\030\001 \001(\0132%"
    ".bgs.protocol.account.v1.AccountState\022\031\n"
    "\rsubscriber_id\030\002 \001(\004B\002\030\001\022\?\n\014account_tags"
    "\030\003 \001(\0132).bgs.protocol.account.v1.Account"
    "FieldTags\022\036\n\026subscription_completed\030\004 \001("
    "\010\"\352\001\n\034GameAccountStateNotification\022E\n\022ga"
    "me_account_state\030\001 \001(\0132).bgs.protocol.ac"
    "count.v1.GameAccountState\022\031\n\rsubscriber_"
    "id\030\002 \001(\004B\002\030\001\022H\n\021game_account_tags\030\003 \001(\0132"
    "-.bgs.protocol.account.v1.GameAccountFie"
    "ldTags\022\036\n\026subscription_completed\030\004 \001(\010\"\262"
    "\001\n\027GameAccountNotification\022\?\n\rgame_accou"
    "nts\030\001 \003(\0132(.bgs.protocol.account.v1.Game"
    "AccountList\022\025\n\rsubscriber_id\030\002 \001(\004\022\?\n\014ac"
    "count_tags\030\003 \001(\0132).bgs.protocol.account."
    "v1.AccountFieldTags\"\250\001\n\036GameAccountSessi"
    "onNotification\022@\n\014game_account\030\001 \001(\0132*.b"
    "gs.protocol.account.v1.GameAccountHandle"
    "\022D\n\014session_info\030\002 \001(\0132..bgs.protocol.ac"
    "count.v1.GameSessionUpdateInfo2\312\013\n\016Accou"
    "ntService\022y\n\016ResolveAccount\022..bgs.protoc"
    "ol.account.v1.ResolveAccountRequest\032/.bg"
    "s.protocol.account.v1.ResolveAccountResp"
    "onse\"\006\202\371+\002\010\r\022|\n\tSubscribe\0222.bgs.protocol"
    ".account.v1.SubscriptionUpdateRequest\0323."
    "bgs.protocol.account.v1.SubscriptionUpda"
    "teResponse\"\006\202\371+\002\010\031\022_\n\013Unsubscribe\0222.bgs."
    "protocol.account.v1.SubscriptionUpdateRe"
    "quest\032\024.bgs.protocol.NoData\"\006\202\371+\002\010\032\022|\n\017G"
    "etAccountState\022/.bgs.protocol.account.v1"
    ".GetAccountStateRequest\0320.bgs.protocol.a"
    "ccount.v1.GetAccountStateResponse\"\006\202\371+\002\010"
    "\036\022\210\001\n\023GetGameAccountState\0223.bgs.protocol"
    ".account.v1.GetGameAccountStateRequest\0324"
    ".bgs.protocol.account.v1.GetGameAccountS"
    "tateResponse\"\006\202\371+\002\010\037\022p\n\013GetLicenses\022+.bg"
    "s.protocol.account.v1.GetLicensesRequest"
    "\032,.bgs.protocol.account.v1.GetLicensesRe"
    "sponse\"\006\202\371+\002\010 \022\227\001\n\030GetGameTimeRemainingI"
    "nfo\0228.bgs.protocol.account.v1.GetGameTim"
    "eRemainingInfoRequest\0329.bgs.protocol.acc"
    "ount.v1.GetGameTimeRemainingInfoResponse"
    "\"\006\202\371+\002\010!\022\205\001\n\022GetGameSessionInfo\0222.bgs.pr"
    "otocol.account.v1.GetGameSessionInfoRequ"
    "est\0323.bgs.protocol.account.v1.GetGameSes"
    "sionInfoResponse\"\006\202\371+\002\010\"\022p\n\013GetCAISInfo\022"
    "+.bgs.protocol.account.v1.GetCAISInfoReq"
    "uest\032,.bgs.protocol.account.v1.GetCAISIn"
    "foResponse\"\006\202\371+\002\010#\022\202\001\n\021GetAuthorizedData"
    "\0221.bgs.protocol.account.v1.GetAuthorized"
    "DataRequest\0322.bgs.protocol.account.v1.Ge"
    "tAuthorizedDataResponse\"\006\202\371+\002\010%\022\216\001\n\025GetS"
    "ignedAccountState\0225.bgs.protocol.account"
    ".v1.GetSignedAccountStateRequest\0326.bgs.p"
    "rotocol.account.v1.GetSignedAccountState"
    "Response\"\006\202\371+\002\010,\0329\202\371+/\n$bnet.protocol.ac"
    "count.AccountService*\007account\212\371+\002\020\0012\220\004\n\017"
    "AccountListener\022m\n\025OnAccountStateUpdated"
    "\0221.bgs.protocol.account.v1.AccountStateN"
    "otification\032\031.bgs.protocol.NO_RESPONSE\"\006"
    "\202\371+\002\010\001\022u\n\031OnGameAccountStateUpdated\0225.bg"
    "s.protocol.account.v1.GameAccountStateNo"
    "tification\032\031.bgs.protocol.NO_RESPONSE\"\006\202"
    "\371+\002\010\002\022o\n\025OnGameAccountsUpdated\0220.bgs.pro"
    "tocol.account.v1.GameAccountNotification"
    "\032\031.bgs.protocol.NO_RESPONSE\"\t\210\002\001\202\371+\002\010\003\022u"
    "\n\024OnGameSessionUpdated\0227.bgs.protocol.ac"
    "count.v1.GameAccountSessionNotification\032"
    "\031.bgs.protocol.NO_RESPONSE\"\t\210\002\001\202\371+\002\010\004\032/\202"
    "\371+%\n#bnet.protocol.account.AccountNotify"
    "\212\371+\002\010\001B\005H\002\200\001\000", 5453);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "account_service.proto", &protobuf_RegisterTypes);
  ResolveAccountRequest::default_instance_ = new ResolveAccountRequest();
  ResolveAccountResponse::default_instance_ = new ResolveAccountResponse();
  GameAccountFlagUpdateRequest::default_instance_ = new GameAccountFlagUpdateRequest();
  SubscriptionUpdateRequest::default_instance_ = new SubscriptionUpdateRequest();
  SubscriptionUpdateResponse::default_instance_ = new SubscriptionUpdateResponse();
  GetAccountStateRequest::default_instance_ = new GetAccountStateRequest();
  GetAccountStateResponse::default_instance_ = new GetAccountStateResponse();
  GetSignedAccountStateRequest::default_instance_ = new GetSignedAccountStateRequest();
  GetSignedAccountStateResponse::default_instance_ = new GetSignedAccountStateResponse();
  GetGameAccountStateRequest::default_instance_ = new GetGameAccountStateRequest();
  GetGameAccountStateResponse::default_instance_ = new GetGameAccountStateResponse();
  GetLicensesRequest::default_instance_ = new GetLicensesRequest();
  GetLicensesResponse::default_instance_ = new GetLicensesResponse();
  GetGameSessionInfoRequest::default_instance_ = new GetGameSessionInfoRequest();
  GetGameSessionInfoResponse::default_instance_ = new GetGameSessionInfoResponse();
  GetGameTimeRemainingInfoRequest::default_instance_ = new GetGameTimeRemainingInfoRequest();
  GetGameTimeRemainingInfoResponse::default_instance_ = new GetGameTimeRemainingInfoResponse();
  GetCAISInfoRequest::default_instance_ = new GetCAISInfoRequest();
  GetCAISInfoResponse::default_instance_ = new GetCAISInfoResponse();
  GetAuthorizedDataRequest::default_instance_ = new GetAuthorizedDataRequest();
  GetAuthorizedDataResponse::default_instance_ = new GetAuthorizedDataResponse();
  AccountStateNotification::default_instance_ = new AccountStateNotification();
  GameAccountStateNotification::default_instance_ = new GameAccountStateNotification();
  GameAccountNotification::default_instance_ = new GameAccountNotification();
  GameAccountSessionNotification::default_instance_ = new GameAccountSessionNotification();
  ResolveAccountRequest::default_instance_->InitAsDefaultInstance();
  ResolveAccountResponse::default_instance_->InitAsDefaultInstance();
  GameAccountFlagUpdateRequest::default_instance_->InitAsDefaultInstance();
  SubscriptionUpdateRequest::default_instance_->InitAsDefaultInstance();
  SubscriptionUpdateResponse::default_instance_->InitAsDefaultInstance();
  GetAccountStateRequest::default_instance_->InitAsDefaultInstance();
  GetAccountStateResponse::default_instance_->InitAsDefaultInstance();
  GetSignedAccountStateRequest::default_instance_->InitAsDefaultInstance();
  GetSignedAccountStateResponse::default_instance_->InitAsDefaultInstance();
  GetGameAccountStateRequest::default_instance_->InitAsDefaultInstance();
  GetGameAccountStateResponse::default_instance_->InitAsDefaultInstance();
  GetLicensesRequest::default_instance_->InitAsDefaultInstance();
  GetLicensesResponse::default_instance_->InitAsDefaultInstance();
  GetGameSessionInfoRequest::default_instance_->InitAsDefaultInstance();
  GetGameSessionInfoResponse::default_instance_->InitAsDefaultInstance();
  GetGameTimeRemainingInfoRequest::default_instance_->InitAsDefaultInstance();
  GetGameTimeRemainingInfoResponse::default_instance_->InitAsDefaultInstance();
  GetCAISInfoRequest::default_instance_->InitAsDefaultInstance();
  GetCAISInfoResponse::default_instance_->InitAsDefaultInstance();
  GetAuthorizedDataRequest::default_instance_->InitAsDefaultInstance();
  GetAuthorizedDataResponse::default_instance_->InitAsDefaultInstance();
  AccountStateNotification::default_instance_->InitAsDefaultInstance();
  GameAccountStateNotification::default_instance_->InitAsDefaultInstance();
  GameAccountNotification::default_instance_->InitAsDefaultInstance();
  GameAccountSessionNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_account_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_account_5fservice_2eproto {
  StaticDescriptorInitializer_account_5fservice_2eproto() {
    protobuf_AddDesc_account_5fservice_2eproto();
  }
} static_descriptor_initializer_account_5fservice_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int ResolveAccountRequest::kRefFieldNumber;
const int ResolveAccountRequest::kFetchIdFieldNumber;
#endif  // !_MSC_VER

ResolveAccountRequest::ResolveAccountRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.ResolveAccountRequest)
}

void ResolveAccountRequest::InitAsDefaultInstance() {
  ref_ = const_cast< ::bgs::protocol::account::v1::AccountReference*>(&::bgs::protocol::account::v1::AccountReference::default_instance());
}

ResolveAccountRequest::ResolveAccountRequest(const ResolveAccountRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.ResolveAccountRequest)
}

void ResolveAccountRequest::SharedCtor() {
  _cached_size_ = 0;
  ref_ = NULL;
  fetch_id_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResolveAccountRequest::~ResolveAccountRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.ResolveAccountRequest)
  SharedDtor();
}

void ResolveAccountRequest::SharedDtor() {
  if (this != default_instance_) {
    delete ref_;
  }
}

void ResolveAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResolveAccountRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResolveAccountRequest_descriptor_;
}

const ResolveAccountRequest& ResolveAccountRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

ResolveAccountRequest* ResolveAccountRequest::default_instance_ = NULL;

ResolveAccountRequest* ResolveAccountRequest::New() const {
  return new ResolveAccountRequest;
}

void ResolveAccountRequest::Swap(ResolveAccountRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ResolveAccountRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResolveAccountRequest_descriptor_;
  metadata.reflection = ResolveAccountRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int ResolveAccountResponse::kIdFieldNumber;
#endif  // !_MSC_VER

ResolveAccountResponse::ResolveAccountResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.ResolveAccountResponse)
}

void ResolveAccountResponse::InitAsDefaultInstance() {
  id_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

ResolveAccountResponse::ResolveAccountResponse(const ResolveAccountResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.ResolveAccountResponse)
}

void ResolveAccountResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResolveAccountResponse::~ResolveAccountResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.ResolveAccountResponse)
  SharedDtor();
}

void ResolveAccountResponse::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

void ResolveAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResolveAccountResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResolveAccountResponse_descriptor_;
}

const ResolveAccountResponse& ResolveAccountResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

ResolveAccountResponse* ResolveAccountResponse::default_instance_ = NULL;

ResolveAccountResponse* ResolveAccountResponse::New() const {
  return new ResolveAccountResponse;
}

void ResolveAccountResponse::Swap(ResolveAccountResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata ResolveAccountResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResolveAccountResponse_descriptor_;
  metadata.reflection = ResolveAccountResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountFlagUpdateRequest::kGameAccountFieldNumber;
const int GameAccountFlagUpdateRequest::kFlagFieldNumber;
const int GameAccountFlagUpdateRequest::kActiveFieldNumber;
#endif  // !_MSC_VER

GameAccountFlagUpdateRequest::GameAccountFlagUpdateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GameAccountFlagUpdateRequest)
}

void GameAccountFlagUpdateRequest::InitAsDefaultInstance() {
  game_account_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
}

GameAccountFlagUpdateRequest::GameAccountFlagUpdateRequest(const GameAccountFlagUpdateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GameAccountFlagUpdateRequest)
}

void GameAccountFlagUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  game_account_ = NULL;
  flag_ = GOOGLE_ULONGLONG(0);
  active_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountFlagUpdateRequest::~GameAccountFlagUpdateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GameAccountFlagUpdateRequest)
  SharedDtor();
}

void GameAccountFlagUpdateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete game_account_;
  }
}

void GameAccountFlagUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountFlagUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountFlagUpdateRequest_descriptor_;
}

const GameAccountFlagUpdateRequest& GameAccountFlagUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GameAccountFlagUpdateRequest* GameAccountFlagUpdateRequest::default_instance_ = NULL;

GameAccountFlagUpdateRequest* GameAccountFlagUpdateRequest::New() const {
  return new GameAccountFlagUpdateRequest;
}

void GameAccountFlagUpdateRequest::Swap(GameAccountFlagUpdateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountFlagUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountFlagUpdateRequest_descriptor_;
  metadata.reflection = GameAccountFlagUpdateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscriptionUpdateRequest::kRefFieldNumber;
#endif  // !_MSC_VER

SubscriptionUpdateRequest::SubscriptionUpdateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.SubscriptionUpdateRequest)
}

void SubscriptionUpdateRequest::InitAsDefaultInstance() {
}

SubscriptionUpdateRequest::SubscriptionUpdateRequest(const SubscriptionUpdateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.SubscriptionUpdateRequest)
}

void SubscriptionUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscriptionUpdateRequest::~SubscriptionUpdateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.SubscriptionUpdateRequest)
  SharedDtor();
}

void SubscriptionUpdateRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubscriptionUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriptionUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscriptionUpdateRequest_descriptor_;
}

const SubscriptionUpdateRequest& SubscriptionUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

SubscriptionUpdateRequest* SubscriptionUpdateRequest::default_instance_ = NULL;

SubscriptionUpdateRequest* SubscriptionUpdateRequest::New() const {
  return new SubscriptionUpdateRequest;
}

void SubscriptionUpdateRequest::Swap(SubscriptionUpdateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscriptionUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscriptionUpdateRequest_descriptor_;
  metadata.reflection = SubscriptionUpdateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscriptionUpdateResponse::kRefFieldNumber;
#endif  // !_MSC_VER

SubscriptionUpdateResponse::SubscriptionUpdateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.SubscriptionUpdateResponse)
}

void SubscriptionUpdateResponse::InitAsDefaultInstance() {
}

SubscriptionUpdateResponse::SubscriptionUpdateResponse(const SubscriptionUpdateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.SubscriptionUpdateResponse)
}

void SubscriptionUpdateResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscriptionUpdateResponse::~SubscriptionUpdateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.SubscriptionUpdateResponse)
  SharedDtor();
}

void SubscriptionUpdateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubscriptionUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriptionUpdateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscriptionUpdateResponse_descriptor_;
}

const SubscriptionUpdateResponse& SubscriptionUpdateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

SubscriptionUpdateResponse* SubscriptionUpdateResponse::default_instance_ = NULL;

SubscriptionUpdateResponse* SubscriptionUpdateResponse::New() const {
  return new SubscriptionUpdateResponse;
}

void SubscriptionUpdateResponse::Swap(SubscriptionUpdateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscriptionUpdateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscriptionUpdateResponse_descriptor_;
  metadata.reflection = SubscriptionUpdateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAccountStateRequest::kEntityIdFieldNumber;
const int GetAccountStateRequest::kProgramFieldNumber;
const int GetAccountStateRequest::kRegionFieldNumber;
const int GetAccountStateRequest::kOptionsFieldNumber;
const int GetAccountStateRequest::kTagsFieldNumber;
#endif  // !_MSC_VER

GetAccountStateRequest::GetAccountStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetAccountStateRequest)
}

void GetAccountStateRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  options_ = const_cast< ::bgs::protocol::account::v1::AccountFieldOptions*>(&::bgs::protocol::account::v1::AccountFieldOptions::default_instance());
  tags_ = const_cast< ::bgs::protocol::account::v1::AccountFieldTags*>(&::bgs::protocol::account::v1::AccountFieldTags::default_instance());
}

GetAccountStateRequest::GetAccountStateRequest(const GetAccountStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetAccountStateRequest)
}

void GetAccountStateRequest::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  program_ = 0u;
  region_ = 0u;
  options_ = NULL;
  tags_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAccountStateRequest::~GetAccountStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetAccountStateRequest)
  SharedDtor();
}

void GetAccountStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
    delete options_;
    delete tags_;
  }
}

void GetAccountStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccountStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAccountStateRequest_descriptor_;
}

const GetAccountStateRequest& GetAccountStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetAccountStateRequest* GetAccountStateRequest::default_instance_ = NULL;

GetAccountStateRequest* GetAccountStateRequest::New() const {
  return new GetAccountStateRequest;
}

void GetAccountStateRequest::Swap(GetAccountStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAccountStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAccountStateRequest_descriptor_;
  metadata.reflection = GetAccountStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAccountStateResponse::kStateFieldNumber;
const int GetAccountStateResponse::kTagsFieldNumber;
#endif  // !_MSC_VER

GetAccountStateResponse::GetAccountStateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetAccountStateResponse)
}

void GetAccountStateResponse::InitAsDefaultInstance() {
  state_ = const_cast< ::bgs::protocol::account::v1::AccountState*>(&::bgs::protocol::account::v1::AccountState::default_instance());
  tags_ = const_cast< ::bgs::protocol::account::v1::AccountFieldTags*>(&::bgs::protocol::account::v1::AccountFieldTags::default_instance());
}

GetAccountStateResponse::GetAccountStateResponse(const GetAccountStateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetAccountStateResponse)
}

void GetAccountStateResponse::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  tags_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAccountStateResponse::~GetAccountStateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetAccountStateResponse)
  SharedDtor();
}

void GetAccountStateResponse::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
    delete tags_;
  }
}

void GetAccountStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccountStateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAccountStateResponse_descriptor_;
}

const GetAccountStateResponse& GetAccountStateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetAccountStateResponse* GetAccountStateResponse::default_instance_ = NULL;

GetAccountStateResponse* GetAccountStateResponse::New() const {
  return new GetAccountStateResponse;
}

void GetAccountStateResponse::Swap(GetAccountStateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAccountStateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAccountStateResponse_descriptor_;
  metadata.reflection = GetAccountStateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSignedAccountStateRequest::kAccountFieldNumber;
#endif  // !_MSC_VER

GetSignedAccountStateRequest::GetSignedAccountStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetSignedAccountStateRequest)
}

void GetSignedAccountStateRequest::InitAsDefaultInstance() {
  account_ = const_cast< ::bgs::protocol::account::v1::AccountId*>(&::bgs::protocol::account::v1::AccountId::default_instance());
}

GetSignedAccountStateRequest::GetSignedAccountStateRequest(const GetSignedAccountStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetSignedAccountStateRequest)
}

void GetSignedAccountStateRequest::SharedCtor() {
  _cached_size_ = 0;
  account_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSignedAccountStateRequest::~GetSignedAccountStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetSignedAccountStateRequest)
  SharedDtor();
}

void GetSignedAccountStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete account_;
  }
}

void GetSignedAccountStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSignedAccountStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSignedAccountStateRequest_descriptor_;
}

const GetSignedAccountStateRequest& GetSignedAccountStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetSignedAccountStateRequest* GetSignedAccountStateRequest::default_instance_ = NULL;

GetSignedAccountStateRequest* GetSignedAccountStateRequest::New() const {
  return new GetSignedAccountStateRequest;
}

void GetSignedAccountStateRequest::Swap(GetSignedAccountStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSignedAccountStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSignedAccountStateRequest_descriptor_;
  metadata.reflection = GetSignedAccountStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSignedAccountStateResponse::kTokenFieldNumber;
#endif  // !_MSC_VER

GetSignedAccountStateResponse::GetSignedAccountStateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetSignedAccountStateResponse)
}

void GetSignedAccountStateResponse::InitAsDefaultInstance() {
}

GetSignedAccountStateResponse::GetSignedAccountStateResponse(const GetSignedAccountStateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetSignedAccountStateResponse)
}

void GetSignedAccountStateResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSignedAccountStateResponse::~GetSignedAccountStateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetSignedAccountStateResponse)
  SharedDtor();
}

void GetSignedAccountStateResponse::SharedDtor() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (this != default_instance_) {
  }
}

void GetSignedAccountStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSignedAccountStateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSignedAccountStateResponse_descriptor_;
}

const GetSignedAccountStateResponse& GetSignedAccountStateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetSignedAccountStateResponse* GetSignedAccountStateResponse::default_instance_ = NULL;

GetSignedAccountStateResponse* GetSignedAccountStateResponse::New() const {
  return new GetSignedAccountStateResponse;
}

void GetSignedAccountStateResponse::Swap(GetSignedAccountStateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSignedAccountStateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSignedAccountStateResponse_descriptor_;
  metadata.reflection = GetSignedAccountStateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameAccountStateRequest::kAccountIdFieldNumber;
const int GetGameAccountStateRequest::kGameAccountIdFieldNumber;
const int GetGameAccountStateRequest::kOptionsFieldNumber;
const int GetGameAccountStateRequest::kTagsFieldNumber;
#endif  // !_MSC_VER

GetGameAccountStateRequest::GetGameAccountStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameAccountStateRequest)
}

void GetGameAccountStateRequest::InitAsDefaultInstance() {
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  options_ = const_cast< ::bgs::protocol::account::v1::GameAccountFieldOptions*>(&::bgs::protocol::account::v1::GameAccountFieldOptions::default_instance());
  tags_ = const_cast< ::bgs::protocol::account::v1::GameAccountFieldTags*>(&::bgs::protocol::account::v1::GameAccountFieldTags::default_instance());
}

GetGameAccountStateRequest::GetGameAccountStateRequest(const GetGameAccountStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameAccountStateRequest)
}

void GetGameAccountStateRequest::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = NULL;
  game_account_id_ = NULL;
  options_ = NULL;
  tags_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameAccountStateRequest::~GetGameAccountStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameAccountStateRequest)
  SharedDtor();
}

void GetGameAccountStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete account_id_;
    delete game_account_id_;
    delete options_;
    delete tags_;
  }
}

void GetGameAccountStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameAccountStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameAccountStateRequest_descriptor_;
}

const GetGameAccountStateRequest& GetGameAccountStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameAccountStateRequest* GetGameAccountStateRequest::default_instance_ = NULL;

GetGameAccountStateRequest* GetGameAccountStateRequest::New() const {
  return new GetGameAccountStateRequest;
}

void GetGameAccountStateRequest::Swap(GetGameAccountStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameAccountStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameAccountStateRequest_descriptor_;
  metadata.reflection = GetGameAccountStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameAccountStateResponse::kStateFieldNumber;
const int GetGameAccountStateResponse::kTagsFieldNumber;
#endif  // !_MSC_VER

GetGameAccountStateResponse::GetGameAccountStateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameAccountStateResponse)
}

void GetGameAccountStateResponse::InitAsDefaultInstance() {
  state_ = const_cast< ::bgs::protocol::account::v1::GameAccountState*>(&::bgs::protocol::account::v1::GameAccountState::default_instance());
  tags_ = const_cast< ::bgs::protocol::account::v1::GameAccountFieldTags*>(&::bgs::protocol::account::v1::GameAccountFieldTags::default_instance());
}

GetGameAccountStateResponse::GetGameAccountStateResponse(const GetGameAccountStateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameAccountStateResponse)
}

void GetGameAccountStateResponse::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  tags_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameAccountStateResponse::~GetGameAccountStateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameAccountStateResponse)
  SharedDtor();
}

void GetGameAccountStateResponse::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
    delete tags_;
  }
}

void GetGameAccountStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameAccountStateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameAccountStateResponse_descriptor_;
}

const GetGameAccountStateResponse& GetGameAccountStateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameAccountStateResponse* GetGameAccountStateResponse::default_instance_ = NULL;

GetGameAccountStateResponse* GetGameAccountStateResponse::New() const {
  return new GetGameAccountStateResponse;
}

void GetGameAccountStateResponse::Swap(GetGameAccountStateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameAccountStateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameAccountStateResponse_descriptor_;
  metadata.reflection = GetGameAccountStateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetLicensesRequest::kTargetIdFieldNumber;
const int GetLicensesRequest::kFetchAccountLicensesFieldNumber;
const int GetLicensesRequest::kFetchGameAccountLicensesFieldNumber;
const int GetLicensesRequest::kFetchDynamicAccountLicensesFieldNumber;
const int GetLicensesRequest::kProgramFieldNumber;
const int GetLicensesRequest::kExcludeUnknownProgramFieldNumber;
#endif  // !_MSC_VER

GetLicensesRequest::GetLicensesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetLicensesRequest)
}

void GetLicensesRequest::InitAsDefaultInstance() {
  target_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetLicensesRequest::GetLicensesRequest(const GetLicensesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetLicensesRequest)
}

void GetLicensesRequest::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = NULL;
  fetch_account_licenses_ = false;
  fetch_game_account_licenses_ = false;
  fetch_dynamic_account_licenses_ = false;
  program_ = 0u;
  exclude_unknown_program_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLicensesRequest::~GetLicensesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetLicensesRequest)
  SharedDtor();
}

void GetLicensesRequest::SharedDtor() {
  if (this != default_instance_) {
    delete target_id_;
  }
}

void GetLicensesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLicensesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLicensesRequest_descriptor_;
}

const GetLicensesRequest& GetLicensesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetLicensesRequest* GetLicensesRequest::default_instance_ = NULL;

GetLicensesRequest* GetLicensesRequest::New() const {
  return new GetLicensesRequest;
}

void GetLicensesRequest::Swap(GetLicensesRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetLicensesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLicensesRequest_descriptor_;
  metadata.reflection = GetLicensesRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetLicensesResponse::kLicensesFieldNumber;
#endif  // !_MSC_VER

GetLicensesResponse::GetLicensesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetLicensesResponse)
}

void GetLicensesResponse::InitAsDefaultInstance() {
}

GetLicensesResponse::GetLicensesResponse(const GetLicensesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetLicensesResponse)
}

void GetLicensesResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLicensesResponse::~GetLicensesResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetLicensesResponse)
  SharedDtor();
}

void GetLicensesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetLicensesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLicensesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLicensesResponse_descriptor_;
}

const GetLicensesResponse& GetLicensesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetLicensesResponse* GetLicensesResponse::default_instance_ = NULL;

GetLicensesResponse* GetLicensesResponse::New() const {
  return new GetLicensesResponse;
}

void GetLicensesResponse::Swap(GetLicensesResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetLicensesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLicensesResponse_descriptor_;
  metadata.reflection = GetLicensesResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameSessionInfoRequest::kEntityIdFieldNumber;
#endif  // !_MSC_VER

GetGameSessionInfoRequest::GetGameSessionInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameSessionInfoRequest)
}

void GetGameSessionInfoRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetGameSessionInfoRequest::GetGameSessionInfoRequest(const GetGameSessionInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameSessionInfoRequest)
}

void GetGameSessionInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameSessionInfoRequest::~GetGameSessionInfoRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameSessionInfoRequest)
  SharedDtor();
}

void GetGameSessionInfoRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
  }
}

void GetGameSessionInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameSessionInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameSessionInfoRequest_descriptor_;
}

const GetGameSessionInfoRequest& GetGameSessionInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameSessionInfoRequest* GetGameSessionInfoRequest::default_instance_ = NULL;

GetGameSessionInfoRequest* GetGameSessionInfoRequest::New() const {
  return new GetGameSessionInfoRequest;
}

void GetGameSessionInfoRequest::Swap(GetGameSessionInfoRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameSessionInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameSessionInfoRequest_descriptor_;
  metadata.reflection = GetGameSessionInfoRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameSessionInfoResponse::kSessionInfoFieldNumber;
#endif  // !_MSC_VER

GetGameSessionInfoResponse::GetGameSessionInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameSessionInfoResponse)
}

void GetGameSessionInfoResponse::InitAsDefaultInstance() {
  session_info_ = const_cast< ::bgs::protocol::account::v1::GameSessionInfo*>(&::bgs::protocol::account::v1::GameSessionInfo::default_instance());
}

GetGameSessionInfoResponse::GetGameSessionInfoResponse(const GetGameSessionInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameSessionInfoResponse)
}

void GetGameSessionInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  session_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameSessionInfoResponse::~GetGameSessionInfoResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameSessionInfoResponse)
  SharedDtor();
}

void GetGameSessionInfoResponse::SharedDtor() {
  if (this != default_instance_) {
    delete session_info_;
  }
}

void GetGameSessionInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameSessionInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameSessionInfoResponse_descriptor_;
}

const GetGameSessionInfoResponse& GetGameSessionInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameSessionInfoResponse* GetGameSessionInfoResponse::default_instance_ = NULL;

GetGameSessionInfoResponse* GetGameSessionInfoResponse::New() const {
  return new GetGameSessionInfoResponse;
}

void GetGameSessionInfoResponse::Swap(GetGameSessionInfoResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameSessionInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameSessionInfoResponse_descriptor_;
  metadata.reflection = GetGameSessionInfoResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameTimeRemainingInfoRequest::kGameAccountIdFieldNumber;
const int GetGameTimeRemainingInfoRequest::kAccountIdFieldNumber;
const int GetGameTimeRemainingInfoRequest::kBenefactorIdFieldNumber;
#endif  // !_MSC_VER

GetGameTimeRemainingInfoRequest::GetGameTimeRemainingInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest)
}

void GetGameTimeRemainingInfoRequest::InitAsDefaultInstance() {
  game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
  account_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetGameTimeRemainingInfoRequest::GetGameTimeRemainingInfoRequest(const GetGameTimeRemainingInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest)
}

void GetGameTimeRemainingInfoRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  game_account_id_ = NULL;
  account_id_ = NULL;
  benefactor_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameTimeRemainingInfoRequest::~GetGameTimeRemainingInfoRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest)
  SharedDtor();
}

void GetGameTimeRemainingInfoRequest::SharedDtor() {
  if (benefactor_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete benefactor_id_;
  }
  if (this != default_instance_) {
    delete game_account_id_;
    delete account_id_;
  }
}

void GetGameTimeRemainingInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameTimeRemainingInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameTimeRemainingInfoRequest_descriptor_;
}

const GetGameTimeRemainingInfoRequest& GetGameTimeRemainingInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameTimeRemainingInfoRequest* GetGameTimeRemainingInfoRequest::default_instance_ = NULL;

GetGameTimeRemainingInfoRequest* GetGameTimeRemainingInfoRequest::New() const {
  return new GetGameTimeRemainingInfoRequest;
}

void GetGameTimeRemainingInfoRequest::Swap(GetGameTimeRemainingInfoRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameTimeRemainingInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameTimeRemainingInfoRequest_descriptor_;
  metadata.reflection = GetGameTimeRemainingInfoRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetGameTimeRemainingInfoResponse::kGameTimeRemainingInfoFieldNumber;
#endif  // !_MSC_VER

GetGameTimeRemainingInfoResponse::GetGameTimeRemainingInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse)
}

void GetGameTimeRemainingInfoResponse::InitAsDefaultInstance() {
  game_time_remaining_info_ = const_cast< ::bgs::protocol::account::v1::GameTimeRemainingInfo*>(&::bgs::protocol::account::v1::GameTimeRemainingInfo::default_instance());
}

GetGameTimeRemainingInfoResponse::GetGameTimeRemainingInfoResponse(const GetGameTimeRemainingInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse)
}

void GetGameTimeRemainingInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  game_time_remaining_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameTimeRemainingInfoResponse::~GetGameTimeRemainingInfoResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse)
  SharedDtor();
}

void GetGameTimeRemainingInfoResponse::SharedDtor() {
  if (this != default_instance_) {
    delete game_time_remaining_info_;
  }
}

void GetGameTimeRemainingInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameTimeRemainingInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameTimeRemainingInfoResponse_descriptor_;
}

const GetGameTimeRemainingInfoResponse& GetGameTimeRemainingInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetGameTimeRemainingInfoResponse* GetGameTimeRemainingInfoResponse::default_instance_ = NULL;

GetGameTimeRemainingInfoResponse* GetGameTimeRemainingInfoResponse::New() const {
  return new GetGameTimeRemainingInfoResponse;
}

void GetGameTimeRemainingInfoResponse::Swap(GetGameTimeRemainingInfoResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetGameTimeRemainingInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameTimeRemainingInfoResponse_descriptor_;
  metadata.reflection = GetGameTimeRemainingInfoResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetCAISInfoRequest::kEntityIdFieldNumber;
#endif  // !_MSC_VER

GetCAISInfoRequest::GetCAISInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetCAISInfoRequest)
}

void GetCAISInfoRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetCAISInfoRequest::GetCAISInfoRequest(const GetCAISInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetCAISInfoRequest)
}

void GetCAISInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  entity_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCAISInfoRequest::~GetCAISInfoRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetCAISInfoRequest)
  SharedDtor();
}

void GetCAISInfoRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
  }
}

void GetCAISInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCAISInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCAISInfoRequest_descriptor_;
}

const GetCAISInfoRequest& GetCAISInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetCAISInfoRequest* GetCAISInfoRequest::default_instance_ = NULL;

GetCAISInfoRequest* GetCAISInfoRequest::New() const {
  return new GetCAISInfoRequest;
}

void GetCAISInfoRequest::Swap(GetCAISInfoRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetCAISInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCAISInfoRequest_descriptor_;
  metadata.reflection = GetCAISInfoRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetCAISInfoResponse::kCaisInfoFieldNumber;
#endif  // !_MSC_VER

GetCAISInfoResponse::GetCAISInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetCAISInfoResponse)
}

void GetCAISInfoResponse::InitAsDefaultInstance() {
  cais_info_ = const_cast< ::bgs::protocol::account::v1::CAIS*>(&::bgs::protocol::account::v1::CAIS::default_instance());
}

GetCAISInfoResponse::GetCAISInfoResponse(const GetCAISInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetCAISInfoResponse)
}

void GetCAISInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  cais_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCAISInfoResponse::~GetCAISInfoResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetCAISInfoResponse)
  SharedDtor();
}

void GetCAISInfoResponse::SharedDtor() {
  if (this != default_instance_) {
    delete cais_info_;
  }
}

void GetCAISInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCAISInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCAISInfoResponse_descriptor_;
}

const GetCAISInfoResponse& GetCAISInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetCAISInfoResponse* GetCAISInfoResponse::default_instance_ = NULL;

GetCAISInfoResponse* GetCAISInfoResponse::New() const {
  return new GetCAISInfoResponse;
}

void GetCAISInfoResponse::Swap(GetCAISInfoResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetCAISInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCAISInfoResponse_descriptor_;
  metadata.reflection = GetCAISInfoResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAuthorizedDataRequest::kEntityIdFieldNumber;
const int GetAuthorizedDataRequest::kTagFieldNumber;
const int GetAuthorizedDataRequest::kPrivilegedNetworkFieldNumber;
#endif  // !_MSC_VER

GetAuthorizedDataRequest::GetAuthorizedDataRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetAuthorizedDataRequest)
}

void GetAuthorizedDataRequest::InitAsDefaultInstance() {
  entity_id_ = const_cast< ::bgs::protocol::EntityId*>(&::bgs::protocol::EntityId::default_instance());
}

GetAuthorizedDataRequest::GetAuthorizedDataRequest(const GetAuthorizedDataRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetAuthorizedDataRequest)
}

void GetAuthorizedDataRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entity_id_ = NULL;
  privileged_network_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAuthorizedDataRequest::~GetAuthorizedDataRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetAuthorizedDataRequest)
  SharedDtor();
}

void GetAuthorizedDataRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_id_;
  }
}

void GetAuthorizedDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthorizedDataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAuthorizedDataRequest_descriptor_;
}

const GetAuthorizedDataRequest& GetAuthorizedDataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetAuthorizedDataRequest* GetAuthorizedDataRequest::default_instance_ = NULL;

GetAuthorizedDataRequest* GetAuthorizedDataRequest::New() const {
  return new GetAuthorizedDataRequest;
}

void GetAuthorizedDataRequest::Swap(GetAuthorizedDataRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAuthorizedDataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAuthorizedDataRequest_descriptor_;
  metadata.reflection = GetAuthorizedDataRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetAuthorizedDataResponse::kDataFieldNumber;
#endif  // !_MSC_VER

GetAuthorizedDataResponse::GetAuthorizedDataResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GetAuthorizedDataResponse)
}

void GetAuthorizedDataResponse::InitAsDefaultInstance() {
}

GetAuthorizedDataResponse::GetAuthorizedDataResponse(const GetAuthorizedDataResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GetAuthorizedDataResponse)
}

void GetAuthorizedDataResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAuthorizedDataResponse::~GetAuthorizedDataResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GetAuthorizedDataResponse)
  SharedDtor();
}

void GetAuthorizedDataResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAuthorizedDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthorizedDataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAuthorizedDataResponse_descriptor_;
}

const GetAuthorizedDataResponse& GetAuthorizedDataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GetAuthorizedDataResponse* GetAuthorizedDataResponse::default_instance_ = NULL;

GetAuthorizedDataResponse* GetAuthorizedDataResponse::New() const {
  return new GetAuthorizedDataResponse;
}

void GetAuthorizedDataResponse::Swap(GetAuthorizedDataResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetAuthorizedDataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAuthorizedDataResponse_descriptor_;
  metadata.reflection = GetAuthorizedDataResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AccountStateNotification::kAccountStateFieldNumber;
const int AccountStateNotification::kSubscriberIdFieldNumber;
const int AccountStateNotification::kAccountTagsFieldNumber;
const int AccountStateNotification::kSubscriptionCompletedFieldNumber;
#endif  // !_MSC_VER

AccountStateNotification::AccountStateNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.AccountStateNotification)
}

void AccountStateNotification::InitAsDefaultInstance() {
  account_state_ = const_cast< ::bgs::protocol::account::v1::AccountState*>(&::bgs::protocol::account::v1::AccountState::default_instance());
  account_tags_ = const_cast< ::bgs::protocol::account::v1::AccountFieldTags*>(&::bgs::protocol::account::v1::AccountFieldTags::default_instance());
}

AccountStateNotification::AccountStateNotification(const AccountStateNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.AccountStateNotification)
}

void AccountStateNotification::SharedCtor() {
  _cached_size_ = 0;
  account_state_ = NULL;
  subscriber_id_ = GOOGLE_ULONGLONG(0);
  account_tags_ = NULL;
  subscription_completed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountStateNotification::~AccountStateNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.AccountStateNotification)
  SharedDtor();
}

void AccountStateNotification::SharedDtor() {
  if (this != default_instance_) {
    delete account_state_;
    delete account_tags_;
  }
}

void AccountStateNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountStateNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountStateNotification_descriptor_;
}

const AccountStateNotification& AccountStateNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

AccountStateNotification* AccountStateNotification::default_instance_ = NULL;

AccountStateNotification* AccountStateNotification::New() const {
  return new AccountStateNotification;
}

void AccountStateNotification::Swap(AccountStateNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AccountStateNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountStateNotification_descriptor_;
  metadata.reflection = AccountStateNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountStateNotification::kGameAccountStateFieldNumber;
const int GameAccountStateNotification::kSubscriberIdFieldNumber;
const int GameAccountStateNotification::kGameAccountTagsFieldNumber;
const int GameAccountStateNotification::kSubscriptionCompletedFieldNumber;
#endif  // !_MSC_VER

GameAccountStateNotification::GameAccountStateNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GameAccountStateNotification)
}

void GameAccountStateNotification::InitAsDefaultInstance() {
  game_account_state_ = const_cast< ::bgs::protocol::account::v1::GameAccountState*>(&::bgs::protocol::account::v1::GameAccountState::default_instance());
  game_account_tags_ = const_cast< ::bgs::protocol::account::v1::GameAccountFieldTags*>(&::bgs::protocol::account::v1::GameAccountFieldTags::default_instance());
}

GameAccountStateNotification::GameAccountStateNotification(const GameAccountStateNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GameAccountStateNotification)
}

void GameAccountStateNotification::SharedCtor() {
  _cached_size_ = 0;
  game_account_state_ = NULL;
  subscriber_id_ = GOOGLE_ULONGLONG(0);
  game_account_tags_ = NULL;
  subscription_completed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountStateNotification::~GameAccountStateNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GameAccountStateNotification)
  SharedDtor();
}

void GameAccountStateNotification::SharedDtor() {
  if (this != default_instance_) {
    delete game_account_state_;
    delete game_account_tags_;
  }
}

void GameAccountStateNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountStateNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountStateNotification_descriptor_;
}

const GameAccountStateNotification& GameAccountStateNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GameAccountStateNotification* GameAccountStateNotification::default_instance_ = NULL;

GameAccountStateNotification* GameAccountStateNotification::New() const {
  return new GameAccountStateNotification;
}

void GameAccountStateNotification::Swap(GameAccountStateNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountStateNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountStateNotification_descriptor_;
  metadata.reflection = GameAccountStateNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountNotification::kGameAccountsFieldNumber;
const int GameAccountNotification::kSubscriberIdFieldNumber;
const int GameAccountNotification::kAccountTagsFieldNumber;
#endif  // !_MSC_VER

GameAccountNotification::GameAccountNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GameAccountNotification)
}

void GameAccountNotification::InitAsDefaultInstance() {
  account_tags_ = const_cast< ::bgs::protocol::account::v1::AccountFieldTags*>(&::bgs::protocol::account::v1::AccountFieldTags::default_instance());
}

GameAccountNotification::GameAccountNotification(const GameAccountNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GameAccountNotification)
}

void GameAccountNotification::SharedCtor() {
  _cached_size_ = 0;
  subscriber_id_ = GOOGLE_ULONGLONG(0);
  account_tags_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountNotification::~GameAccountNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GameAccountNotification)
  SharedDtor();
}

void GameAccountNotification::SharedDtor() {
  if (this != default_instance_) {
    delete account_tags_;
  }
}

void GameAccountNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountNotification_descriptor_;
}

const GameAccountNotification& GameAccountNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GameAccountNotification* GameAccountNotification::default_instance_ = NULL;

GameAccountNotification* GameAccountNotification::New() const {
  return new GameAccountNotification;
}

void GameAccountNotification::Swap(GameAccountNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountNotification_descriptor_;
  metadata.reflection = GameAccountNotification_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GameAccountSessionNotification::kGameAccountFieldNumber;
const int GameAccountSessionNotification::kSessionInfoFieldNumber;
#endif  // !_MSC_VER

GameAccountSessionNotification::GameAccountSessionNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.account.v1.GameAccountSessionNotification)
}

void GameAccountSessionNotification::InitAsDefaultInstance() {
  game_account_ = const_cast< ::bgs::protocol::account::v1::GameAccountHandle*>(&::bgs::protocol::account::v1::GameAccountHandle::default_instance());
  session_info_ = const_cast< ::bgs::protocol::account::v1::GameSessionUpdateInfo*>(&::bgs::protocol::account::v1::GameSessionUpdateInfo::default_instance());
}

GameAccountSessionNotification::GameAccountSessionNotification(const GameAccountSessionNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.account.v1.GameAccountSessionNotification)
}

void GameAccountSessionNotification::SharedCtor() {
  _cached_size_ = 0;
  game_account_ = NULL;
  session_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAccountSessionNotification::~GameAccountSessionNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.account.v1.GameAccountSessionNotification)
  SharedDtor();
}

void GameAccountSessionNotification::SharedDtor() {
  if (this != default_instance_) {
    delete game_account_;
    delete session_info_;
  }
}

void GameAccountSessionNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAccountSessionNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAccountSessionNotification_descriptor_;
}

const GameAccountSessionNotification& GameAccountSessionNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_account_5fservice_2eproto();
  return *default_instance_;
}

GameAccountSessionNotification* GameAccountSessionNotification::default_instance_ = NULL;

GameAccountSessionNotification* GameAccountSessionNotification::New() const {
  return new GameAccountSessionNotification;
}

void GameAccountSessionNotification::Swap(GameAccountSessionNotification* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GameAccountSessionNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAccountSessionNotification_descriptor_;
  metadata.reflection = GameAccountSessionNotification_reflection_;
  return metadata;
}

// ===================================================================

AccountService::AccountService(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

AccountService::~AccountService() {
}

google::protobuf::ServiceDescriptor const* AccountService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountService_descriptor_;
}

void AccountService::CallServerMethod(uint32 token, uint32 methodId, MessageBuffer buffer) {
  switch(methodId & 0x3FFFFFFF) {
    case 13:
      ParseAndHandleResolveAccount(token, methodId, buffer);
      break;
    case 25:
      ParseAndHandleSubscribe(token, methodId, buffer);
      break;
    case 26:
      ParseAndHandleUnsubscribe(token, methodId, buffer);
      break;
    case 30:
      ParseAndHandleGetAccountState(token, methodId, buffer);
      break;
    case 31:
      ParseAndHandleGetGameAccountState(token, methodId, buffer);
      break;
    case 32:
      ParseAndHandleGetLicenses(token, methodId, buffer);
      break;
    case 33:
      ParseAndHandleGetGameTimeRemainingInfo(token, methodId, buffer);
      break;
    case 34:
      ParseAndHandleGetGameSessionInfo(token, methodId, buffer);
      break;
    case 35:
      ParseAndHandleGetCAISInfo(token, methodId, buffer);
      break;
    case 37:
      ParseAndHandleGetAuthorizedData(token, methodId, buffer);
      break;
    case 44:
      ParseAndHandleGetSignedAccountState(token, methodId, buffer);
      break;
    default:
      LogInvalidMethod(methodId);
      SendResponse(service_hash_, methodId, token, ERROR_RPC_INVALID_METHOD);
      break;
    }
}

uint32 AccountService::HandleResolveAccount(::bgs::protocol::account::v1::ResolveAccountRequest const* request, ::bgs::protocol::account::v1::ResolveAccountResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.ResolveAccount", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleSubscribe(::bgs::protocol::account::v1::SubscriptionUpdateRequest const* request, ::bgs::protocol::account::v1::SubscriptionUpdateResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.Subscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleUnsubscribe(::bgs::protocol::account::v1::SubscriptionUpdateRequest const* request, ::bgs::protocol::NoData* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.Unsubscribe", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetAccountState(::bgs::protocol::account::v1::GetAccountStateRequest const* request, ::bgs::protocol::account::v1::GetAccountStateResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetAccountState", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetGameAccountState(::bgs::protocol::account::v1::GetGameAccountStateRequest const* request, ::bgs::protocol::account::v1::GetGameAccountStateResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetGameAccountState", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetLicenses(::bgs::protocol::account::v1::GetLicensesRequest const* request, ::bgs::protocol::account::v1::GetLicensesResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetLicenses", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetGameTimeRemainingInfo(::bgs::protocol::account::v1::GetGameTimeRemainingInfoRequest const* request, ::bgs::protocol::account::v1::GetGameTimeRemainingInfoResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetGameTimeRemainingInfo", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetGameSessionInfo(::bgs::protocol::account::v1::GetGameSessionInfoRequest const* request, ::bgs::protocol::account::v1::GetGameSessionInfoResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetGameSessionInfo", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetCAISInfo(::bgs::protocol::account::v1::GetCAISInfoRequest const* request, ::bgs::protocol::account::v1::GetCAISInfoResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetCAISInfo", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetAuthorizedData(::bgs::protocol::account::v1::GetAuthorizedDataRequest const* request, ::bgs::protocol::account::v1::GetAuthorizedDataResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetAuthorizedData", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

uint32 AccountService::HandleGetSignedAccountState(::bgs::protocol::account::v1::GetSignedAccountStateRequest const* request, ::bgs::protocol::account::v1::GetSignedAccountStateResponse* /*response*/, std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)>& /*continuation*/) {
  LogUnimplementedServerMethod("AccountService.GetSignedAccountState", request);
  return ERROR_RPC_NOT_IMPLEMENTED;
}

void AccountService::ParseAndHandleResolveAccount(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::ResolveAccountRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.ResolveAccount");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.ResolveAccount", "bgs.protocol.account.v1.ResolveAccountRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.ResolveAccount", ::bgs::protocol::account::v1::ResolveAccountResponse::descriptor());
  ::bgs::protocol::account::v1::ResolveAccountResponse response;
  uint32 status = HandleResolveAccount(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleSubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::SubscriptionUpdateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.Subscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.Subscribe", "bgs.protocol.account.v1.SubscriptionUpdateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.Subscribe", ::bgs::protocol::account::v1::SubscriptionUpdateResponse::descriptor());
  ::bgs::protocol::account::v1::SubscriptionUpdateResponse response;
  uint32 status = HandleSubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleUnsubscribe(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::SubscriptionUpdateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.Unsubscribe");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.Unsubscribe", "bgs.protocol.account.v1.SubscriptionUpdateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.Unsubscribe", ::bgs::protocol::NoData::descriptor());
  ::bgs::protocol::NoData response;
  uint32 status = HandleUnsubscribe(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetAccountState(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetAccountStateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetAccountState");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetAccountState", "bgs.protocol.account.v1.GetAccountStateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetAccountState", ::bgs::protocol::account::v1::GetAccountStateResponse::descriptor());
  ::bgs::protocol::account::v1::GetAccountStateResponse response;
  uint32 status = HandleGetAccountState(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetGameAccountState(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetGameAccountStateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetGameAccountState");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetGameAccountState", "bgs.protocol.account.v1.GetGameAccountStateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetGameAccountState", ::bgs::protocol::account::v1::GetGameAccountStateResponse::descriptor());
  ::bgs::protocol::account::v1::GetGameAccountStateResponse response;
  uint32 status = HandleGetGameAccountState(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetLicenses(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetLicensesRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetLicenses");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetLicenses", "bgs.protocol.account.v1.GetLicensesRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetLicenses", ::bgs::protocol::account::v1::GetLicensesResponse::descriptor());
  ::bgs::protocol::account::v1::GetLicensesResponse response;
  uint32 status = HandleGetLicenses(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetGameTimeRemainingInfo(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetGameTimeRemainingInfoRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetGameTimeRemainingInfo");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetGameTimeRemainingInfo", "bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetGameTimeRemainingInfo", ::bgs::protocol::account::v1::GetGameTimeRemainingInfoResponse::descriptor());
  ::bgs::protocol::account::v1::GetGameTimeRemainingInfoResponse response;
  uint32 status = HandleGetGameTimeRemainingInfo(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetGameSessionInfo(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetGameSessionInfoRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetGameSessionInfo");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetGameSessionInfo", "bgs.protocol.account.v1.GetGameSessionInfoRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetGameSessionInfo", ::bgs::protocol::account::v1::GetGameSessionInfoResponse::descriptor());
  ::bgs::protocol::account::v1::GetGameSessionInfoResponse response;
  uint32 status = HandleGetGameSessionInfo(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetCAISInfo(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetCAISInfoRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetCAISInfo");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetCAISInfo", "bgs.protocol.account.v1.GetCAISInfoRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetCAISInfo", ::bgs::protocol::account::v1::GetCAISInfoResponse::descriptor());
  ::bgs::protocol::account::v1::GetCAISInfoResponse response;
  uint32 status = HandleGetCAISInfo(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetAuthorizedData(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetAuthorizedDataRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetAuthorizedData");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetAuthorizedData", "bgs.protocol.account.v1.GetAuthorizedDataRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetAuthorizedData", ::bgs::protocol::account::v1::GetAuthorizedDataResponse::descriptor());
  ::bgs::protocol::account::v1::GetAuthorizedDataResponse response;
  uint32 status = HandleGetAuthorizedData(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

void AccountService::ParseAndHandleGetSignedAccountState(uint32 token, uint32 methodId, MessageBuffer& buffer) {
  ::bgs::protocol::account::v1::GetSignedAccountStateRequest request;
  if (!request.ParseFromArray(buffer.GetReadPointer(), buffer.GetActiveSize())) {
    LogFailedParsingRequest("AccountService.GetSignedAccountState");
    SendResponse(service_hash_, methodId, token, ERROR_RPC_MALFORMED_REQUEST);
    return;
  }
  LogCallServerMethod("AccountService.GetSignedAccountState", "bgs.protocol.account.v1.GetSignedAccountStateRequest", &request);
  std::function<void(ServiceBase*, uint32, ::google::protobuf::Message const*)> continuation = CreateServerContinuation(token, methodId, "AccountService.GetSignedAccountState", ::bgs::protocol::account::v1::GetSignedAccountStateResponse::descriptor());
  ::bgs::protocol::account::v1::GetSignedAccountStateResponse response;
  uint32 status = HandleGetSignedAccountState(&request, &response, continuation);
  if (continuation)
    continuation(this, status, &response);
}

// ===================================================================

AccountListener::AccountListener(bool use_original_hash) : ServiceBase(use_original_hash ? OriginalHash::value : NameHash::value) {
}

AccountListener::~AccountListener() {
}

google::protobuf::ServiceDescriptor const* AccountListener::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountListener_descriptor_;
}

void AccountListener::OnAccountStateUpdated(::bgs::protocol::account::v1::AccountStateNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("AccountListener.OnAccountStateUpdated", "bgs.protocol.account.v1.AccountStateNotification", request);
  SendRequest(service_hash_, 1 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void AccountListener::OnGameAccountStateUpdated(::bgs::protocol::account::v1::GameAccountStateNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("AccountListener.OnGameAccountStateUpdated", "bgs.protocol.account.v1.GameAccountStateNotification", request);
  SendRequest(service_hash_, 2 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void AccountListener::OnGameAccountsUpdated(::bgs::protocol::account::v1::GameAccountNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("AccountListener.OnGameAccountsUpdated", "bgs.protocol.account.v1.GameAccountNotification", request);
  SendRequest(service_hash_, 3 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void AccountListener::OnGameSessionUpdated(::bgs::protocol::account::v1::GameAccountSessionNotification const* request, bool client /*= false*/, bool server /*= false*/) {
  LogCallClientMethod("AccountListener.OnGameSessionUpdated", "bgs.protocol.account.v1.GameAccountSessionNotification", request);
  SendRequest(service_hash_, 4 | (client ? 0x40000000 : 0) | (server ? 0x80000000 : 0), request);
}

void AccountListener::CallServerMethod(uint32 /*token*/, uint32 methodId, MessageBuffer /*buffer*/) {
  LogDisallowedMethod(methodId);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace account
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
