// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "club_request.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* SubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDescriptionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDescriptionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDescriptionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDescriptionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClubTypeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClubTypeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClubTypeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClubTypeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateClubStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateClubStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateClubSettingsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateClubSettingsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddMemberRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddMemberRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* KickRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KickRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMemberRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMemberRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMemberResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMemberResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMembersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMembersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMembersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMembersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateMemberStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateMemberStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSubscriberStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSubscriberStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssignRoleRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssignRoleRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnassignRoleRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnassignRoleRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeclineInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeclineInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RevokeInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RevokeInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendSuggestionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendSuggestionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptSuggestionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptSuggestionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeclineSuggestionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeclineSuggestionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSuggestionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSuggestionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSuggestionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSuggestionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSuggestionsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSuggestionsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSuggestionsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSuggestionsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTicketRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTicketRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTicketResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTicketResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyTicketRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyTicketRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RedeemTicketRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RedeemTicketRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTicketRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTicketRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTicketResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTicketResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTicketsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTicketsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTicketsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTicketsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddBanRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddBanRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveBanRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveBanRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBanRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBanRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBanResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBanResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBansRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBansRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBansResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBansResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribeStreamRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribeStreamRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsubscribeStreamRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsubscribeStreamRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateStreamRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateStreamRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateStreamResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateStreamResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyStreamRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyStreamRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateStreamStateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateStreamStateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStreamFocusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStreamFocusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateMessageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateMessageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyMessageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyMessageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditMessageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditMessageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetMessagePinnedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetMessagePinnedRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetTypingIndicatorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetTypingIndicatorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdvanceStreamViewTimeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdvanceStreamViewTimeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdvanceStreamMentionViewTimeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdvanceStreamMentionViewTimeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdvanceActivityViewTimeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdvanceActivityViewTimeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamHistoryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamHistoryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamHistoryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamHistoryResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamMessageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamMessageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClubActivityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClubActivityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClubActivityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClubActivityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamVoiceTokenRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamVoiceTokenRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStreamVoiceTokenResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStreamVoiceTokenResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* KickFromStreamVoiceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KickFromStreamVoiceRequest_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_club_5frequest_2eproto() {
  protobuf_AddDesc_club_5frequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "club_request.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribeRequest_descriptor_ = file->message_type(0);
  static const int SubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, club_id_),
  };
  SubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeRequest_descriptor_,
      SubscribeRequest::default_instance_,
      SubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeRequest));
  UnsubscribeRequest_descriptor_ = file->message_type(1);
  static const int UnsubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, club_id_),
  };
  UnsubscribeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeRequest_descriptor_,
      UnsubscribeRequest::default_instance_,
      UnsubscribeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeRequest));
  CreateRequest_descriptor_ = file->message_type(2);
  static const int CreateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, options_),
  };
  CreateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateRequest_descriptor_,
      CreateRequest::default_instance_,
      CreateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateRequest));
  CreateResponse_descriptor_ = file->message_type(3);
  static const int CreateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponse, club_id_),
  };
  CreateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateResponse_descriptor_,
      CreateResponse::default_instance_,
      CreateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateResponse));
  DestroyRequest_descriptor_ = file->message_type(4);
  static const int DestroyRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyRequest, club_id_),
  };
  DestroyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyRequest_descriptor_,
      DestroyRequest::default_instance_,
      DestroyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyRequest));
  GetDescriptionRequest_descriptor_ = file->message_type(5);
  static const int GetDescriptionRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionRequest, club_id_),
  };
  GetDescriptionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDescriptionRequest_descriptor_,
      GetDescriptionRequest::default_instance_,
      GetDescriptionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDescriptionRequest));
  GetDescriptionResponse_descriptor_ = file->message_type(6);
  static const int GetDescriptionResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionResponse, club_),
  };
  GetDescriptionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDescriptionResponse_descriptor_,
      GetDescriptionResponse::default_instance_,
      GetDescriptionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDescriptionResponse));
  GetClubTypeRequest_descriptor_ = file->message_type(7);
  static const int GetClubTypeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeRequest, type_),
  };
  GetClubTypeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClubTypeRequest_descriptor_,
      GetClubTypeRequest::default_instance_,
      GetClubTypeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClubTypeRequest));
  GetClubTypeResponse_descriptor_ = file->message_type(8);
  static const int GetClubTypeResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeResponse, role_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeResponse, range_set_),
  };
  GetClubTypeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClubTypeResponse_descriptor_,
      GetClubTypeResponse::default_instance_,
      GetClubTypeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubTypeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClubTypeResponse));
  UpdateClubStateRequest_descriptor_ = file->message_type(9);
  static const int UpdateClubStateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubStateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubStateRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubStateRequest, options_),
  };
  UpdateClubStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateClubStateRequest_descriptor_,
      UpdateClubStateRequest::default_instance_,
      UpdateClubStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateClubStateRequest));
  UpdateClubSettingsRequest_descriptor_ = file->message_type(10);
  static const int UpdateClubSettingsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSettingsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSettingsRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSettingsRequest, options_),
  };
  UpdateClubSettingsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateClubSettingsRequest_descriptor_,
      UpdateClubSettingsRequest::default_instance_,
      UpdateClubSettingsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSettingsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClubSettingsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateClubSettingsRequest));
  AddMemberRequest_descriptor_ = file->message_type(11);
  static const int AddMemberRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberRequest, options_),
  };
  AddMemberRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddMemberRequest_descriptor_,
      AddMemberRequest::default_instance_,
      AddMemberRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddMemberRequest));
  JoinRequest_descriptor_ = file->message_type(12);
  static const int JoinRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRequest, options_),
  };
  JoinRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinRequest_descriptor_,
      JoinRequest::default_instance_,
      JoinRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinRequest));
  LeaveRequest_descriptor_ = file->message_type(13);
  static const int LeaveRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRequest, club_id_),
  };
  LeaveRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LeaveRequest_descriptor_,
      LeaveRequest::default_instance_,
      LeaveRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LeaveRequest));
  KickRequest_descriptor_ = file->message_type(14);
  static const int KickRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRequest, target_id_),
  };
  KickRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KickRequest_descriptor_,
      KickRequest::default_instance_,
      KickRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KickRequest));
  GetMemberRequest_descriptor_ = file->message_type(15);
  static const int GetMemberRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberRequest, member_id_),
  };
  GetMemberRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMemberRequest_descriptor_,
      GetMemberRequest::default_instance_,
      GetMemberRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMemberRequest));
  GetMemberResponse_descriptor_ = file->message_type(16);
  static const int GetMemberResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberResponse, member_),
  };
  GetMemberResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMemberResponse_descriptor_,
      GetMemberResponse::default_instance_,
      GetMemberResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMemberResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMemberResponse));
  GetMembersRequest_descriptor_ = file->message_type(17);
  static const int GetMembersRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersRequest, continuation_),
  };
  GetMembersRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMembersRequest_descriptor_,
      GetMembersRequest::default_instance_,
      GetMembersRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMembersRequest));
  GetMembersResponse_descriptor_ = file->message_type(18);
  static const int GetMembersResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersResponse, member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersResponse, continuation_),
  };
  GetMembersResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMembersResponse_descriptor_,
      GetMembersResponse::default_instance_,
      GetMembersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMembersResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMembersResponse));
  UpdateMemberStateRequest_descriptor_ = file->message_type(19);
  static const int UpdateMemberStateRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, member_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, options_),
  };
  UpdateMemberStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateMemberStateRequest_descriptor_,
      UpdateMemberStateRequest::default_instance_,
      UpdateMemberStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMemberStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateMemberStateRequest));
  UpdateSubscriberStateRequest_descriptor_ = file->message_type(20);
  static const int UpdateSubscriberStateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscriberStateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscriberStateRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscriberStateRequest, options_),
  };
  UpdateSubscriberStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSubscriberStateRequest_descriptor_,
      UpdateSubscriberStateRequest::default_instance_,
      UpdateSubscriberStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscriberStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscriberStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSubscriberStateRequest));
  AssignRoleRequest_descriptor_ = file->message_type(21);
  static const int AssignRoleRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignRoleRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignRoleRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignRoleRequest, options_),
  };
  AssignRoleRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssignRoleRequest_descriptor_,
      AssignRoleRequest::default_instance_,
      AssignRoleRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignRoleRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignRoleRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssignRoleRequest));
  UnassignRoleRequest_descriptor_ = file->message_type(22);
  static const int UnassignRoleRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassignRoleRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassignRoleRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassignRoleRequest, options_),
  };
  UnassignRoleRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnassignRoleRequest_descriptor_,
      UnassignRoleRequest::default_instance_,
      UnassignRoleRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassignRoleRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassignRoleRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnassignRoleRequest));
  SendInvitationRequest_descriptor_ = file->message_type(23);
  static const int SendInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, options_),
  };
  SendInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendInvitationRequest_descriptor_,
      SendInvitationRequest::default_instance_,
      SendInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendInvitationRequest));
  AcceptInvitationRequest_descriptor_ = file->message_type(24);
  static const int AcceptInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, invitation_id_),
  };
  AcceptInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptInvitationRequest_descriptor_,
      AcceptInvitationRequest::default_instance_,
      AcceptInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptInvitationRequest));
  DeclineInvitationRequest_descriptor_ = file->message_type(25);
  static const int DeclineInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, invitation_id_),
  };
  DeclineInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeclineInvitationRequest_descriptor_,
      DeclineInvitationRequest::default_instance_,
      DeclineInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeclineInvitationRequest));
  RevokeInvitationRequest_descriptor_ = file->message_type(26);
  static const int RevokeInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, invitation_id_),
  };
  RevokeInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RevokeInvitationRequest_descriptor_,
      RevokeInvitationRequest::default_instance_,
      RevokeInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RevokeInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RevokeInvitationRequest));
  GetInvitationRequest_descriptor_ = file->message_type(27);
  static const int GetInvitationRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationRequest, invitation_id_),
  };
  GetInvitationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetInvitationRequest_descriptor_,
      GetInvitationRequest::default_instance_,
      GetInvitationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetInvitationRequest));
  GetInvitationResponse_descriptor_ = file->message_type(28);
  static const int GetInvitationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationResponse, invitation_),
  };
  GetInvitationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetInvitationResponse_descriptor_,
      GetInvitationResponse::default_instance_,
      GetInvitationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetInvitationResponse));
  GetInvitationsRequest_descriptor_ = file->message_type(29);
  static const int GetInvitationsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsRequest, continuation_),
  };
  GetInvitationsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetInvitationsRequest_descriptor_,
      GetInvitationsRequest::default_instance_,
      GetInvitationsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetInvitationsRequest));
  GetInvitationsResponse_descriptor_ = file->message_type(30);
  static const int GetInvitationsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsResponse, invitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsResponse, continuation_),
  };
  GetInvitationsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetInvitationsResponse_descriptor_,
      GetInvitationsResponse::default_instance_,
      GetInvitationsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetInvitationsResponse));
  SendSuggestionRequest_descriptor_ = file->message_type(31);
  static const int SendSuggestionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendSuggestionRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendSuggestionRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendSuggestionRequest, options_),
  };
  SendSuggestionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendSuggestionRequest_descriptor_,
      SendSuggestionRequest::default_instance_,
      SendSuggestionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendSuggestionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendSuggestionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendSuggestionRequest));
  AcceptSuggestionRequest_descriptor_ = file->message_type(32);
  static const int AcceptSuggestionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptSuggestionRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptSuggestionRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptSuggestionRequest, suggestion_id_),
  };
  AcceptSuggestionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptSuggestionRequest_descriptor_,
      AcceptSuggestionRequest::default_instance_,
      AcceptSuggestionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptSuggestionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptSuggestionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptSuggestionRequest));
  DeclineSuggestionRequest_descriptor_ = file->message_type(33);
  static const int DeclineSuggestionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineSuggestionRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineSuggestionRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineSuggestionRequest, suggestion_id_),
  };
  DeclineSuggestionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeclineSuggestionRequest_descriptor_,
      DeclineSuggestionRequest::default_instance_,
      DeclineSuggestionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineSuggestionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclineSuggestionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeclineSuggestionRequest));
  GetSuggestionRequest_descriptor_ = file->message_type(34);
  static const int GetSuggestionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionRequest, suggestion_id_),
  };
  GetSuggestionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSuggestionRequest_descriptor_,
      GetSuggestionRequest::default_instance_,
      GetSuggestionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSuggestionRequest));
  GetSuggestionResponse_descriptor_ = file->message_type(35);
  static const int GetSuggestionResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionResponse, suggestion_),
  };
  GetSuggestionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSuggestionResponse_descriptor_,
      GetSuggestionResponse::default_instance_,
      GetSuggestionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSuggestionResponse));
  GetSuggestionsRequest_descriptor_ = file->message_type(36);
  static const int GetSuggestionsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsRequest, continuation_),
  };
  GetSuggestionsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSuggestionsRequest_descriptor_,
      GetSuggestionsRequest::default_instance_,
      GetSuggestionsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSuggestionsRequest));
  GetSuggestionsResponse_descriptor_ = file->message_type(37);
  static const int GetSuggestionsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsResponse, suggestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsResponse, continuation_),
  };
  GetSuggestionsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSuggestionsResponse_descriptor_,
      GetSuggestionsResponse::default_instance_,
      GetSuggestionsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSuggestionsResponse));
  CreateTicketRequest_descriptor_ = file->message_type(38);
  static const int CreateTicketRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketRequest, options_),
  };
  CreateTicketRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateTicketRequest_descriptor_,
      CreateTicketRequest::default_instance_,
      CreateTicketRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateTicketRequest));
  CreateTicketResponse_descriptor_ = file->message_type(39);
  static const int CreateTicketResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketResponse, ticket_),
  };
  CreateTicketResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateTicketResponse_descriptor_,
      CreateTicketResponse::default_instance_,
      CreateTicketResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTicketResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateTicketResponse));
  DestroyTicketRequest_descriptor_ = file->message_type(40);
  static const int DestroyTicketRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyTicketRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyTicketRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyTicketRequest, ticket_id_),
  };
  DestroyTicketRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyTicketRequest_descriptor_,
      DestroyTicketRequest::default_instance_,
      DestroyTicketRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyTicketRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyTicketRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyTicketRequest));
  RedeemTicketRequest_descriptor_ = file->message_type(41);
  static const int RedeemTicketRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemTicketRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemTicketRequest, ticket_id_),
  };
  RedeemTicketRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RedeemTicketRequest_descriptor_,
      RedeemTicketRequest::default_instance_,
      RedeemTicketRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemTicketRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemTicketRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RedeemTicketRequest));
  GetTicketRequest_descriptor_ = file->message_type(42);
  static const int GetTicketRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketRequest, ticket_id_),
  };
  GetTicketRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetTicketRequest_descriptor_,
      GetTicketRequest::default_instance_,
      GetTicketRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetTicketRequest));
  GetTicketResponse_descriptor_ = file->message_type(43);
  static const int GetTicketResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketResponse, ticket_),
  };
  GetTicketResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetTicketResponse_descriptor_,
      GetTicketResponse::default_instance_,
      GetTicketResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetTicketResponse));
  GetTicketsRequest_descriptor_ = file->message_type(44);
  static const int GetTicketsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsRequest, continuation_),
  };
  GetTicketsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetTicketsRequest_descriptor_,
      GetTicketsRequest::default_instance_,
      GetTicketsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetTicketsRequest));
  GetTicketsResponse_descriptor_ = file->message_type(45);
  static const int GetTicketsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsResponse, ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsResponse, continuation_),
  };
  GetTicketsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetTicketsResponse_descriptor_,
      GetTicketsResponse::default_instance_,
      GetTicketsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTicketsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetTicketsResponse));
  AddBanRequest_descriptor_ = file->message_type(46);
  static const int AddBanRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBanRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBanRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBanRequest, options_),
  };
  AddBanRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddBanRequest_descriptor_,
      AddBanRequest::default_instance_,
      AddBanRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBanRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBanRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddBanRequest));
  RemoveBanRequest_descriptor_ = file->message_type(47);
  static const int RemoveBanRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBanRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBanRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBanRequest, target_id_),
  };
  RemoveBanRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveBanRequest_descriptor_,
      RemoveBanRequest::default_instance_,
      RemoveBanRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBanRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBanRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveBanRequest));
  GetBanRequest_descriptor_ = file->message_type(48);
  static const int GetBanRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanRequest, target_id_),
  };
  GetBanRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBanRequest_descriptor_,
      GetBanRequest::default_instance_,
      GetBanRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBanRequest));
  GetBanResponse_descriptor_ = file->message_type(49);
  static const int GetBanResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanResponse, ban_),
  };
  GetBanResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBanResponse_descriptor_,
      GetBanResponse::default_instance_,
      GetBanResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBanResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBanResponse));
  GetBansRequest_descriptor_ = file->message_type(50);
  static const int GetBansRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansRequest, continuation_),
  };
  GetBansRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBansRequest_descriptor_,
      GetBansRequest::default_instance_,
      GetBansRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBansRequest));
  GetBansResponse_descriptor_ = file->message_type(51);
  static const int GetBansResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansResponse, ban_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansResponse, continuation_),
  };
  GetBansResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBansResponse_descriptor_,
      GetBansResponse::default_instance_,
      GetBansResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBansResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBansResponse));
  SubscribeStreamRequest_descriptor_ = file->message_type(52);
  static const int SubscribeStreamRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeStreamRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeStreamRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeStreamRequest, stream_id_),
  };
  SubscribeStreamRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubscribeStreamRequest_descriptor_,
      SubscribeStreamRequest::default_instance_,
      SubscribeStreamRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeStreamRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeStreamRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubscribeStreamRequest));
  UnsubscribeStreamRequest_descriptor_ = file->message_type(53);
  static const int UnsubscribeStreamRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeStreamRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeStreamRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeStreamRequest, stream_id_),
  };
  UnsubscribeStreamRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnsubscribeStreamRequest_descriptor_,
      UnsubscribeStreamRequest::default_instance_,
      UnsubscribeStreamRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeStreamRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsubscribeStreamRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnsubscribeStreamRequest));
  CreateStreamRequest_descriptor_ = file->message_type(54);
  static const int CreateStreamRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamRequest, options_),
  };
  CreateStreamRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateStreamRequest_descriptor_,
      CreateStreamRequest::default_instance_,
      CreateStreamRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateStreamRequest));
  CreateStreamResponse_descriptor_ = file->message_type(55);
  static const int CreateStreamResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamResponse, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamResponse, stream_id_),
  };
  CreateStreamResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateStreamResponse_descriptor_,
      CreateStreamResponse::default_instance_,
      CreateStreamResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateStreamResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateStreamResponse));
  DestroyStreamRequest_descriptor_ = file->message_type(56);
  static const int DestroyStreamRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyStreamRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyStreamRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyStreamRequest, stream_id_),
  };
  DestroyStreamRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyStreamRequest_descriptor_,
      DestroyStreamRequest::default_instance_,
      DestroyStreamRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyStreamRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyStreamRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyStreamRequest));
  GetStreamRequest_descriptor_ = file->message_type(57);
  static const int GetStreamRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamRequest, stream_id_),
  };
  GetStreamRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamRequest_descriptor_,
      GetStreamRequest::default_instance_,
      GetStreamRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamRequest));
  GetStreamResponse_descriptor_ = file->message_type(58);
  static const int GetStreamResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamResponse, stream_),
  };
  GetStreamResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamResponse_descriptor_,
      GetStreamResponse::default_instance_,
      GetStreamResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamResponse));
  GetStreamsRequest_descriptor_ = file->message_type(59);
  static const int GetStreamsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsRequest, continuation_),
  };
  GetStreamsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamsRequest_descriptor_,
      GetStreamsRequest::default_instance_,
      GetStreamsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamsRequest));
  GetStreamsResponse_descriptor_ = file->message_type(60);
  static const int GetStreamsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsResponse, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsResponse, view_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsResponse, continuation_),
  };
  GetStreamsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamsResponse_descriptor_,
      GetStreamsResponse::default_instance_,
      GetStreamsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamsResponse));
  UpdateStreamStateRequest_descriptor_ = file->message_type(61);
  static const int UpdateStreamStateRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, options_),
  };
  UpdateStreamStateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateStreamStateRequest_descriptor_,
      UpdateStreamStateRequest::default_instance_,
      UpdateStreamStateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStreamStateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateStreamStateRequest));
  SetStreamFocusRequest_descriptor_ = file->message_type(62);
  static const int SetStreamFocusRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, focus_),
  };
  SetStreamFocusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStreamFocusRequest_descriptor_,
      SetStreamFocusRequest::default_instance_,
      SetStreamFocusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStreamFocusRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStreamFocusRequest));
  CreateMessageRequest_descriptor_ = file->message_type(63);
  static const int CreateMessageRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, options_),
  };
  CreateMessageRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateMessageRequest_descriptor_,
      CreateMessageRequest::default_instance_,
      CreateMessageRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateMessageRequest));
  CreateMessageResponse_descriptor_ = file->message_type(64);
  static const int CreateMessageResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageResponse, message_),
  };
  CreateMessageResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateMessageResponse_descriptor_,
      CreateMessageResponse::default_instance_,
      CreateMessageResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMessageResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateMessageResponse));
  DestroyMessageRequest_descriptor_ = file->message_type(65);
  static const int DestroyMessageRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, message_id_),
  };
  DestroyMessageRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyMessageRequest_descriptor_,
      DestroyMessageRequest::default_instance_,
      DestroyMessageRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyMessageRequest));
  DestroyMessageResponse_descriptor_ = file->message_type(66);
  static const int DestroyMessageResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageResponse, message_),
  };
  DestroyMessageResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyMessageResponse_descriptor_,
      DestroyMessageResponse::default_instance_,
      DestroyMessageResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMessageResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyMessageResponse));
  EditMessageRequest_descriptor_ = file->message_type(67);
  static const int EditMessageRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, options_),
  };
  EditMessageRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EditMessageRequest_descriptor_,
      EditMessageRequest::default_instance_,
      EditMessageRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EditMessageRequest));
  EditMessageResponse_descriptor_ = file->message_type(68);
  static const int EditMessageResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageResponse, message_),
  };
  EditMessageResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EditMessageResponse_descriptor_,
      EditMessageResponse::default_instance_,
      EditMessageResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditMessageResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EditMessageResponse));
  SetMessagePinnedRequest_descriptor_ = file->message_type(69);
  static const int SetMessagePinnedRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessagePinnedRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessagePinnedRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessagePinnedRequest, stream_id_),
  };
  SetMessagePinnedRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetMessagePinnedRequest_descriptor_,
      SetMessagePinnedRequest::default_instance_,
      SetMessagePinnedRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessagePinnedRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessagePinnedRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetMessagePinnedRequest));
  SetTypingIndicatorRequest_descriptor_ = file->message_type(70);
  static const int SetTypingIndicatorRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, indicator_),
  };
  SetTypingIndicatorRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetTypingIndicatorRequest_descriptor_,
      SetTypingIndicatorRequest::default_instance_,
      SetTypingIndicatorRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTypingIndicatorRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetTypingIndicatorRequest));
  AdvanceStreamViewTimeRequest_descriptor_ = file->message_type(71);
  static const int AdvanceStreamViewTimeRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, stream_id_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, stream_id_),
  };
  AdvanceStreamViewTimeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdvanceStreamViewTimeRequest_descriptor_,
      AdvanceStreamViewTimeRequest::default_instance_,
      AdvanceStreamViewTimeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamViewTimeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdvanceStreamViewTimeRequest));
  AdvanceStreamMentionViewTimeRequest_descriptor_ = file->message_type(72);
  static const int AdvanceStreamMentionViewTimeRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, stream_id_),
  };
  AdvanceStreamMentionViewTimeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdvanceStreamMentionViewTimeRequest_descriptor_,
      AdvanceStreamMentionViewTimeRequest::default_instance_,
      AdvanceStreamMentionViewTimeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceStreamMentionViewTimeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdvanceStreamMentionViewTimeRequest));
  AdvanceActivityViewTimeRequest_descriptor_ = file->message_type(73);
  static const int AdvanceActivityViewTimeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceActivityViewTimeRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceActivityViewTimeRequest, club_id_),
  };
  AdvanceActivityViewTimeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdvanceActivityViewTimeRequest_descriptor_,
      AdvanceActivityViewTimeRequest::default_instance_,
      AdvanceActivityViewTimeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceActivityViewTimeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvanceActivityViewTimeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdvanceActivityViewTimeRequest));
  GetStreamHistoryRequest_descriptor_ = file->message_type(74);
  static const int GetStreamHistoryRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, options_),
  };
  GetStreamHistoryRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamHistoryRequest_descriptor_,
      GetStreamHistoryRequest::default_instance_,
      GetStreamHistoryRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamHistoryRequest));
  GetStreamHistoryResponse_descriptor_ = file->message_type(75);
  static const int GetStreamHistoryResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryResponse, continuation_),
  };
  GetStreamHistoryResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamHistoryResponse_descriptor_,
      GetStreamHistoryResponse::default_instance_,
      GetStreamHistoryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamHistoryResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamHistoryResponse));
  GetStreamMessageRequest_descriptor_ = file->message_type(76);
  static const int GetStreamMessageRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, message_id_),
  };
  GetStreamMessageRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamMessageRequest_descriptor_,
      GetStreamMessageRequest::default_instance_,
      GetStreamMessageRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamMessageRequest));
  GetStreamMessageResponse_descriptor_ = file->message_type(77);
  static const int GetStreamMessageResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageResponse, message_),
  };
  GetStreamMessageResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamMessageResponse_descriptor_,
      GetStreamMessageResponse::default_instance_,
      GetStreamMessageResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamMessageResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamMessageResponse));
  GetClubActivityRequest_descriptor_ = file->message_type(78);
  static const int GetClubActivityRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityRequest, options_),
  };
  GetClubActivityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClubActivityRequest_descriptor_,
      GetClubActivityRequest::default_instance_,
      GetClubActivityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClubActivityRequest));
  GetClubActivityResponse_descriptor_ = file->message_type(79);
  static const int GetClubActivityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityResponse, continuation_),
  };
  GetClubActivityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClubActivityResponse_descriptor_,
      GetClubActivityResponse::default_instance_,
      GetClubActivityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClubActivityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClubActivityResponse));
  GetStreamVoiceTokenRequest_descriptor_ = file->message_type(80);
  static const int GetStreamVoiceTokenRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, version_),
  };
  GetStreamVoiceTokenRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamVoiceTokenRequest_descriptor_,
      GetStreamVoiceTokenRequest::default_instance_,
      GetStreamVoiceTokenRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamVoiceTokenRequest));
  GetStreamVoiceTokenResponse_descriptor_ = file->message_type(81);
  static const int GetStreamVoiceTokenResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenResponse, channel_uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenResponse, credentials_),
  };
  GetStreamVoiceTokenResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStreamVoiceTokenResponse_descriptor_,
      GetStreamVoiceTokenResponse::default_instance_,
      GetStreamVoiceTokenResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStreamVoiceTokenResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStreamVoiceTokenResponse));
  KickFromStreamVoiceRequest_descriptor_ = file->message_type(82);
  static const int KickFromStreamVoiceRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, club_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, stream_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, target_id_),
  };
  KickFromStreamVoiceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KickFromStreamVoiceRequest_descriptor_,
      KickFromStreamVoiceRequest::default_instance_,
      KickFromStreamVoiceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickFromStreamVoiceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KickFromStreamVoiceRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_club_5frequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeRequest_descriptor_, &SubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeRequest_descriptor_, &UnsubscribeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateRequest_descriptor_, &CreateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateResponse_descriptor_, &CreateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyRequest_descriptor_, &DestroyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDescriptionRequest_descriptor_, &GetDescriptionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDescriptionResponse_descriptor_, &GetDescriptionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClubTypeRequest_descriptor_, &GetClubTypeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClubTypeResponse_descriptor_, &GetClubTypeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateClubStateRequest_descriptor_, &UpdateClubStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateClubSettingsRequest_descriptor_, &UpdateClubSettingsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddMemberRequest_descriptor_, &AddMemberRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinRequest_descriptor_, &JoinRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LeaveRequest_descriptor_, &LeaveRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KickRequest_descriptor_, &KickRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMemberRequest_descriptor_, &GetMemberRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMemberResponse_descriptor_, &GetMemberResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMembersRequest_descriptor_, &GetMembersRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMembersResponse_descriptor_, &GetMembersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateMemberStateRequest_descriptor_, &UpdateMemberStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSubscriberStateRequest_descriptor_, &UpdateSubscriberStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssignRoleRequest_descriptor_, &AssignRoleRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnassignRoleRequest_descriptor_, &UnassignRoleRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendInvitationRequest_descriptor_, &SendInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptInvitationRequest_descriptor_, &AcceptInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeclineInvitationRequest_descriptor_, &DeclineInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RevokeInvitationRequest_descriptor_, &RevokeInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetInvitationRequest_descriptor_, &GetInvitationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetInvitationResponse_descriptor_, &GetInvitationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetInvitationsRequest_descriptor_, &GetInvitationsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetInvitationsResponse_descriptor_, &GetInvitationsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendSuggestionRequest_descriptor_, &SendSuggestionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptSuggestionRequest_descriptor_, &AcceptSuggestionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeclineSuggestionRequest_descriptor_, &DeclineSuggestionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSuggestionRequest_descriptor_, &GetSuggestionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSuggestionResponse_descriptor_, &GetSuggestionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSuggestionsRequest_descriptor_, &GetSuggestionsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSuggestionsResponse_descriptor_, &GetSuggestionsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateTicketRequest_descriptor_, &CreateTicketRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateTicketResponse_descriptor_, &CreateTicketResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyTicketRequest_descriptor_, &DestroyTicketRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RedeemTicketRequest_descriptor_, &RedeemTicketRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetTicketRequest_descriptor_, &GetTicketRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetTicketResponse_descriptor_, &GetTicketResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetTicketsRequest_descriptor_, &GetTicketsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetTicketsResponse_descriptor_, &GetTicketsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddBanRequest_descriptor_, &AddBanRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveBanRequest_descriptor_, &RemoveBanRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBanRequest_descriptor_, &GetBanRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBanResponse_descriptor_, &GetBanResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBansRequest_descriptor_, &GetBansRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBansResponse_descriptor_, &GetBansResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubscribeStreamRequest_descriptor_, &SubscribeStreamRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnsubscribeStreamRequest_descriptor_, &UnsubscribeStreamRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateStreamRequest_descriptor_, &CreateStreamRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateStreamResponse_descriptor_, &CreateStreamResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyStreamRequest_descriptor_, &DestroyStreamRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamRequest_descriptor_, &GetStreamRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamResponse_descriptor_, &GetStreamResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamsRequest_descriptor_, &GetStreamsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamsResponse_descriptor_, &GetStreamsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateStreamStateRequest_descriptor_, &UpdateStreamStateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStreamFocusRequest_descriptor_, &SetStreamFocusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateMessageRequest_descriptor_, &CreateMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateMessageResponse_descriptor_, &CreateMessageResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyMessageRequest_descriptor_, &DestroyMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyMessageResponse_descriptor_, &DestroyMessageResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EditMessageRequest_descriptor_, &EditMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EditMessageResponse_descriptor_, &EditMessageResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetMessagePinnedRequest_descriptor_, &SetMessagePinnedRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetTypingIndicatorRequest_descriptor_, &SetTypingIndicatorRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdvanceStreamViewTimeRequest_descriptor_, &AdvanceStreamViewTimeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdvanceStreamMentionViewTimeRequest_descriptor_, &AdvanceStreamMentionViewTimeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdvanceActivityViewTimeRequest_descriptor_, &AdvanceActivityViewTimeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamHistoryRequest_descriptor_, &GetStreamHistoryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamHistoryResponse_descriptor_, &GetStreamHistoryResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamMessageRequest_descriptor_, &GetStreamMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamMessageResponse_descriptor_, &GetStreamMessageResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClubActivityRequest_descriptor_, &GetClubActivityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClubActivityResponse_descriptor_, &GetClubActivityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamVoiceTokenRequest_descriptor_, &GetStreamVoiceTokenRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStreamVoiceTokenResponse_descriptor_, &GetStreamVoiceTokenResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KickFromStreamVoiceRequest_descriptor_, &KickFromStreamVoiceRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_club_5frequest_2eproto() {
  delete SubscribeRequest::default_instance_;
  delete SubscribeRequest_reflection_;
  delete UnsubscribeRequest::default_instance_;
  delete UnsubscribeRequest_reflection_;
  delete CreateRequest::default_instance_;
  delete CreateRequest_reflection_;
  delete CreateResponse::default_instance_;
  delete CreateResponse_reflection_;
  delete DestroyRequest::default_instance_;
  delete DestroyRequest_reflection_;
  delete GetDescriptionRequest::default_instance_;
  delete GetDescriptionRequest_reflection_;
  delete GetDescriptionResponse::default_instance_;
  delete GetDescriptionResponse_reflection_;
  delete GetClubTypeRequest::default_instance_;
  delete GetClubTypeRequest_reflection_;
  delete GetClubTypeResponse::default_instance_;
  delete GetClubTypeResponse_reflection_;
  delete UpdateClubStateRequest::default_instance_;
  delete UpdateClubStateRequest_reflection_;
  delete UpdateClubSettingsRequest::default_instance_;
  delete UpdateClubSettingsRequest_reflection_;
  delete AddMemberRequest::default_instance_;
  delete AddMemberRequest_reflection_;
  delete JoinRequest::default_instance_;
  delete JoinRequest_reflection_;
  delete LeaveRequest::default_instance_;
  delete LeaveRequest_reflection_;
  delete KickRequest::default_instance_;
  delete KickRequest_reflection_;
  delete GetMemberRequest::default_instance_;
  delete GetMemberRequest_reflection_;
  delete GetMemberResponse::default_instance_;
  delete GetMemberResponse_reflection_;
  delete GetMembersRequest::default_instance_;
  delete GetMembersRequest_reflection_;
  delete GetMembersResponse::default_instance_;
  delete GetMembersResponse_reflection_;
  delete UpdateMemberStateRequest::default_instance_;
  delete UpdateMemberStateRequest_reflection_;
  delete UpdateSubscriberStateRequest::default_instance_;
  delete UpdateSubscriberStateRequest_reflection_;
  delete AssignRoleRequest::default_instance_;
  delete AssignRoleRequest_reflection_;
  delete UnassignRoleRequest::default_instance_;
  delete UnassignRoleRequest_reflection_;
  delete SendInvitationRequest::default_instance_;
  delete SendInvitationRequest_reflection_;
  delete AcceptInvitationRequest::default_instance_;
  delete AcceptInvitationRequest_reflection_;
  delete DeclineInvitationRequest::default_instance_;
  delete DeclineInvitationRequest_reflection_;
  delete RevokeInvitationRequest::default_instance_;
  delete RevokeInvitationRequest_reflection_;
  delete GetInvitationRequest::default_instance_;
  delete GetInvitationRequest_reflection_;
  delete GetInvitationResponse::default_instance_;
  delete GetInvitationResponse_reflection_;
  delete GetInvitationsRequest::default_instance_;
  delete GetInvitationsRequest_reflection_;
  delete GetInvitationsResponse::default_instance_;
  delete GetInvitationsResponse_reflection_;
  delete SendSuggestionRequest::default_instance_;
  delete SendSuggestionRequest_reflection_;
  delete AcceptSuggestionRequest::default_instance_;
  delete AcceptSuggestionRequest_reflection_;
  delete DeclineSuggestionRequest::default_instance_;
  delete DeclineSuggestionRequest_reflection_;
  delete GetSuggestionRequest::default_instance_;
  delete GetSuggestionRequest_reflection_;
  delete GetSuggestionResponse::default_instance_;
  delete GetSuggestionResponse_reflection_;
  delete GetSuggestionsRequest::default_instance_;
  delete GetSuggestionsRequest_reflection_;
  delete GetSuggestionsResponse::default_instance_;
  delete GetSuggestionsResponse_reflection_;
  delete CreateTicketRequest::default_instance_;
  delete CreateTicketRequest_reflection_;
  delete CreateTicketResponse::default_instance_;
  delete CreateTicketResponse_reflection_;
  delete DestroyTicketRequest::default_instance_;
  delete DestroyTicketRequest_reflection_;
  delete RedeemTicketRequest::default_instance_;
  delete RedeemTicketRequest_reflection_;
  delete GetTicketRequest::default_instance_;
  delete GetTicketRequest_reflection_;
  delete GetTicketResponse::default_instance_;
  delete GetTicketResponse_reflection_;
  delete GetTicketsRequest::default_instance_;
  delete GetTicketsRequest_reflection_;
  delete GetTicketsResponse::default_instance_;
  delete GetTicketsResponse_reflection_;
  delete AddBanRequest::default_instance_;
  delete AddBanRequest_reflection_;
  delete RemoveBanRequest::default_instance_;
  delete RemoveBanRequest_reflection_;
  delete GetBanRequest::default_instance_;
  delete GetBanRequest_reflection_;
  delete GetBanResponse::default_instance_;
  delete GetBanResponse_reflection_;
  delete GetBansRequest::default_instance_;
  delete GetBansRequest_reflection_;
  delete GetBansResponse::default_instance_;
  delete GetBansResponse_reflection_;
  delete SubscribeStreamRequest::default_instance_;
  delete SubscribeStreamRequest_reflection_;
  delete UnsubscribeStreamRequest::default_instance_;
  delete UnsubscribeStreamRequest_reflection_;
  delete CreateStreamRequest::default_instance_;
  delete CreateStreamRequest_reflection_;
  delete CreateStreamResponse::default_instance_;
  delete CreateStreamResponse_reflection_;
  delete DestroyStreamRequest::default_instance_;
  delete DestroyStreamRequest_reflection_;
  delete GetStreamRequest::default_instance_;
  delete GetStreamRequest_reflection_;
  delete GetStreamResponse::default_instance_;
  delete GetStreamResponse_reflection_;
  delete GetStreamsRequest::default_instance_;
  delete GetStreamsRequest_reflection_;
  delete GetStreamsResponse::default_instance_;
  delete GetStreamsResponse_reflection_;
  delete UpdateStreamStateRequest::default_instance_;
  delete UpdateStreamStateRequest_reflection_;
  delete SetStreamFocusRequest::default_instance_;
  delete SetStreamFocusRequest_reflection_;
  delete CreateMessageRequest::default_instance_;
  delete CreateMessageRequest_reflection_;
  delete CreateMessageResponse::default_instance_;
  delete CreateMessageResponse_reflection_;
  delete DestroyMessageRequest::default_instance_;
  delete DestroyMessageRequest_reflection_;
  delete DestroyMessageResponse::default_instance_;
  delete DestroyMessageResponse_reflection_;
  delete EditMessageRequest::default_instance_;
  delete EditMessageRequest_reflection_;
  delete EditMessageResponse::default_instance_;
  delete EditMessageResponse_reflection_;
  delete SetMessagePinnedRequest::default_instance_;
  delete SetMessagePinnedRequest_reflection_;
  delete SetTypingIndicatorRequest::default_instance_;
  delete SetTypingIndicatorRequest_reflection_;
  delete AdvanceStreamViewTimeRequest::default_instance_;
  delete AdvanceStreamViewTimeRequest_reflection_;
  delete AdvanceStreamMentionViewTimeRequest::default_instance_;
  delete AdvanceStreamMentionViewTimeRequest_reflection_;
  delete AdvanceActivityViewTimeRequest::default_instance_;
  delete AdvanceActivityViewTimeRequest_reflection_;
  delete GetStreamHistoryRequest::default_instance_;
  delete GetStreamHistoryRequest_reflection_;
  delete GetStreamHistoryResponse::default_instance_;
  delete GetStreamHistoryResponse_reflection_;
  delete GetStreamMessageRequest::default_instance_;
  delete GetStreamMessageRequest_reflection_;
  delete GetStreamMessageResponse::default_instance_;
  delete GetStreamMessageResponse_reflection_;
  delete GetClubActivityRequest::default_instance_;
  delete GetClubActivityRequest_reflection_;
  delete GetClubActivityResponse::default_instance_;
  delete GetClubActivityResponse_reflection_;
  delete GetStreamVoiceTokenRequest::default_instance_;
  delete GetStreamVoiceTokenRequest_reflection_;
  delete GetStreamVoiceTokenResponse::default_instance_;
  delete GetStreamVoiceTokenResponse_reflection_;
  delete KickFromStreamVoiceRequest::default_instance_;
  delete KickFromStreamVoiceRequest_reflection_;
}

void protobuf_AddDesc_club_5frequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::protobuf_AddDesc_club_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022club_request.proto\022\024bgs.protocol.club."
    "v1\032\020club_types.proto\"]\n\020SubscribeRequest"
    "\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v"
    "1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\"_\n\022U"
    "nsubscribeRequest\0220\n\010agent_id\030\001 \001(\0132\036.bg"
    "s.protocol.club.v1.MemberId\022\027\n\007club_id\030\002"
    " \001(\004B\006\202\371+\002\020\001\"{\n\rCreateRequest\0220\n\010agent_i"
    "d\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022"
    "8\n\007options\030\002 \001(\0132\'.bgs.protocol.club.v1."
    "ClubCreateOptions\"!\n\016CreateResponse\022\017\n\007c"
    "lub_id\030\001 \001(\004\"[\n\016DestroyRequest\0220\n\010agent_"
    "id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId"
    "\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\"b\n\025GetDescript"
    "ionRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\"M\n\026GetDescriptionResponse\0223\n\004club\030"
    "\001 \001(\0132%.bgs.protocol.club.v1.ClubDescrip"
    "tion\"z\n\022GetClubTypeRequest\0220\n\010agent_id\030\001"
    " \001(\0132\036.bgs.protocol.club.v1.MemberId\0222\n\004"
    "type\030\002 \001(\0132$.bgs.protocol.club.v1.Unique"
    "ClubType\"\271\001\n\023GetClubTypeResponse\0222\n\004type"
    "\030\001 \001(\0132$.bgs.protocol.club.v1.UniqueClub"
    "Type\0223\n\010role_set\030\002 \001(\0132!.bgs.protocol.cl"
    "ub.v1.ClubRoleSet\0229\n\trange_set\030\003 \001(\0132&.b"
    "gs.protocol.club.v1.ClubTypeRangeSet\"\234\001\n"
    "\026UpdateClubStateRequest\0220\n\010agent_id\030\001 \001("
    "\0132\036.bgs.protocol.club.v1.MemberId\022\027\n\007clu"
    "b_id\030\002 \001(\004B\006\202\371+\002\020\001\0227\n\007options\030\003 \001(\0132&.bg"
    "s.protocol.club.v1.ClubStateOptions\"\242\001\n\031"
    "UpdateClubSettingsRequest\0220\n\010agent_id\030\001 "
    "\001(\0132\036.bgs.protocol.club.v1.MemberId\022\027\n\007c"
    "lub_id\030\002 \001(\004B\006\202\371+\002\020\001\022:\n\007options\030\003 \001(\0132)."
    "bgs.protocol.club.v1.ClubSettingsOptions"
    "\"\231\001\n\020AddMemberRequest\0220\n\010agent_id\030\001 \001(\0132"
    "\036.bgs.protocol.club.v1.MemberId\022\027\n\007club_"
    "id\030\002 \001(\004B\006\202\371+\002\020\001\022:\n\007options\030\003 \001(\0132).bgs."
    "protocol.club.v1.CreateMemberOptions\"\224\001\n"
    "\013JoinRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.pro"
    "tocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B"
    "\006\202\371+\002\020\001\022:\n\007options\030\003 \001(\0132).bgs.protocol."
    "club.v1.CreateMemberOptions\"Y\n\014LeaveRequ"
    "est\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.clu"
    "b.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\"\213"
    "\001\n\013KickRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.p"
    "rotocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001("
    "\004B\006\202\371+\002\020\001\0221\n\ttarget_id\030\003 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\"\220\001\n\020GetMemberReques"
    "t\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club."
    "v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\0221\n\t"
    "member_id\030\003 \001(\0132\036.bgs.protocol.club.v1.M"
    "emberId\"A\n\021GetMemberResponse\022,\n\006member\030\001"
    " \001(\0132\034.bgs.protocol.club.v1.Member\"t\n\021Ge"
    "tMembersRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs."
    "protocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001"
    "(\004B\006\202\371+\002\020\001\022\024\n\014continuation\030\004 \001(\004\"X\n\022GetM"
    "embersResponse\022,\n\006member\030\001 \003(\0132\034.bgs.pro"
    "tocol.club.v1.Member\022\024\n\014continuation\030\002 \001"
    "(\004\"\323\001\n\030UpdateMemberStateRequest\0220\n\010agent"
    "_id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberI"
    "d\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\0221\n\tmember_id\030"
    "\003 \001(\0132\036.bgs.protocol.club.v1.MemberId\0229\n"
    "\007options\030\005 \001(\0132(.bgs.protocol.club.v1.Me"
    "mberStateOptions\"\250\001\n\034UpdateSubscriberSta"
    "teRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371"
    "+\002\020\001\022=\n\007options\030\003 \001(\0132,.bgs.protocol.clu"
    "b.v1.SubscriberStateOptions\"\222\001\n\021AssignRo"
    "leRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371"
    "+\002\020\001\0222\n\007options\030\003 \001(\0132!.bgs.protocol.clu"
    "b.v1.RoleOptions\"\224\001\n\023UnassignRoleRequest"
    "\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v"
    "1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\0222\n\007o"
    "ptions\030\003 \001(\0132!.bgs.protocol.club.v1.Role"
    "Options\"\240\001\n\025SendInvitationRequest\0220\n\010age"
    "nt_id\030\001 \001(\0132\036.bgs.protocol.club.v1.Membe"
    "rId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022<\n\007options\030"
    "\003 \001(\0132+.bgs.protocol.club.v1.SendInvitat"
    "ionOptions\"{\n\027AcceptInvitationRequest\0220\n"
    "\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v1.M"
    "emberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\025\n\rinvi"
    "tation_id\030\003 \001(\006\"|\n\030DeclineInvitationRequ"
    "est\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.clu"
    "b.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\025"
    "\n\rinvitation_id\030\003 \001(\006\"{\n\027RevokeInvitatio"
    "nRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoco"
    "l.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+"
    "\002\020\001\022\025\n\rinvitation_id\030\003 \001(\006\"x\n\024GetInvitat"
    "ionRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\022\025\n\rinvitation_id\030\003 \001(\006\"Q\n\025GetInvit"
    "ationResponse\0228\n\ninvitation\030\001 \001(\0132$.bgs."
    "protocol.club.v1.ClubInvitation\"x\n\025GetIn"
    "vitationsRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs"
    ".protocol.club.v1.MemberId\022\027\n\007club_id\030\002 "
    "\001(\004B\006\202\371+\002\020\001\022\024\n\014continuation\030\003 \001(\004\"h\n\026Get"
    "InvitationsResponse\0228\n\ninvitation\030\001 \003(\0132"
    "$.bgs.protocol.club.v1.ClubInvitation\022\024\n"
    "\014continuation\030\002 \001(\004\"\240\001\n\025SendSuggestionRe"
    "quest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.c"
    "lub.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001"
    "\022<\n\007options\030\003 \001(\0132+.bgs.protocol.club.v1"
    ".SendSuggestionOptions\"{\n\027AcceptSuggesti"
    "onRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371"
    "+\002\020\001\022\025\n\rsuggestion_id\030\003 \001(\006\"|\n\030DeclineSu"
    "ggestionRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs."
    "protocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001"
    "(\004B\006\202\371+\002\020\001\022\025\n\rsuggestion_id\030\003 \001(\006\"x\n\024Get"
    "SuggestionRequest\0220\n\010agent_id\030\001 \001(\0132\036.bg"
    "s.protocol.club.v1.MemberId\022\027\n\007club_id\030\002"
    " \001(\004B\006\202\371+\002\020\001\022\025\n\rsuggestion_id\030\003 \001(\006\"Q\n\025G"
    "etSuggestionResponse\0228\n\nsuggestion\030\001 \001(\013"
    "2$.bgs.protocol.club.v1.ClubSuggestion\"x"
    "\n\025GetSuggestionsRequest\0220\n\010agent_id\030\001 \001("
    "\0132\036.bgs.protocol.club.v1.MemberId\022\027\n\007clu"
    "b_id\030\002 \001(\004B\006\202\371+\002\020\001\022\024\n\014continuation\030\003 \001(\004"
    "\"h\n\026GetSuggestionsResponse\0228\n\nsuggestion"
    "\030\001 \003(\0132$.bgs.protocol.club.v1.ClubSugges"
    "tion\022\024\n\014continuation\030\002 \001(\004\"\234\001\n\023CreateTic"
    "ketRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\022:\n\007options\030\003 \001(\0132).bgs.protocol.cl"
    "ub.v1.CreateTicketOptions\"H\n\024CreateTicke"
    "tResponse\0220\n\006ticket\030\001 \001(\0132 .bgs.protocol"
    ".club.v1.ClubTicket\"t\n\024DestroyTicketRequ"
    "est\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.clu"
    "b.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021"
    "\n\tticket_id\030\003 \001(\t\"Z\n\023RedeemTicketRequest"
    "\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v"
    "1.MemberId\022\021\n\tticket_id\030\003 \001(\t\"W\n\020GetTick"
    "etRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\021\n\tticket_id\030\003 \001(\t\"E"
    "\n\021GetTicketResponse\0220\n\006ticket\030\001 \001(\0132 .bg"
    "s.protocol.club.v1.ClubTicket\"t\n\021GetTick"
    "etsRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\022\024\n\014continuation\030\003 \001(\004\"\\\n\022GetTicket"
    "sResponse\0220\n\006ticket\030\001 \003(\0132 .bgs.protocol"
    ".club.v1.ClubTicket\022\024\n\014continuation\030\002 \001("
    "\004\"\220\001\n\rAddBanRequest\0220\n\010agent_id\030\001 \001(\0132\036."
    "bgs.protocol.club.v1.MemberId\022\027\n\007club_id"
    "\030\002 \001(\004B\006\202\371+\002\020\001\0224\n\007options\030\003 \001(\0132#.bgs.pr"
    "otocol.club.v1.AddBanOptions\"\220\001\n\020RemoveB"
    "anRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371"
    "+\002\020\001\0221\n\ttarget_id\030\003 \001(\0132\036.bgs.protocol.c"
    "lub.v1.MemberId\"\215\001\n\rGetBanRequest\0220\n\010age"
    "nt_id\030\001 \001(\0132\036.bgs.protocol.club.v1.Membe"
    "rId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\0221\n\ttarget_i"
    "d\030\003 \001(\0132\036.bgs.protocol.club.v1.MemberId\""
    "<\n\016GetBanResponse\022*\n\003ban\030\001 \001(\0132\035.bgs.pro"
    "tocol.club.v1.ClubBan\"q\n\016GetBansRequest\022"
    "0\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v1"
    ".MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\024\n\014co"
    "ntinuation\030\003 \001(\004\"S\n\017GetBansResponse\022*\n\003b"
    "an\030\001 \003(\0132\035.bgs.protocol.club.v1.ClubBan\022"
    "\024\n\014continuation\030\002 \001(\004\"v\n\026SubscribeStream"
    "Request\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol"
    ".club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002"
    "\020\001\022\021\n\tstream_id\030\003 \003(\004\"x\n\030UnsubscribeStre"
    "amRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protoc"
    "ol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371"
    "+\002\020\001\022\021\n\tstream_id\030\003 \003(\004\"\234\001\n\023CreateStream"
    "Request\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol"
    ".club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002"
    "\020\001\022:\n\007options\030\003 \001(\0132).bgs.protocol.club."
    "v1.CreateStreamOptions\":\n\024CreateStreamRe"
    "sponse\022\017\n\007club_id\030\001 \001(\004\022\021\n\tstream_id\030\002 \001"
    "(\004\"t\n\024DestroyStreamRequest\0220\n\010agent_id\030\001"
    " \001(\0132\036.bgs.protocol.club.v1.MemberId\022\027\n\007"
    "club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004"
    "\"p\n\020GetStreamRequest\0220\n\010agent_id\030\001 \001(\0132\036"
    ".bgs.protocol.club.v1.MemberId\022\027\n\007club_i"
    "d\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\"A\n\021Ge"
    "tStreamResponse\022,\n\006stream\030\001 \001(\0132\034.bgs.pr"
    "otocol.club.v1.Stream\"t\n\021GetStreamsReque"
    "st\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club"
    ".v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\024\n"
    "\014continuation\030\003 \001(\004\"\210\001\n\022GetStreamsRespon"
    "se\022,\n\006stream\030\001 \003(\0132\034.bgs.protocol.club.v"
    "1.Stream\022.\n\004view\030\002 \003(\0132 .bgs.protocol.cl"
    "ub.v1.StreamView\022\024\n\014continuation\030\003 \001(\004\"\263"
    "\001\n\030UpdateStreamStateRequest\0220\n\010agent_id\030"
    "\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022\027\n"
    "\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001("
    "\004\0229\n\007options\030\005 \001(\0132(.bgs.protocol.club.v"
    "1.StreamStateOptions\"\204\001\n\025SetStreamFocusR"
    "equest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol."
    "club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020"
    "\001\022\021\n\tstream_id\030\003 \001(\004\022\r\n\005focus\030\004 \001(\010\"\261\001\n\024"
    "CreateMessageRequest\0220\n\010agent_id\030\001 \001(\0132\036"
    ".bgs.protocol.club.v1.MemberId\022\027\n\007club_i"
    "d\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\022;\n\007op"
    "tions\030\004 \001(\0132*.bgs.protocol.club.v1.Creat"
    "eMessageOptions\"M\n\025CreateMessageResponse"
    "\0224\n\007message\030\001 \001(\0132#.bgs.protocol.club.v1"
    ".StreamMessage\"\242\001\n\025DestroyMessageRequest"
    "\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club.v"
    "1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\ts"
    "tream_id\030\003 \001(\004\022+\n\nmessage_id\030\004 \001(\0132\027.bgs"
    ".protocol.MessageId\"N\n\026DestroyMessageRes"
    "ponse\0224\n\007message\030\001 \001(\0132#.bgs.protocol.cl"
    "ub.v1.StreamMessage\"\334\001\n\022EditMessageReque"
    "st\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.club"
    ".v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n"
    "\tstream_id\030\003 \001(\004\022+\n\nmessage_id\030\004 \001(\0132\027.b"
    "gs.protocol.MessageId\022;\n\007options\030\005 \001(\0132*"
    ".bgs.protocol.club.v1.CreateMessageOptio"
    "ns\"K\n\023EditMessageResponse\0224\n\007message\030\001 \001"
    "(\0132#.bgs.protocol.club.v1.StreamMessage\""
    "w\n\027SetMessagePinnedRequest\0220\n\010agent_id\030\001"
    " \001(\0132\036.bgs.protocol.club.v1.MemberId\022\027\n\007"
    "club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004"
    "\"\253\001\n\031SetTypingIndicatorRequest\0220\n\010agent_"
    "id\030\001 \001(\0132\036.bgs.protocol.club.v1.MemberId"
    "\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003"
    " \001(\004\0220\n\tindicator\030\004 \001(\0162\035.bgs.protocol.T"
    "ypingIndicator\"\242\001\n\034AdvanceStreamViewTime"
    "Request\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol"
    ".club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002"
    "\020\001\022 \n\024stream_id_deprecated\030\003 \001(\004B\002\030\001\022\025\n\t"
    "stream_id\030\004 \003(\004B\002\020\001\"\203\001\n#AdvanceStreamMen"
    "tionViewTimeRequest\0220\n\010agent_id\030\001 \001(\0132\036."
    "bgs.protocol.club.v1.MemberId\022\027\n\007club_id"
    "\030\002 \001(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\"k\n\036Adv"
    "anceActivityViewTimeRequest\0220\n\010agent_id\030"
    "\001 \001(\0132\036.bgs.protocol.club.v1.MemberId\022\027\n"
    "\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\"\247\001\n\027GetStreamHist"
    "oryRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\022.\n\007options\030\004 \001("
    "\0132\035.bgs.protocol.GetEventOptions\"f\n\030GetS"
    "treamHistoryResponse\0224\n\007message\030\001 \003(\0132#."
    "bgs.protocol.club.v1.StreamMessage\022\024\n\014co"
    "ntinuation\030\002 \001(\004\"\244\001\n\027GetStreamMessageReq"
    "uest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.protocol.cl"
    "ub.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202\371+\002\020\001\022"
    "\021\n\tstream_id\030\003 \001(\004\022+\n\nmessage_id\030\004 \001(\0132\027"
    ".bgs.protocol.MessageId\"P\n\030GetStreamMess"
    "ageResponse\0224\n\007message\030\001 \001(\0132#.bgs.proto"
    "col.club.v1.StreamMessage\"\223\001\n\026GetClubAct"
    "ivityRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.pro"
    "tocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B"
    "\006\202\371+\002\020\001\022.\n\007options\030\003 \001(\0132\035.bgs.protocol."
    "GetEventOptions\"/\n\027GetClubActivityRespon"
    "se\022\024\n\014continuation\030\002 \001(\004\"\247\001\n\032GetStreamVo"
    "iceTokenRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs."
    "protocol.club.v1.MemberId\022\027\n\007club_id\030\002 \001"
    "(\004B\006\202\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\022+\n\007version"
    "\030\004 \001(\rB\032\202\371+\026*\024VoiceProviderVersion\"g\n\033Ge"
    "tStreamVoiceTokenResponse\022\023\n\013channel_uri"
    "\030\001 \001(\t\0223\n\013credentials\030\002 \001(\0132\036.bgs.protoc"
    "ol.VoiceCredentials\"\255\001\n\032KickFromStreamVo"
    "iceRequest\0220\n\010agent_id\030\001 \001(\0132\036.bgs.proto"
    "col.club.v1.MemberId\022\027\n\007club_id\030\002 \001(\004B\006\202"
    "\371+\002\020\001\022\021\n\tstream_id\030\003 \001(\004\0221\n\ttarget_id\030\004 "
    "\001(\0132\036.bgs.protocol.club.v1.MemberIdB\002H\002P"
    "\000", 10321);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "club_request.proto", &protobuf_RegisterTypes);
  SubscribeRequest::default_instance_ = new SubscribeRequest();
  UnsubscribeRequest::default_instance_ = new UnsubscribeRequest();
  CreateRequest::default_instance_ = new CreateRequest();
  CreateResponse::default_instance_ = new CreateResponse();
  DestroyRequest::default_instance_ = new DestroyRequest();
  GetDescriptionRequest::default_instance_ = new GetDescriptionRequest();
  GetDescriptionResponse::default_instance_ = new GetDescriptionResponse();
  GetClubTypeRequest::default_instance_ = new GetClubTypeRequest();
  GetClubTypeResponse::default_instance_ = new GetClubTypeResponse();
  UpdateClubStateRequest::default_instance_ = new UpdateClubStateRequest();
  UpdateClubSettingsRequest::default_instance_ = new UpdateClubSettingsRequest();
  AddMemberRequest::default_instance_ = new AddMemberRequest();
  JoinRequest::default_instance_ = new JoinRequest();
  LeaveRequest::default_instance_ = new LeaveRequest();
  KickRequest::default_instance_ = new KickRequest();
  GetMemberRequest::default_instance_ = new GetMemberRequest();
  GetMemberResponse::default_instance_ = new GetMemberResponse();
  GetMembersRequest::default_instance_ = new GetMembersRequest();
  GetMembersResponse::default_instance_ = new GetMembersResponse();
  UpdateMemberStateRequest::default_instance_ = new UpdateMemberStateRequest();
  UpdateSubscriberStateRequest::default_instance_ = new UpdateSubscriberStateRequest();
  AssignRoleRequest::default_instance_ = new AssignRoleRequest();
  UnassignRoleRequest::default_instance_ = new UnassignRoleRequest();
  SendInvitationRequest::default_instance_ = new SendInvitationRequest();
  AcceptInvitationRequest::default_instance_ = new AcceptInvitationRequest();
  DeclineInvitationRequest::default_instance_ = new DeclineInvitationRequest();
  RevokeInvitationRequest::default_instance_ = new RevokeInvitationRequest();
  GetInvitationRequest::default_instance_ = new GetInvitationRequest();
  GetInvitationResponse::default_instance_ = new GetInvitationResponse();
  GetInvitationsRequest::default_instance_ = new GetInvitationsRequest();
  GetInvitationsResponse::default_instance_ = new GetInvitationsResponse();
  SendSuggestionRequest::default_instance_ = new SendSuggestionRequest();
  AcceptSuggestionRequest::default_instance_ = new AcceptSuggestionRequest();
  DeclineSuggestionRequest::default_instance_ = new DeclineSuggestionRequest();
  GetSuggestionRequest::default_instance_ = new GetSuggestionRequest();
  GetSuggestionResponse::default_instance_ = new GetSuggestionResponse();
  GetSuggestionsRequest::default_instance_ = new GetSuggestionsRequest();
  GetSuggestionsResponse::default_instance_ = new GetSuggestionsResponse();
  CreateTicketRequest::default_instance_ = new CreateTicketRequest();
  CreateTicketResponse::default_instance_ = new CreateTicketResponse();
  DestroyTicketRequest::default_instance_ = new DestroyTicketRequest();
  RedeemTicketRequest::default_instance_ = new RedeemTicketRequest();
  GetTicketRequest::default_instance_ = new GetTicketRequest();
  GetTicketResponse::default_instance_ = new GetTicketResponse();
  GetTicketsRequest::default_instance_ = new GetTicketsRequest();
  GetTicketsResponse::default_instance_ = new GetTicketsResponse();
  AddBanRequest::default_instance_ = new AddBanRequest();
  RemoveBanRequest::default_instance_ = new RemoveBanRequest();
  GetBanRequest::default_instance_ = new GetBanRequest();
  GetBanResponse::default_instance_ = new GetBanResponse();
  GetBansRequest::default_instance_ = new GetBansRequest();
  GetBansResponse::default_instance_ = new GetBansResponse();
  SubscribeStreamRequest::default_instance_ = new SubscribeStreamRequest();
  UnsubscribeStreamRequest::default_instance_ = new UnsubscribeStreamRequest();
  CreateStreamRequest::default_instance_ = new CreateStreamRequest();
  CreateStreamResponse::default_instance_ = new CreateStreamResponse();
  DestroyStreamRequest::default_instance_ = new DestroyStreamRequest();
  GetStreamRequest::default_instance_ = new GetStreamRequest();
  GetStreamResponse::default_instance_ = new GetStreamResponse();
  GetStreamsRequest::default_instance_ = new GetStreamsRequest();
  GetStreamsResponse::default_instance_ = new GetStreamsResponse();
  UpdateStreamStateRequest::default_instance_ = new UpdateStreamStateRequest();
  SetStreamFocusRequest::default_instance_ = new SetStreamFocusRequest();
  CreateMessageRequest::default_instance_ = new CreateMessageRequest();
  CreateMessageResponse::default_instance_ = new CreateMessageResponse();
  DestroyMessageRequest::default_instance_ = new DestroyMessageRequest();
  DestroyMessageResponse::default_instance_ = new DestroyMessageResponse();
  EditMessageRequest::default_instance_ = new EditMessageRequest();
  EditMessageResponse::default_instance_ = new EditMessageResponse();
  SetMessagePinnedRequest::default_instance_ = new SetMessagePinnedRequest();
  SetTypingIndicatorRequest::default_instance_ = new SetTypingIndicatorRequest();
  AdvanceStreamViewTimeRequest::default_instance_ = new AdvanceStreamViewTimeRequest();
  AdvanceStreamMentionViewTimeRequest::default_instance_ = new AdvanceStreamMentionViewTimeRequest();
  AdvanceActivityViewTimeRequest::default_instance_ = new AdvanceActivityViewTimeRequest();
  GetStreamHistoryRequest::default_instance_ = new GetStreamHistoryRequest();
  GetStreamHistoryResponse::default_instance_ = new GetStreamHistoryResponse();
  GetStreamMessageRequest::default_instance_ = new GetStreamMessageRequest();
  GetStreamMessageResponse::default_instance_ = new GetStreamMessageResponse();
  GetClubActivityRequest::default_instance_ = new GetClubActivityRequest();
  GetClubActivityResponse::default_instance_ = new GetClubActivityResponse();
  GetStreamVoiceTokenRequest::default_instance_ = new GetStreamVoiceTokenRequest();
  GetStreamVoiceTokenResponse::default_instance_ = new GetStreamVoiceTokenResponse();
  KickFromStreamVoiceRequest::default_instance_ = new KickFromStreamVoiceRequest();
  SubscribeRequest::default_instance_->InitAsDefaultInstance();
  UnsubscribeRequest::default_instance_->InitAsDefaultInstance();
  CreateRequest::default_instance_->InitAsDefaultInstance();
  CreateResponse::default_instance_->InitAsDefaultInstance();
  DestroyRequest::default_instance_->InitAsDefaultInstance();
  GetDescriptionRequest::default_instance_->InitAsDefaultInstance();
  GetDescriptionResponse::default_instance_->InitAsDefaultInstance();
  GetClubTypeRequest::default_instance_->InitAsDefaultInstance();
  GetClubTypeResponse::default_instance_->InitAsDefaultInstance();
  UpdateClubStateRequest::default_instance_->InitAsDefaultInstance();
  UpdateClubSettingsRequest::default_instance_->InitAsDefaultInstance();
  AddMemberRequest::default_instance_->InitAsDefaultInstance();
  JoinRequest::default_instance_->InitAsDefaultInstance();
  LeaveRequest::default_instance_->InitAsDefaultInstance();
  KickRequest::default_instance_->InitAsDefaultInstance();
  GetMemberRequest::default_instance_->InitAsDefaultInstance();
  GetMemberResponse::default_instance_->InitAsDefaultInstance();
  GetMembersRequest::default_instance_->InitAsDefaultInstance();
  GetMembersResponse::default_instance_->InitAsDefaultInstance();
  UpdateMemberStateRequest::default_instance_->InitAsDefaultInstance();
  UpdateSubscriberStateRequest::default_instance_->InitAsDefaultInstance();
  AssignRoleRequest::default_instance_->InitAsDefaultInstance();
  UnassignRoleRequest::default_instance_->InitAsDefaultInstance();
  SendInvitationRequest::default_instance_->InitAsDefaultInstance();
  AcceptInvitationRequest::default_instance_->InitAsDefaultInstance();
  DeclineInvitationRequest::default_instance_->InitAsDefaultInstance();
  RevokeInvitationRequest::default_instance_->InitAsDefaultInstance();
  GetInvitationRequest::default_instance_->InitAsDefaultInstance();
  GetInvitationResponse::default_instance_->InitAsDefaultInstance();
  GetInvitationsRequest::default_instance_->InitAsDefaultInstance();
  GetInvitationsResponse::default_instance_->InitAsDefaultInstance();
  SendSuggestionRequest::default_instance_->InitAsDefaultInstance();
  AcceptSuggestionRequest::default_instance_->InitAsDefaultInstance();
  DeclineSuggestionRequest::default_instance_->InitAsDefaultInstance();
  GetSuggestionRequest::default_instance_->InitAsDefaultInstance();
  GetSuggestionResponse::default_instance_->InitAsDefaultInstance();
  GetSuggestionsRequest::default_instance_->InitAsDefaultInstance();
  GetSuggestionsResponse::default_instance_->InitAsDefaultInstance();
  CreateTicketRequest::default_instance_->InitAsDefaultInstance();
  CreateTicketResponse::default_instance_->InitAsDefaultInstance();
  DestroyTicketRequest::default_instance_->InitAsDefaultInstance();
  RedeemTicketRequest::default_instance_->InitAsDefaultInstance();
  GetTicketRequest::default_instance_->InitAsDefaultInstance();
  GetTicketResponse::default_instance_->InitAsDefaultInstance();
  GetTicketsRequest::default_instance_->InitAsDefaultInstance();
  GetTicketsResponse::default_instance_->InitAsDefaultInstance();
  AddBanRequest::default_instance_->InitAsDefaultInstance();
  RemoveBanRequest::default_instance_->InitAsDefaultInstance();
  GetBanRequest::default_instance_->InitAsDefaultInstance();
  GetBanResponse::default_instance_->InitAsDefaultInstance();
  GetBansRequest::default_instance_->InitAsDefaultInstance();
  GetBansResponse::default_instance_->InitAsDefaultInstance();
  SubscribeStreamRequest::default_instance_->InitAsDefaultInstance();
  UnsubscribeStreamRequest::default_instance_->InitAsDefaultInstance();
  CreateStreamRequest::default_instance_->InitAsDefaultInstance();
  CreateStreamResponse::default_instance_->InitAsDefaultInstance();
  DestroyStreamRequest::default_instance_->InitAsDefaultInstance();
  GetStreamRequest::default_instance_->InitAsDefaultInstance();
  GetStreamResponse::default_instance_->InitAsDefaultInstance();
  GetStreamsRequest::default_instance_->InitAsDefaultInstance();
  GetStreamsResponse::default_instance_->InitAsDefaultInstance();
  UpdateStreamStateRequest::default_instance_->InitAsDefaultInstance();
  SetStreamFocusRequest::default_instance_->InitAsDefaultInstance();
  CreateMessageRequest::default_instance_->InitAsDefaultInstance();
  CreateMessageResponse::default_instance_->InitAsDefaultInstance();
  DestroyMessageRequest::default_instance_->InitAsDefaultInstance();
  DestroyMessageResponse::default_instance_->InitAsDefaultInstance();
  EditMessageRequest::default_instance_->InitAsDefaultInstance();
  EditMessageResponse::default_instance_->InitAsDefaultInstance();
  SetMessagePinnedRequest::default_instance_->InitAsDefaultInstance();
  SetTypingIndicatorRequest::default_instance_->InitAsDefaultInstance();
  AdvanceStreamViewTimeRequest::default_instance_->InitAsDefaultInstance();
  AdvanceStreamMentionViewTimeRequest::default_instance_->InitAsDefaultInstance();
  AdvanceActivityViewTimeRequest::default_instance_->InitAsDefaultInstance();
  GetStreamHistoryRequest::default_instance_->InitAsDefaultInstance();
  GetStreamHistoryResponse::default_instance_->InitAsDefaultInstance();
  GetStreamMessageRequest::default_instance_->InitAsDefaultInstance();
  GetStreamMessageResponse::default_instance_->InitAsDefaultInstance();
  GetClubActivityRequest::default_instance_->InitAsDefaultInstance();
  GetClubActivityResponse::default_instance_->InitAsDefaultInstance();
  GetStreamVoiceTokenRequest::default_instance_->InitAsDefaultInstance();
  GetStreamVoiceTokenResponse::default_instance_->InitAsDefaultInstance();
  KickFromStreamVoiceRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_club_5frequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_club_5frequest_2eproto {
  StaticDescriptorInitializer_club_5frequest_2eproto() {
    protobuf_AddDesc_club_5frequest_2eproto();
  }
} static_descriptor_initializer_club_5frequest_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int SubscribeRequest::kAgentIdFieldNumber;
const int SubscribeRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SubscribeRequest)
}

void SubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeRequest_descriptor_;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SubscribeRequest* SubscribeRequest::default_instance_ = NULL;

SubscribeRequest* SubscribeRequest::New() const {
  return new SubscribeRequest;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeRequest_descriptor_;
  metadata.reflection = SubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeRequest::kAgentIdFieldNumber;
const int UnsubscribeRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeRequest::UnsubscribeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UnsubscribeRequest)
}

void UnsubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UnsubscribeRequest)
  SharedDtor();
}

void UnsubscribeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void UnsubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeRequest_descriptor_;
}

const UnsubscribeRequest& UnsubscribeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UnsubscribeRequest* UnsubscribeRequest::default_instance_ = NULL;

UnsubscribeRequest* UnsubscribeRequest::New() const {
  return new UnsubscribeRequest;
}

void UnsubscribeRequest::Swap(UnsubscribeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeRequest_descriptor_;
  metadata.reflection = UnsubscribeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateRequest::kAgentIdFieldNumber;
const int CreateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

CreateRequest::CreateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateRequest)
}

void CreateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::ClubCreateOptions*>(&::bgs::protocol::club::v1::ClubCreateOptions::default_instance());
}

CreateRequest::CreateRequest(const CreateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateRequest)
}

void CreateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateRequest::~CreateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateRequest)
  SharedDtor();
}

void CreateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void CreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateRequest_descriptor_;
}

const CreateRequest& CreateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateRequest* CreateRequest::default_instance_ = NULL;

CreateRequest* CreateRequest::New() const {
  return new CreateRequest;
}

void CreateRequest::Swap(CreateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateRequest_descriptor_;
  metadata.reflection = CreateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateResponse::kClubIdFieldNumber;
#endif  // !_MSC_VER

CreateResponse::CreateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateResponse)
}

void CreateResponse::InitAsDefaultInstance() {
}

CreateResponse::CreateResponse(const CreateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateResponse)
}

void CreateResponse::SharedCtor() {
  _cached_size_ = 0;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateResponse::~CreateResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateResponse)
  SharedDtor();
}

void CreateResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateResponse_descriptor_;
}

const CreateResponse& CreateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateResponse* CreateResponse::default_instance_ = NULL;

CreateResponse* CreateResponse::New() const {
  return new CreateResponse;
}

void CreateResponse::Swap(CreateResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateResponse_descriptor_;
  metadata.reflection = CreateResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DestroyRequest::kAgentIdFieldNumber;
const int DestroyRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

DestroyRequest::DestroyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DestroyRequest)
}

void DestroyRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

DestroyRequest::DestroyRequest(const DestroyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DestroyRequest)
}

void DestroyRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyRequest::~DestroyRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DestroyRequest)
  SharedDtor();
}

void DestroyRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DestroyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyRequest_descriptor_;
}

const DestroyRequest& DestroyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DestroyRequest* DestroyRequest::default_instance_ = NULL;

DestroyRequest* DestroyRequest::New() const {
  return new DestroyRequest;
}

void DestroyRequest::Swap(DestroyRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DestroyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyRequest_descriptor_;
  metadata.reflection = DestroyRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetDescriptionRequest::kAgentIdFieldNumber;
const int GetDescriptionRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

GetDescriptionRequest::GetDescriptionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetDescriptionRequest)
}

void GetDescriptionRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetDescriptionRequest::GetDescriptionRequest(const GetDescriptionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetDescriptionRequest)
}

void GetDescriptionRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDescriptionRequest::~GetDescriptionRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetDescriptionRequest)
  SharedDtor();
}

void GetDescriptionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetDescriptionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDescriptionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDescriptionRequest_descriptor_;
}

const GetDescriptionRequest& GetDescriptionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetDescriptionRequest* GetDescriptionRequest::default_instance_ = NULL;

GetDescriptionRequest* GetDescriptionRequest::New() const {
  return new GetDescriptionRequest;
}

void GetDescriptionRequest::Swap(GetDescriptionRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetDescriptionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDescriptionRequest_descriptor_;
  metadata.reflection = GetDescriptionRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetDescriptionResponse::kClubFieldNumber;
#endif  // !_MSC_VER

GetDescriptionResponse::GetDescriptionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetDescriptionResponse)
}

void GetDescriptionResponse::InitAsDefaultInstance() {
  club_ = const_cast< ::bgs::protocol::club::v1::ClubDescription*>(&::bgs::protocol::club::v1::ClubDescription::default_instance());
}

GetDescriptionResponse::GetDescriptionResponse(const GetDescriptionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetDescriptionResponse)
}

void GetDescriptionResponse::SharedCtor() {
  _cached_size_ = 0;
  club_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDescriptionResponse::~GetDescriptionResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetDescriptionResponse)
  SharedDtor();
}

void GetDescriptionResponse::SharedDtor() {
  if (this != default_instance_) {
    delete club_;
  }
}

void GetDescriptionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDescriptionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDescriptionResponse_descriptor_;
}

const GetDescriptionResponse& GetDescriptionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetDescriptionResponse* GetDescriptionResponse::default_instance_ = NULL;

GetDescriptionResponse* GetDescriptionResponse::New() const {
  return new GetDescriptionResponse;
}

void GetDescriptionResponse::Swap(GetDescriptionResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetDescriptionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDescriptionResponse_descriptor_;
  metadata.reflection = GetDescriptionResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetClubTypeRequest::kAgentIdFieldNumber;
const int GetClubTypeRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

GetClubTypeRequest::GetClubTypeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetClubTypeRequest)
}

void GetClubTypeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  type_ = const_cast< ::bgs::protocol::club::v1::UniqueClubType*>(&::bgs::protocol::club::v1::UniqueClubType::default_instance());
}

GetClubTypeRequest::GetClubTypeRequest(const GetClubTypeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetClubTypeRequest)
}

void GetClubTypeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  type_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClubTypeRequest::~GetClubTypeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetClubTypeRequest)
  SharedDtor();
}

void GetClubTypeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete type_;
  }
}

void GetClubTypeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClubTypeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClubTypeRequest_descriptor_;
}

const GetClubTypeRequest& GetClubTypeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetClubTypeRequest* GetClubTypeRequest::default_instance_ = NULL;

GetClubTypeRequest* GetClubTypeRequest::New() const {
  return new GetClubTypeRequest;
}

void GetClubTypeRequest::Swap(GetClubTypeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetClubTypeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClubTypeRequest_descriptor_;
  metadata.reflection = GetClubTypeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetClubTypeResponse::kTypeFieldNumber;
const int GetClubTypeResponse::kRoleSetFieldNumber;
const int GetClubTypeResponse::kRangeSetFieldNumber;
#endif  // !_MSC_VER

GetClubTypeResponse::GetClubTypeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetClubTypeResponse)
}

void GetClubTypeResponse::InitAsDefaultInstance() {
  type_ = const_cast< ::bgs::protocol::club::v1::UniqueClubType*>(&::bgs::protocol::club::v1::UniqueClubType::default_instance());
  role_set_ = const_cast< ::bgs::protocol::club::v1::ClubRoleSet*>(&::bgs::protocol::club::v1::ClubRoleSet::default_instance());
  range_set_ = const_cast< ::bgs::protocol::club::v1::ClubTypeRangeSet*>(&::bgs::protocol::club::v1::ClubTypeRangeSet::default_instance());
}

GetClubTypeResponse::GetClubTypeResponse(const GetClubTypeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetClubTypeResponse)
}

void GetClubTypeResponse::SharedCtor() {
  _cached_size_ = 0;
  type_ = NULL;
  role_set_ = NULL;
  range_set_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClubTypeResponse::~GetClubTypeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetClubTypeResponse)
  SharedDtor();
}

void GetClubTypeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete type_;
    delete role_set_;
    delete range_set_;
  }
}

void GetClubTypeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClubTypeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClubTypeResponse_descriptor_;
}

const GetClubTypeResponse& GetClubTypeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetClubTypeResponse* GetClubTypeResponse::default_instance_ = NULL;

GetClubTypeResponse* GetClubTypeResponse::New() const {
  return new GetClubTypeResponse;
}

void GetClubTypeResponse::Swap(GetClubTypeResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetClubTypeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClubTypeResponse_descriptor_;
  metadata.reflection = GetClubTypeResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateClubStateRequest::kAgentIdFieldNumber;
const int UpdateClubStateRequest::kClubIdFieldNumber;
const int UpdateClubStateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateClubStateRequest::UpdateClubStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UpdateClubStateRequest)
}

void UpdateClubStateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::ClubStateOptions*>(&::bgs::protocol::club::v1::ClubStateOptions::default_instance());
}

UpdateClubStateRequest::UpdateClubStateRequest(const UpdateClubStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UpdateClubStateRequest)
}

void UpdateClubStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateClubStateRequest::~UpdateClubStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UpdateClubStateRequest)
  SharedDtor();
}

void UpdateClubStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void UpdateClubStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClubStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateClubStateRequest_descriptor_;
}

const UpdateClubStateRequest& UpdateClubStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UpdateClubStateRequest* UpdateClubStateRequest::default_instance_ = NULL;

UpdateClubStateRequest* UpdateClubStateRequest::New() const {
  return new UpdateClubStateRequest;
}

void UpdateClubStateRequest::Swap(UpdateClubStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateClubStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateClubStateRequest_descriptor_;
  metadata.reflection = UpdateClubStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateClubSettingsRequest::kAgentIdFieldNumber;
const int UpdateClubSettingsRequest::kClubIdFieldNumber;
const int UpdateClubSettingsRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateClubSettingsRequest::UpdateClubSettingsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UpdateClubSettingsRequest)
}

void UpdateClubSettingsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::ClubSettingsOptions*>(&::bgs::protocol::club::v1::ClubSettingsOptions::default_instance());
}

UpdateClubSettingsRequest::UpdateClubSettingsRequest(const UpdateClubSettingsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UpdateClubSettingsRequest)
}

void UpdateClubSettingsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateClubSettingsRequest::~UpdateClubSettingsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UpdateClubSettingsRequest)
  SharedDtor();
}

void UpdateClubSettingsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void UpdateClubSettingsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClubSettingsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateClubSettingsRequest_descriptor_;
}

const UpdateClubSettingsRequest& UpdateClubSettingsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UpdateClubSettingsRequest* UpdateClubSettingsRequest::default_instance_ = NULL;

UpdateClubSettingsRequest* UpdateClubSettingsRequest::New() const {
  return new UpdateClubSettingsRequest;
}

void UpdateClubSettingsRequest::Swap(UpdateClubSettingsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateClubSettingsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateClubSettingsRequest_descriptor_;
  metadata.reflection = UpdateClubSettingsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AddMemberRequest::kAgentIdFieldNumber;
const int AddMemberRequest::kClubIdFieldNumber;
const int AddMemberRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

AddMemberRequest::AddMemberRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AddMemberRequest)
}

void AddMemberRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateMemberOptions*>(&::bgs::protocol::club::v1::CreateMemberOptions::default_instance());
}

AddMemberRequest::AddMemberRequest(const AddMemberRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AddMemberRequest)
}

void AddMemberRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddMemberRequest::~AddMemberRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AddMemberRequest)
  SharedDtor();
}

void AddMemberRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void AddMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMemberRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddMemberRequest_descriptor_;
}

const AddMemberRequest& AddMemberRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AddMemberRequest* AddMemberRequest::default_instance_ = NULL;

AddMemberRequest* AddMemberRequest::New() const {
  return new AddMemberRequest;
}

void AddMemberRequest::Swap(AddMemberRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AddMemberRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddMemberRequest_descriptor_;
  metadata.reflection = AddMemberRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int JoinRequest::kAgentIdFieldNumber;
const int JoinRequest::kClubIdFieldNumber;
const int JoinRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

JoinRequest::JoinRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.JoinRequest)
}

void JoinRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateMemberOptions*>(&::bgs::protocol::club::v1::CreateMemberOptions::default_instance());
}

JoinRequest::JoinRequest(const JoinRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.JoinRequest)
}

void JoinRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinRequest::~JoinRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.JoinRequest)
  SharedDtor();
}

void JoinRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void JoinRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinRequest_descriptor_;
}

const JoinRequest& JoinRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

JoinRequest* JoinRequest::default_instance_ = NULL;

JoinRequest* JoinRequest::New() const {
  return new JoinRequest;
}

void JoinRequest::Swap(JoinRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata JoinRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinRequest_descriptor_;
  metadata.reflection = JoinRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int LeaveRequest::kAgentIdFieldNumber;
const int LeaveRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

LeaveRequest::LeaveRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.LeaveRequest)
}

void LeaveRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

LeaveRequest::LeaveRequest(const LeaveRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.LeaveRequest)
}

void LeaveRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveRequest::~LeaveRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.LeaveRequest)
  SharedDtor();
}

void LeaveRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void LeaveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveRequest_descriptor_;
}

const LeaveRequest& LeaveRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

LeaveRequest* LeaveRequest::default_instance_ = NULL;

LeaveRequest* LeaveRequest::New() const {
  return new LeaveRequest;
}

void LeaveRequest::Swap(LeaveRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata LeaveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveRequest_descriptor_;
  metadata.reflection = LeaveRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int KickRequest::kAgentIdFieldNumber;
const int KickRequest::kClubIdFieldNumber;
const int KickRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

KickRequest::KickRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.KickRequest)
}

void KickRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

KickRequest::KickRequest(const KickRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.KickRequest)
}

void KickRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KickRequest::~KickRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.KickRequest)
  SharedDtor();
}

void KickRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void KickRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KickRequest_descriptor_;
}

const KickRequest& KickRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

KickRequest* KickRequest::default_instance_ = NULL;

KickRequest* KickRequest::New() const {
  return new KickRequest;
}

void KickRequest::Swap(KickRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata KickRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KickRequest_descriptor_;
  metadata.reflection = KickRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetMemberRequest::kAgentIdFieldNumber;
const int GetMemberRequest::kClubIdFieldNumber;
const int GetMemberRequest::kMemberIdFieldNumber;
#endif  // !_MSC_VER

GetMemberRequest::GetMemberRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetMemberRequest)
}

void GetMemberRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  member_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetMemberRequest::GetMemberRequest(const GetMemberRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetMemberRequest)
}

void GetMemberRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  member_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMemberRequest::~GetMemberRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetMemberRequest)
  SharedDtor();
}

void GetMemberRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete member_id_;
  }
}

void GetMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMemberRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMemberRequest_descriptor_;
}

const GetMemberRequest& GetMemberRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetMemberRequest* GetMemberRequest::default_instance_ = NULL;

GetMemberRequest* GetMemberRequest::New() const {
  return new GetMemberRequest;
}

void GetMemberRequest::Swap(GetMemberRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetMemberRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMemberRequest_descriptor_;
  metadata.reflection = GetMemberRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetMemberResponse::kMemberFieldNumber;
#endif  // !_MSC_VER

GetMemberResponse::GetMemberResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetMemberResponse)
}

void GetMemberResponse::InitAsDefaultInstance() {
  member_ = const_cast< ::bgs::protocol::club::v1::Member*>(&::bgs::protocol::club::v1::Member::default_instance());
}

GetMemberResponse::GetMemberResponse(const GetMemberResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetMemberResponse)
}

void GetMemberResponse::SharedCtor() {
  _cached_size_ = 0;
  member_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMemberResponse::~GetMemberResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetMemberResponse)
  SharedDtor();
}

void GetMemberResponse::SharedDtor() {
  if (this != default_instance_) {
    delete member_;
  }
}

void GetMemberResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMemberResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMemberResponse_descriptor_;
}

const GetMemberResponse& GetMemberResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetMemberResponse* GetMemberResponse::default_instance_ = NULL;

GetMemberResponse* GetMemberResponse::New() const {
  return new GetMemberResponse;
}

void GetMemberResponse::Swap(GetMemberResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetMemberResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMemberResponse_descriptor_;
  metadata.reflection = GetMemberResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetMembersRequest::kAgentIdFieldNumber;
const int GetMembersRequest::kClubIdFieldNumber;
const int GetMembersRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetMembersRequest::GetMembersRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetMembersRequest)
}

void GetMembersRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetMembersRequest::GetMembersRequest(const GetMembersRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetMembersRequest)
}

void GetMembersRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMembersRequest::~GetMembersRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetMembersRequest)
  SharedDtor();
}

void GetMembersRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetMembersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMembersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMembersRequest_descriptor_;
}

const GetMembersRequest& GetMembersRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetMembersRequest* GetMembersRequest::default_instance_ = NULL;

GetMembersRequest* GetMembersRequest::New() const {
  return new GetMembersRequest;
}

void GetMembersRequest::Swap(GetMembersRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetMembersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMembersRequest_descriptor_;
  metadata.reflection = GetMembersRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetMembersResponse::kMemberFieldNumber;
const int GetMembersResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetMembersResponse::GetMembersResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetMembersResponse)
}

void GetMembersResponse::InitAsDefaultInstance() {
}

GetMembersResponse::GetMembersResponse(const GetMembersResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetMembersResponse)
}

void GetMembersResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMembersResponse::~GetMembersResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetMembersResponse)
  SharedDtor();
}

void GetMembersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMembersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMembersResponse_descriptor_;
}

const GetMembersResponse& GetMembersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetMembersResponse* GetMembersResponse::default_instance_ = NULL;

GetMembersResponse* GetMembersResponse::New() const {
  return new GetMembersResponse;
}

void GetMembersResponse::Swap(GetMembersResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetMembersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMembersResponse_descriptor_;
  metadata.reflection = GetMembersResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateMemberStateRequest::kAgentIdFieldNumber;
const int UpdateMemberStateRequest::kClubIdFieldNumber;
const int UpdateMemberStateRequest::kMemberIdFieldNumber;
const int UpdateMemberStateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateMemberStateRequest::UpdateMemberStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UpdateMemberStateRequest)
}

void UpdateMemberStateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  member_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::MemberStateOptions*>(&::bgs::protocol::club::v1::MemberStateOptions::default_instance());
}

UpdateMemberStateRequest::UpdateMemberStateRequest(const UpdateMemberStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UpdateMemberStateRequest)
}

void UpdateMemberStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  member_id_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateMemberStateRequest::~UpdateMemberStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UpdateMemberStateRequest)
  SharedDtor();
}

void UpdateMemberStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete member_id_;
    delete options_;
  }
}

void UpdateMemberStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateMemberStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateMemberStateRequest_descriptor_;
}

const UpdateMemberStateRequest& UpdateMemberStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UpdateMemberStateRequest* UpdateMemberStateRequest::default_instance_ = NULL;

UpdateMemberStateRequest* UpdateMemberStateRequest::New() const {
  return new UpdateMemberStateRequest;
}

void UpdateMemberStateRequest::Swap(UpdateMemberStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateMemberStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateMemberStateRequest_descriptor_;
  metadata.reflection = UpdateMemberStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateSubscriberStateRequest::kAgentIdFieldNumber;
const int UpdateSubscriberStateRequest::kClubIdFieldNumber;
const int UpdateSubscriberStateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateSubscriberStateRequest::UpdateSubscriberStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UpdateSubscriberStateRequest)
}

void UpdateSubscriberStateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::SubscriberStateOptions*>(&::bgs::protocol::club::v1::SubscriberStateOptions::default_instance());
}

UpdateSubscriberStateRequest::UpdateSubscriberStateRequest(const UpdateSubscriberStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UpdateSubscriberStateRequest)
}

void UpdateSubscriberStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSubscriberStateRequest::~UpdateSubscriberStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UpdateSubscriberStateRequest)
  SharedDtor();
}

void UpdateSubscriberStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void UpdateSubscriberStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSubscriberStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSubscriberStateRequest_descriptor_;
}

const UpdateSubscriberStateRequest& UpdateSubscriberStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UpdateSubscriberStateRequest* UpdateSubscriberStateRequest::default_instance_ = NULL;

UpdateSubscriberStateRequest* UpdateSubscriberStateRequest::New() const {
  return new UpdateSubscriberStateRequest;
}

void UpdateSubscriberStateRequest::Swap(UpdateSubscriberStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateSubscriberStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSubscriberStateRequest_descriptor_;
  metadata.reflection = UpdateSubscriberStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AssignRoleRequest::kAgentIdFieldNumber;
const int AssignRoleRequest::kClubIdFieldNumber;
const int AssignRoleRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

AssignRoleRequest::AssignRoleRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AssignRoleRequest)
}

void AssignRoleRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::RoleOptions*>(&::bgs::protocol::club::v1::RoleOptions::default_instance());
}

AssignRoleRequest::AssignRoleRequest(const AssignRoleRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AssignRoleRequest)
}

void AssignRoleRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssignRoleRequest::~AssignRoleRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AssignRoleRequest)
  SharedDtor();
}

void AssignRoleRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void AssignRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssignRoleRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssignRoleRequest_descriptor_;
}

const AssignRoleRequest& AssignRoleRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AssignRoleRequest* AssignRoleRequest::default_instance_ = NULL;

AssignRoleRequest* AssignRoleRequest::New() const {
  return new AssignRoleRequest;
}

void AssignRoleRequest::Swap(AssignRoleRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AssignRoleRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssignRoleRequest_descriptor_;
  metadata.reflection = AssignRoleRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnassignRoleRequest::kAgentIdFieldNumber;
const int UnassignRoleRequest::kClubIdFieldNumber;
const int UnassignRoleRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UnassignRoleRequest::UnassignRoleRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UnassignRoleRequest)
}

void UnassignRoleRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::RoleOptions*>(&::bgs::protocol::club::v1::RoleOptions::default_instance());
}

UnassignRoleRequest::UnassignRoleRequest(const UnassignRoleRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UnassignRoleRequest)
}

void UnassignRoleRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnassignRoleRequest::~UnassignRoleRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UnassignRoleRequest)
  SharedDtor();
}

void UnassignRoleRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void UnassignRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnassignRoleRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnassignRoleRequest_descriptor_;
}

const UnassignRoleRequest& UnassignRoleRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UnassignRoleRequest* UnassignRoleRequest::default_instance_ = NULL;

UnassignRoleRequest* UnassignRoleRequest::New() const {
  return new UnassignRoleRequest;
}

void UnassignRoleRequest::Swap(UnassignRoleRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnassignRoleRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnassignRoleRequest_descriptor_;
  metadata.reflection = UnassignRoleRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SendInvitationRequest::kAgentIdFieldNumber;
const int SendInvitationRequest::kClubIdFieldNumber;
const int SendInvitationRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

SendInvitationRequest::SendInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SendInvitationRequest)
}

void SendInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::SendInvitationOptions*>(&::bgs::protocol::club::v1::SendInvitationOptions::default_instance());
}

SendInvitationRequest::SendInvitationRequest(const SendInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SendInvitationRequest)
}

void SendInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendInvitationRequest::~SendInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SendInvitationRequest)
  SharedDtor();
}

void SendInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void SendInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendInvitationRequest_descriptor_;
}

const SendInvitationRequest& SendInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SendInvitationRequest* SendInvitationRequest::default_instance_ = NULL;

SendInvitationRequest* SendInvitationRequest::New() const {
  return new SendInvitationRequest;
}

void SendInvitationRequest::Swap(SendInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SendInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendInvitationRequest_descriptor_;
  metadata.reflection = SendInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AcceptInvitationRequest::kAgentIdFieldNumber;
const int AcceptInvitationRequest::kClubIdFieldNumber;
const int AcceptInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

AcceptInvitationRequest::AcceptInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AcceptInvitationRequest)
}

void AcceptInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

AcceptInvitationRequest::AcceptInvitationRequest(const AcceptInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AcceptInvitationRequest)
}

void AcceptInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptInvitationRequest::~AcceptInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AcceptInvitationRequest)
  SharedDtor();
}

void AcceptInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AcceptInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptInvitationRequest_descriptor_;
}

const AcceptInvitationRequest& AcceptInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AcceptInvitationRequest* AcceptInvitationRequest::default_instance_ = NULL;

AcceptInvitationRequest* AcceptInvitationRequest::New() const {
  return new AcceptInvitationRequest;
}

void AcceptInvitationRequest::Swap(AcceptInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AcceptInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptInvitationRequest_descriptor_;
  metadata.reflection = AcceptInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DeclineInvitationRequest::kAgentIdFieldNumber;
const int DeclineInvitationRequest::kClubIdFieldNumber;
const int DeclineInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

DeclineInvitationRequest::DeclineInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DeclineInvitationRequest)
}

void DeclineInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

DeclineInvitationRequest::DeclineInvitationRequest(const DeclineInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DeclineInvitationRequest)
}

void DeclineInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeclineInvitationRequest::~DeclineInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DeclineInvitationRequest)
  SharedDtor();
}

void DeclineInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DeclineInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclineInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeclineInvitationRequest_descriptor_;
}

const DeclineInvitationRequest& DeclineInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DeclineInvitationRequest* DeclineInvitationRequest::default_instance_ = NULL;

DeclineInvitationRequest* DeclineInvitationRequest::New() const {
  return new DeclineInvitationRequest;
}

void DeclineInvitationRequest::Swap(DeclineInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DeclineInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeclineInvitationRequest_descriptor_;
  metadata.reflection = DeclineInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RevokeInvitationRequest::kAgentIdFieldNumber;
const int RevokeInvitationRequest::kClubIdFieldNumber;
const int RevokeInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

RevokeInvitationRequest::RevokeInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.RevokeInvitationRequest)
}

void RevokeInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

RevokeInvitationRequest::RevokeInvitationRequest(const RevokeInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.RevokeInvitationRequest)
}

void RevokeInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RevokeInvitationRequest::~RevokeInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.RevokeInvitationRequest)
  SharedDtor();
}

void RevokeInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void RevokeInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RevokeInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RevokeInvitationRequest_descriptor_;
}

const RevokeInvitationRequest& RevokeInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

RevokeInvitationRequest* RevokeInvitationRequest::default_instance_ = NULL;

RevokeInvitationRequest* RevokeInvitationRequest::New() const {
  return new RevokeInvitationRequest;
}

void RevokeInvitationRequest::Swap(RevokeInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RevokeInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RevokeInvitationRequest_descriptor_;
  metadata.reflection = RevokeInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetInvitationRequest::kAgentIdFieldNumber;
const int GetInvitationRequest::kClubIdFieldNumber;
const int GetInvitationRequest::kInvitationIdFieldNumber;
#endif  // !_MSC_VER

GetInvitationRequest::GetInvitationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetInvitationRequest)
}

void GetInvitationRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetInvitationRequest::GetInvitationRequest(const GetInvitationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetInvitationRequest)
}

void GetInvitationRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  invitation_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationRequest::~GetInvitationRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetInvitationRequest)
  SharedDtor();
}

void GetInvitationRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationRequest_descriptor_;
}

const GetInvitationRequest& GetInvitationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetInvitationRequest* GetInvitationRequest::default_instance_ = NULL;

GetInvitationRequest* GetInvitationRequest::New() const {
  return new GetInvitationRequest;
}

void GetInvitationRequest::Swap(GetInvitationRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetInvitationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationRequest_descriptor_;
  metadata.reflection = GetInvitationRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetInvitationResponse::kInvitationFieldNumber;
#endif  // !_MSC_VER

GetInvitationResponse::GetInvitationResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetInvitationResponse)
}

void GetInvitationResponse::InitAsDefaultInstance() {
  invitation_ = const_cast< ::bgs::protocol::club::v1::ClubInvitation*>(&::bgs::protocol::club::v1::ClubInvitation::default_instance());
}

GetInvitationResponse::GetInvitationResponse(const GetInvitationResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetInvitationResponse)
}

void GetInvitationResponse::SharedCtor() {
  _cached_size_ = 0;
  invitation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationResponse::~GetInvitationResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetInvitationResponse)
  SharedDtor();
}

void GetInvitationResponse::SharedDtor() {
  if (this != default_instance_) {
    delete invitation_;
  }
}

void GetInvitationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationResponse_descriptor_;
}

const GetInvitationResponse& GetInvitationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetInvitationResponse* GetInvitationResponse::default_instance_ = NULL;

GetInvitationResponse* GetInvitationResponse::New() const {
  return new GetInvitationResponse;
}

void GetInvitationResponse::Swap(GetInvitationResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetInvitationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationResponse_descriptor_;
  metadata.reflection = GetInvitationResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetInvitationsRequest::kAgentIdFieldNumber;
const int GetInvitationsRequest::kClubIdFieldNumber;
const int GetInvitationsRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetInvitationsRequest::GetInvitationsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetInvitationsRequest)
}

void GetInvitationsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetInvitationsRequest::GetInvitationsRequest(const GetInvitationsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetInvitationsRequest)
}

void GetInvitationsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationsRequest::~GetInvitationsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetInvitationsRequest)
  SharedDtor();
}

void GetInvitationsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetInvitationsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationsRequest_descriptor_;
}

const GetInvitationsRequest& GetInvitationsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetInvitationsRequest* GetInvitationsRequest::default_instance_ = NULL;

GetInvitationsRequest* GetInvitationsRequest::New() const {
  return new GetInvitationsRequest;
}

void GetInvitationsRequest::Swap(GetInvitationsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetInvitationsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationsRequest_descriptor_;
  metadata.reflection = GetInvitationsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetInvitationsResponse::kInvitationFieldNumber;
const int GetInvitationsResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetInvitationsResponse::GetInvitationsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetInvitationsResponse)
}

void GetInvitationsResponse::InitAsDefaultInstance() {
}

GetInvitationsResponse::GetInvitationsResponse(const GetInvitationsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetInvitationsResponse)
}

void GetInvitationsResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationsResponse::~GetInvitationsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetInvitationsResponse)
  SharedDtor();
}

void GetInvitationsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetInvitationsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationsResponse_descriptor_;
}

const GetInvitationsResponse& GetInvitationsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetInvitationsResponse* GetInvitationsResponse::default_instance_ = NULL;

GetInvitationsResponse* GetInvitationsResponse::New() const {
  return new GetInvitationsResponse;
}

void GetInvitationsResponse::Swap(GetInvitationsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetInvitationsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationsResponse_descriptor_;
  metadata.reflection = GetInvitationsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SendSuggestionRequest::kAgentIdFieldNumber;
const int SendSuggestionRequest::kClubIdFieldNumber;
const int SendSuggestionRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

SendSuggestionRequest::SendSuggestionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SendSuggestionRequest)
}

void SendSuggestionRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::SendSuggestionOptions*>(&::bgs::protocol::club::v1::SendSuggestionOptions::default_instance());
}

SendSuggestionRequest::SendSuggestionRequest(const SendSuggestionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SendSuggestionRequest)
}

void SendSuggestionRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendSuggestionRequest::~SendSuggestionRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SendSuggestionRequest)
  SharedDtor();
}

void SendSuggestionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void SendSuggestionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendSuggestionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendSuggestionRequest_descriptor_;
}

const SendSuggestionRequest& SendSuggestionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SendSuggestionRequest* SendSuggestionRequest::default_instance_ = NULL;

SendSuggestionRequest* SendSuggestionRequest::New() const {
  return new SendSuggestionRequest;
}

void SendSuggestionRequest::Swap(SendSuggestionRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SendSuggestionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendSuggestionRequest_descriptor_;
  metadata.reflection = SendSuggestionRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AcceptSuggestionRequest::kAgentIdFieldNumber;
const int AcceptSuggestionRequest::kClubIdFieldNumber;
const int AcceptSuggestionRequest::kSuggestionIdFieldNumber;
#endif  // !_MSC_VER

AcceptSuggestionRequest::AcceptSuggestionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AcceptSuggestionRequest)
}

void AcceptSuggestionRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

AcceptSuggestionRequest::AcceptSuggestionRequest(const AcceptSuggestionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AcceptSuggestionRequest)
}

void AcceptSuggestionRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptSuggestionRequest::~AcceptSuggestionRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AcceptSuggestionRequest)
  SharedDtor();
}

void AcceptSuggestionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AcceptSuggestionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptSuggestionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptSuggestionRequest_descriptor_;
}

const AcceptSuggestionRequest& AcceptSuggestionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AcceptSuggestionRequest* AcceptSuggestionRequest::default_instance_ = NULL;

AcceptSuggestionRequest* AcceptSuggestionRequest::New() const {
  return new AcceptSuggestionRequest;
}

void AcceptSuggestionRequest::Swap(AcceptSuggestionRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AcceptSuggestionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptSuggestionRequest_descriptor_;
  metadata.reflection = AcceptSuggestionRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DeclineSuggestionRequest::kAgentIdFieldNumber;
const int DeclineSuggestionRequest::kClubIdFieldNumber;
const int DeclineSuggestionRequest::kSuggestionIdFieldNumber;
#endif  // !_MSC_VER

DeclineSuggestionRequest::DeclineSuggestionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DeclineSuggestionRequest)
}

void DeclineSuggestionRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

DeclineSuggestionRequest::DeclineSuggestionRequest(const DeclineSuggestionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DeclineSuggestionRequest)
}

void DeclineSuggestionRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeclineSuggestionRequest::~DeclineSuggestionRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DeclineSuggestionRequest)
  SharedDtor();
}

void DeclineSuggestionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DeclineSuggestionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclineSuggestionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeclineSuggestionRequest_descriptor_;
}

const DeclineSuggestionRequest& DeclineSuggestionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DeclineSuggestionRequest* DeclineSuggestionRequest::default_instance_ = NULL;

DeclineSuggestionRequest* DeclineSuggestionRequest::New() const {
  return new DeclineSuggestionRequest;
}

void DeclineSuggestionRequest::Swap(DeclineSuggestionRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DeclineSuggestionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeclineSuggestionRequest_descriptor_;
  metadata.reflection = DeclineSuggestionRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSuggestionRequest::kAgentIdFieldNumber;
const int GetSuggestionRequest::kClubIdFieldNumber;
const int GetSuggestionRequest::kSuggestionIdFieldNumber;
#endif  // !_MSC_VER

GetSuggestionRequest::GetSuggestionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetSuggestionRequest)
}

void GetSuggestionRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetSuggestionRequest::GetSuggestionRequest(const GetSuggestionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetSuggestionRequest)
}

void GetSuggestionRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  suggestion_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSuggestionRequest::~GetSuggestionRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetSuggestionRequest)
  SharedDtor();
}

void GetSuggestionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetSuggestionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSuggestionRequest_descriptor_;
}

const GetSuggestionRequest& GetSuggestionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetSuggestionRequest* GetSuggestionRequest::default_instance_ = NULL;

GetSuggestionRequest* GetSuggestionRequest::New() const {
  return new GetSuggestionRequest;
}

void GetSuggestionRequest::Swap(GetSuggestionRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSuggestionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSuggestionRequest_descriptor_;
  metadata.reflection = GetSuggestionRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSuggestionResponse::kSuggestionFieldNumber;
#endif  // !_MSC_VER

GetSuggestionResponse::GetSuggestionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetSuggestionResponse)
}

void GetSuggestionResponse::InitAsDefaultInstance() {
  suggestion_ = const_cast< ::bgs::protocol::club::v1::ClubSuggestion*>(&::bgs::protocol::club::v1::ClubSuggestion::default_instance());
}

GetSuggestionResponse::GetSuggestionResponse(const GetSuggestionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetSuggestionResponse)
}

void GetSuggestionResponse::SharedCtor() {
  _cached_size_ = 0;
  suggestion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSuggestionResponse::~GetSuggestionResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetSuggestionResponse)
  SharedDtor();
}

void GetSuggestionResponse::SharedDtor() {
  if (this != default_instance_) {
    delete suggestion_;
  }
}

void GetSuggestionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSuggestionResponse_descriptor_;
}

const GetSuggestionResponse& GetSuggestionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetSuggestionResponse* GetSuggestionResponse::default_instance_ = NULL;

GetSuggestionResponse* GetSuggestionResponse::New() const {
  return new GetSuggestionResponse;
}

void GetSuggestionResponse::Swap(GetSuggestionResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSuggestionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSuggestionResponse_descriptor_;
  metadata.reflection = GetSuggestionResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSuggestionsRequest::kAgentIdFieldNumber;
const int GetSuggestionsRequest::kClubIdFieldNumber;
const int GetSuggestionsRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetSuggestionsRequest::GetSuggestionsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetSuggestionsRequest)
}

void GetSuggestionsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetSuggestionsRequest::GetSuggestionsRequest(const GetSuggestionsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetSuggestionsRequest)
}

void GetSuggestionsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSuggestionsRequest::~GetSuggestionsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetSuggestionsRequest)
  SharedDtor();
}

void GetSuggestionsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetSuggestionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSuggestionsRequest_descriptor_;
}

const GetSuggestionsRequest& GetSuggestionsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetSuggestionsRequest* GetSuggestionsRequest::default_instance_ = NULL;

GetSuggestionsRequest* GetSuggestionsRequest::New() const {
  return new GetSuggestionsRequest;
}

void GetSuggestionsRequest::Swap(GetSuggestionsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSuggestionsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSuggestionsRequest_descriptor_;
  metadata.reflection = GetSuggestionsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetSuggestionsResponse::kSuggestionFieldNumber;
const int GetSuggestionsResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetSuggestionsResponse::GetSuggestionsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetSuggestionsResponse)
}

void GetSuggestionsResponse::InitAsDefaultInstance() {
}

GetSuggestionsResponse::GetSuggestionsResponse(const GetSuggestionsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetSuggestionsResponse)
}

void GetSuggestionsResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSuggestionsResponse::~GetSuggestionsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetSuggestionsResponse)
  SharedDtor();
}

void GetSuggestionsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetSuggestionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSuggestionsResponse_descriptor_;
}

const GetSuggestionsResponse& GetSuggestionsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetSuggestionsResponse* GetSuggestionsResponse::default_instance_ = NULL;

GetSuggestionsResponse* GetSuggestionsResponse::New() const {
  return new GetSuggestionsResponse;
}

void GetSuggestionsResponse::Swap(GetSuggestionsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetSuggestionsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSuggestionsResponse_descriptor_;
  metadata.reflection = GetSuggestionsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateTicketRequest::kAgentIdFieldNumber;
const int CreateTicketRequest::kClubIdFieldNumber;
const int CreateTicketRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

CreateTicketRequest::CreateTicketRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateTicketRequest)
}

void CreateTicketRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateTicketOptions*>(&::bgs::protocol::club::v1::CreateTicketOptions::default_instance());
}

CreateTicketRequest::CreateTicketRequest(const CreateTicketRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateTicketRequest)
}

void CreateTicketRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateTicketRequest::~CreateTicketRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateTicketRequest)
  SharedDtor();
}

void CreateTicketRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void CreateTicketRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTicketRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTicketRequest_descriptor_;
}

const CreateTicketRequest& CreateTicketRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateTicketRequest* CreateTicketRequest::default_instance_ = NULL;

CreateTicketRequest* CreateTicketRequest::New() const {
  return new CreateTicketRequest;
}

void CreateTicketRequest::Swap(CreateTicketRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateTicketRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTicketRequest_descriptor_;
  metadata.reflection = CreateTicketRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateTicketResponse::kTicketFieldNumber;
#endif  // !_MSC_VER

CreateTicketResponse::CreateTicketResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateTicketResponse)
}

void CreateTicketResponse::InitAsDefaultInstance() {
  ticket_ = const_cast< ::bgs::protocol::club::v1::ClubTicket*>(&::bgs::protocol::club::v1::ClubTicket::default_instance());
}

CreateTicketResponse::CreateTicketResponse(const CreateTicketResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateTicketResponse)
}

void CreateTicketResponse::SharedCtor() {
  _cached_size_ = 0;
  ticket_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateTicketResponse::~CreateTicketResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateTicketResponse)
  SharedDtor();
}

void CreateTicketResponse::SharedDtor() {
  if (this != default_instance_) {
    delete ticket_;
  }
}

void CreateTicketResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTicketResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTicketResponse_descriptor_;
}

const CreateTicketResponse& CreateTicketResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateTicketResponse* CreateTicketResponse::default_instance_ = NULL;

CreateTicketResponse* CreateTicketResponse::New() const {
  return new CreateTicketResponse;
}

void CreateTicketResponse::Swap(CreateTicketResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateTicketResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTicketResponse_descriptor_;
  metadata.reflection = CreateTicketResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DestroyTicketRequest::kAgentIdFieldNumber;
const int DestroyTicketRequest::kClubIdFieldNumber;
const int DestroyTicketRequest::kTicketIdFieldNumber;
#endif  // !_MSC_VER

DestroyTicketRequest::DestroyTicketRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DestroyTicketRequest)
}

void DestroyTicketRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

DestroyTicketRequest::DestroyTicketRequest(const DestroyTicketRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DestroyTicketRequest)
}

void DestroyTicketRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyTicketRequest::~DestroyTicketRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DestroyTicketRequest)
  SharedDtor();
}

void DestroyTicketRequest::SharedDtor() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DestroyTicketRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyTicketRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyTicketRequest_descriptor_;
}

const DestroyTicketRequest& DestroyTicketRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DestroyTicketRequest* DestroyTicketRequest::default_instance_ = NULL;

DestroyTicketRequest* DestroyTicketRequest::New() const {
  return new DestroyTicketRequest;
}

void DestroyTicketRequest::Swap(DestroyTicketRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DestroyTicketRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyTicketRequest_descriptor_;
  metadata.reflection = DestroyTicketRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RedeemTicketRequest::kAgentIdFieldNumber;
const int RedeemTicketRequest::kTicketIdFieldNumber;
#endif  // !_MSC_VER

RedeemTicketRequest::RedeemTicketRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.RedeemTicketRequest)
}

void RedeemTicketRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

RedeemTicketRequest::RedeemTicketRequest(const RedeemTicketRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.RedeemTicketRequest)
}

void RedeemTicketRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  agent_id_ = NULL;
  ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RedeemTicketRequest::~RedeemTicketRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.RedeemTicketRequest)
  SharedDtor();
}

void RedeemTicketRequest::SharedDtor() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void RedeemTicketRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedeemTicketRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RedeemTicketRequest_descriptor_;
}

const RedeemTicketRequest& RedeemTicketRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

RedeemTicketRequest* RedeemTicketRequest::default_instance_ = NULL;

RedeemTicketRequest* RedeemTicketRequest::New() const {
  return new RedeemTicketRequest;
}

void RedeemTicketRequest::Swap(RedeemTicketRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RedeemTicketRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RedeemTicketRequest_descriptor_;
  metadata.reflection = RedeemTicketRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetTicketRequest::kAgentIdFieldNumber;
const int GetTicketRequest::kTicketIdFieldNumber;
#endif  // !_MSC_VER

GetTicketRequest::GetTicketRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetTicketRequest)
}

void GetTicketRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetTicketRequest::GetTicketRequest(const GetTicketRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetTicketRequest)
}

void GetTicketRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  agent_id_ = NULL;
  ticket_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetTicketRequest::~GetTicketRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetTicketRequest)
  SharedDtor();
}

void GetTicketRequest::SharedDtor() {
  if (ticket_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticket_id_;
  }
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetTicketRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTicketRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTicketRequest_descriptor_;
}

const GetTicketRequest& GetTicketRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetTicketRequest* GetTicketRequest::default_instance_ = NULL;

GetTicketRequest* GetTicketRequest::New() const {
  return new GetTicketRequest;
}

void GetTicketRequest::Swap(GetTicketRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetTicketRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTicketRequest_descriptor_;
  metadata.reflection = GetTicketRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetTicketResponse::kTicketFieldNumber;
#endif  // !_MSC_VER

GetTicketResponse::GetTicketResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetTicketResponse)
}

void GetTicketResponse::InitAsDefaultInstance() {
  ticket_ = const_cast< ::bgs::protocol::club::v1::ClubTicket*>(&::bgs::protocol::club::v1::ClubTicket::default_instance());
}

GetTicketResponse::GetTicketResponse(const GetTicketResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetTicketResponse)
}

void GetTicketResponse::SharedCtor() {
  _cached_size_ = 0;
  ticket_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetTicketResponse::~GetTicketResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetTicketResponse)
  SharedDtor();
}

void GetTicketResponse::SharedDtor() {
  if (this != default_instance_) {
    delete ticket_;
  }
}

void GetTicketResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTicketResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTicketResponse_descriptor_;
}

const GetTicketResponse& GetTicketResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetTicketResponse* GetTicketResponse::default_instance_ = NULL;

GetTicketResponse* GetTicketResponse::New() const {
  return new GetTicketResponse;
}

void GetTicketResponse::Swap(GetTicketResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetTicketResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTicketResponse_descriptor_;
  metadata.reflection = GetTicketResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetTicketsRequest::kAgentIdFieldNumber;
const int GetTicketsRequest::kClubIdFieldNumber;
const int GetTicketsRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetTicketsRequest::GetTicketsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetTicketsRequest)
}

void GetTicketsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetTicketsRequest::GetTicketsRequest(const GetTicketsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetTicketsRequest)
}

void GetTicketsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetTicketsRequest::~GetTicketsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetTicketsRequest)
  SharedDtor();
}

void GetTicketsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetTicketsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTicketsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTicketsRequest_descriptor_;
}

const GetTicketsRequest& GetTicketsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetTicketsRequest* GetTicketsRequest::default_instance_ = NULL;

GetTicketsRequest* GetTicketsRequest::New() const {
  return new GetTicketsRequest;
}

void GetTicketsRequest::Swap(GetTicketsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetTicketsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTicketsRequest_descriptor_;
  metadata.reflection = GetTicketsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetTicketsResponse::kTicketFieldNumber;
const int GetTicketsResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetTicketsResponse::GetTicketsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetTicketsResponse)
}

void GetTicketsResponse::InitAsDefaultInstance() {
}

GetTicketsResponse::GetTicketsResponse(const GetTicketsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetTicketsResponse)
}

void GetTicketsResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetTicketsResponse::~GetTicketsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetTicketsResponse)
  SharedDtor();
}

void GetTicketsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetTicketsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTicketsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTicketsResponse_descriptor_;
}

const GetTicketsResponse& GetTicketsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetTicketsResponse* GetTicketsResponse::default_instance_ = NULL;

GetTicketsResponse* GetTicketsResponse::New() const {
  return new GetTicketsResponse;
}

void GetTicketsResponse::Swap(GetTicketsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetTicketsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTicketsResponse_descriptor_;
  metadata.reflection = GetTicketsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AddBanRequest::kAgentIdFieldNumber;
const int AddBanRequest::kClubIdFieldNumber;
const int AddBanRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

AddBanRequest::AddBanRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AddBanRequest)
}

void AddBanRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::AddBanOptions*>(&::bgs::protocol::club::v1::AddBanOptions::default_instance());
}

AddBanRequest::AddBanRequest(const AddBanRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AddBanRequest)
}

void AddBanRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddBanRequest::~AddBanRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AddBanRequest)
  SharedDtor();
}

void AddBanRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void AddBanRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBanRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddBanRequest_descriptor_;
}

const AddBanRequest& AddBanRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AddBanRequest* AddBanRequest::default_instance_ = NULL;

AddBanRequest* AddBanRequest::New() const {
  return new AddBanRequest;
}

void AddBanRequest::Swap(AddBanRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AddBanRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddBanRequest_descriptor_;
  metadata.reflection = AddBanRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int RemoveBanRequest::kAgentIdFieldNumber;
const int RemoveBanRequest::kClubIdFieldNumber;
const int RemoveBanRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

RemoveBanRequest::RemoveBanRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.RemoveBanRequest)
}

void RemoveBanRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

RemoveBanRequest::RemoveBanRequest(const RemoveBanRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.RemoveBanRequest)
}

void RemoveBanRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveBanRequest::~RemoveBanRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.RemoveBanRequest)
  SharedDtor();
}

void RemoveBanRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void RemoveBanRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveBanRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveBanRequest_descriptor_;
}

const RemoveBanRequest& RemoveBanRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

RemoveBanRequest* RemoveBanRequest::default_instance_ = NULL;

RemoveBanRequest* RemoveBanRequest::New() const {
  return new RemoveBanRequest;
}

void RemoveBanRequest::Swap(RemoveBanRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata RemoveBanRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveBanRequest_descriptor_;
  metadata.reflection = RemoveBanRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetBanRequest::kAgentIdFieldNumber;
const int GetBanRequest::kClubIdFieldNumber;
const int GetBanRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

GetBanRequest::GetBanRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetBanRequest)
}

void GetBanRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetBanRequest::GetBanRequest(const GetBanRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetBanRequest)
}

void GetBanRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBanRequest::~GetBanRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetBanRequest)
  SharedDtor();
}

void GetBanRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void GetBanRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBanRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBanRequest_descriptor_;
}

const GetBanRequest& GetBanRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetBanRequest* GetBanRequest::default_instance_ = NULL;

GetBanRequest* GetBanRequest::New() const {
  return new GetBanRequest;
}

void GetBanRequest::Swap(GetBanRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetBanRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBanRequest_descriptor_;
  metadata.reflection = GetBanRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetBanResponse::kBanFieldNumber;
#endif  // !_MSC_VER

GetBanResponse::GetBanResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetBanResponse)
}

void GetBanResponse::InitAsDefaultInstance() {
  ban_ = const_cast< ::bgs::protocol::club::v1::ClubBan*>(&::bgs::protocol::club::v1::ClubBan::default_instance());
}

GetBanResponse::GetBanResponse(const GetBanResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetBanResponse)
}

void GetBanResponse::SharedCtor() {
  _cached_size_ = 0;
  ban_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBanResponse::~GetBanResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetBanResponse)
  SharedDtor();
}

void GetBanResponse::SharedDtor() {
  if (this != default_instance_) {
    delete ban_;
  }
}

void GetBanResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBanResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBanResponse_descriptor_;
}

const GetBanResponse& GetBanResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetBanResponse* GetBanResponse::default_instance_ = NULL;

GetBanResponse* GetBanResponse::New() const {
  return new GetBanResponse;
}

void GetBanResponse::Swap(GetBanResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetBanResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBanResponse_descriptor_;
  metadata.reflection = GetBanResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetBansRequest::kAgentIdFieldNumber;
const int GetBansRequest::kClubIdFieldNumber;
const int GetBansRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetBansRequest::GetBansRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetBansRequest)
}

void GetBansRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetBansRequest::GetBansRequest(const GetBansRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetBansRequest)
}

void GetBansRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBansRequest::~GetBansRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetBansRequest)
  SharedDtor();
}

void GetBansRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetBansRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBansRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBansRequest_descriptor_;
}

const GetBansRequest& GetBansRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetBansRequest* GetBansRequest::default_instance_ = NULL;

GetBansRequest* GetBansRequest::New() const {
  return new GetBansRequest;
}

void GetBansRequest::Swap(GetBansRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetBansRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBansRequest_descriptor_;
  metadata.reflection = GetBansRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetBansResponse::kBanFieldNumber;
const int GetBansResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetBansResponse::GetBansResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetBansResponse)
}

void GetBansResponse::InitAsDefaultInstance() {
}

GetBansResponse::GetBansResponse(const GetBansResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetBansResponse)
}

void GetBansResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBansResponse::~GetBansResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetBansResponse)
  SharedDtor();
}

void GetBansResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetBansResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBansResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBansResponse_descriptor_;
}

const GetBansResponse& GetBansResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetBansResponse* GetBansResponse::default_instance_ = NULL;

GetBansResponse* GetBansResponse::New() const {
  return new GetBansResponse;
}

void GetBansResponse::Swap(GetBansResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetBansResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBansResponse_descriptor_;
  metadata.reflection = GetBansResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SubscribeStreamRequest::kAgentIdFieldNumber;
const int SubscribeStreamRequest::kClubIdFieldNumber;
const int SubscribeStreamRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

SubscribeStreamRequest::SubscribeStreamRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SubscribeStreamRequest)
}

void SubscribeStreamRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SubscribeStreamRequest::SubscribeStreamRequest(const SubscribeStreamRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SubscribeStreamRequest)
}

void SubscribeStreamRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubscribeStreamRequest::~SubscribeStreamRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SubscribeStreamRequest)
  SharedDtor();
}

void SubscribeStreamRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SubscribeStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeStreamRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribeStreamRequest_descriptor_;
}

const SubscribeStreamRequest& SubscribeStreamRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SubscribeStreamRequest* SubscribeStreamRequest::default_instance_ = NULL;

SubscribeStreamRequest* SubscribeStreamRequest::New() const {
  return new SubscribeStreamRequest;
}

void SubscribeStreamRequest::Swap(SubscribeStreamRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SubscribeStreamRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribeStreamRequest_descriptor_;
  metadata.reflection = SubscribeStreamRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UnsubscribeStreamRequest::kAgentIdFieldNumber;
const int UnsubscribeStreamRequest::kClubIdFieldNumber;
const int UnsubscribeStreamRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

UnsubscribeStreamRequest::UnsubscribeStreamRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UnsubscribeStreamRequest)
}

void UnsubscribeStreamRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

UnsubscribeStreamRequest::UnsubscribeStreamRequest(const UnsubscribeStreamRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UnsubscribeStreamRequest)
}

void UnsubscribeStreamRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnsubscribeStreamRequest::~UnsubscribeStreamRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UnsubscribeStreamRequest)
  SharedDtor();
}

void UnsubscribeStreamRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void UnsubscribeStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsubscribeStreamRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsubscribeStreamRequest_descriptor_;
}

const UnsubscribeStreamRequest& UnsubscribeStreamRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UnsubscribeStreamRequest* UnsubscribeStreamRequest::default_instance_ = NULL;

UnsubscribeStreamRequest* UnsubscribeStreamRequest::New() const {
  return new UnsubscribeStreamRequest;
}

void UnsubscribeStreamRequest::Swap(UnsubscribeStreamRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UnsubscribeStreamRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsubscribeStreamRequest_descriptor_;
  metadata.reflection = UnsubscribeStreamRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateStreamRequest::kAgentIdFieldNumber;
const int CreateStreamRequest::kClubIdFieldNumber;
const int CreateStreamRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

CreateStreamRequest::CreateStreamRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateStreamRequest)
}

void CreateStreamRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateStreamOptions*>(&::bgs::protocol::club::v1::CreateStreamOptions::default_instance());
}

CreateStreamRequest::CreateStreamRequest(const CreateStreamRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateStreamRequest)
}

void CreateStreamRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateStreamRequest::~CreateStreamRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateStreamRequest)
  SharedDtor();
}

void CreateStreamRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void CreateStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateStreamRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateStreamRequest_descriptor_;
}

const CreateStreamRequest& CreateStreamRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateStreamRequest* CreateStreamRequest::default_instance_ = NULL;

CreateStreamRequest* CreateStreamRequest::New() const {
  return new CreateStreamRequest;
}

void CreateStreamRequest::Swap(CreateStreamRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateStreamRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateStreamRequest_descriptor_;
  metadata.reflection = CreateStreamRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateStreamResponse::kClubIdFieldNumber;
const int CreateStreamResponse::kStreamIdFieldNumber;
#endif  // !_MSC_VER

CreateStreamResponse::CreateStreamResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateStreamResponse)
}

void CreateStreamResponse::InitAsDefaultInstance() {
}

CreateStreamResponse::CreateStreamResponse(const CreateStreamResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateStreamResponse)
}

void CreateStreamResponse::SharedCtor() {
  _cached_size_ = 0;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateStreamResponse::~CreateStreamResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateStreamResponse)
  SharedDtor();
}

void CreateStreamResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateStreamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateStreamResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateStreamResponse_descriptor_;
}

const CreateStreamResponse& CreateStreamResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateStreamResponse* CreateStreamResponse::default_instance_ = NULL;

CreateStreamResponse* CreateStreamResponse::New() const {
  return new CreateStreamResponse;
}

void CreateStreamResponse::Swap(CreateStreamResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateStreamResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateStreamResponse_descriptor_;
  metadata.reflection = CreateStreamResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DestroyStreamRequest::kAgentIdFieldNumber;
const int DestroyStreamRequest::kClubIdFieldNumber;
const int DestroyStreamRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

DestroyStreamRequest::DestroyStreamRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DestroyStreamRequest)
}

void DestroyStreamRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

DestroyStreamRequest::DestroyStreamRequest(const DestroyStreamRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DestroyStreamRequest)
}

void DestroyStreamRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyStreamRequest::~DestroyStreamRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DestroyStreamRequest)
  SharedDtor();
}

void DestroyStreamRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void DestroyStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyStreamRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyStreamRequest_descriptor_;
}

const DestroyStreamRequest& DestroyStreamRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DestroyStreamRequest* DestroyStreamRequest::default_instance_ = NULL;

DestroyStreamRequest* DestroyStreamRequest::New() const {
  return new DestroyStreamRequest;
}

void DestroyStreamRequest::Swap(DestroyStreamRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DestroyStreamRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyStreamRequest_descriptor_;
  metadata.reflection = DestroyStreamRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamRequest::kAgentIdFieldNumber;
const int GetStreamRequest::kClubIdFieldNumber;
const int GetStreamRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

GetStreamRequest::GetStreamRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamRequest)
}

void GetStreamRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetStreamRequest::GetStreamRequest(const GetStreamRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamRequest)
}

void GetStreamRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamRequest::~GetStreamRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamRequest)
  SharedDtor();
}

void GetStreamRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamRequest_descriptor_;
}

const GetStreamRequest& GetStreamRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamRequest* GetStreamRequest::default_instance_ = NULL;

GetStreamRequest* GetStreamRequest::New() const {
  return new GetStreamRequest;
}

void GetStreamRequest::Swap(GetStreamRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamRequest_descriptor_;
  metadata.reflection = GetStreamRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamResponse::kStreamFieldNumber;
#endif  // !_MSC_VER

GetStreamResponse::GetStreamResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamResponse)
}

void GetStreamResponse::InitAsDefaultInstance() {
  stream_ = const_cast< ::bgs::protocol::club::v1::Stream*>(&::bgs::protocol::club::v1::Stream::default_instance());
}

GetStreamResponse::GetStreamResponse(const GetStreamResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamResponse)
}

void GetStreamResponse::SharedCtor() {
  _cached_size_ = 0;
  stream_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamResponse::~GetStreamResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamResponse)
  SharedDtor();
}

void GetStreamResponse::SharedDtor() {
  if (this != default_instance_) {
    delete stream_;
  }
}

void GetStreamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamResponse_descriptor_;
}

const GetStreamResponse& GetStreamResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamResponse* GetStreamResponse::default_instance_ = NULL;

GetStreamResponse* GetStreamResponse::New() const {
  return new GetStreamResponse;
}

void GetStreamResponse::Swap(GetStreamResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamResponse_descriptor_;
  metadata.reflection = GetStreamResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamsRequest::kAgentIdFieldNumber;
const int GetStreamsRequest::kClubIdFieldNumber;
const int GetStreamsRequest::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetStreamsRequest::GetStreamsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamsRequest)
}

void GetStreamsRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetStreamsRequest::GetStreamsRequest(const GetStreamsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamsRequest)
}

void GetStreamsRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamsRequest::~GetStreamsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamsRequest)
  SharedDtor();
}

void GetStreamsRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetStreamsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamsRequest_descriptor_;
}

const GetStreamsRequest& GetStreamsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamsRequest* GetStreamsRequest::default_instance_ = NULL;

GetStreamsRequest* GetStreamsRequest::New() const {
  return new GetStreamsRequest;
}

void GetStreamsRequest::Swap(GetStreamsRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamsRequest_descriptor_;
  metadata.reflection = GetStreamsRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamsResponse::kStreamFieldNumber;
const int GetStreamsResponse::kViewFieldNumber;
const int GetStreamsResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetStreamsResponse::GetStreamsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamsResponse)
}

void GetStreamsResponse::InitAsDefaultInstance() {
}

GetStreamsResponse::GetStreamsResponse(const GetStreamsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamsResponse)
}

void GetStreamsResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamsResponse::~GetStreamsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamsResponse)
  SharedDtor();
}

void GetStreamsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStreamsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamsResponse_descriptor_;
}

const GetStreamsResponse& GetStreamsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamsResponse* GetStreamsResponse::default_instance_ = NULL;

GetStreamsResponse* GetStreamsResponse::New() const {
  return new GetStreamsResponse;
}

void GetStreamsResponse::Swap(GetStreamsResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamsResponse_descriptor_;
  metadata.reflection = GetStreamsResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int UpdateStreamStateRequest::kAgentIdFieldNumber;
const int UpdateStreamStateRequest::kClubIdFieldNumber;
const int UpdateStreamStateRequest::kStreamIdFieldNumber;
const int UpdateStreamStateRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

UpdateStreamStateRequest::UpdateStreamStateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.UpdateStreamStateRequest)
}

void UpdateStreamStateRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::StreamStateOptions*>(&::bgs::protocol::club::v1::StreamStateOptions::default_instance());
}

UpdateStreamStateRequest::UpdateStreamStateRequest(const UpdateStreamStateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.UpdateStreamStateRequest)
}

void UpdateStreamStateRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateStreamStateRequest::~UpdateStreamStateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.UpdateStreamStateRequest)
  SharedDtor();
}

void UpdateStreamStateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void UpdateStreamStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateStreamStateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateStreamStateRequest_descriptor_;
}

const UpdateStreamStateRequest& UpdateStreamStateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

UpdateStreamStateRequest* UpdateStreamStateRequest::default_instance_ = NULL;

UpdateStreamStateRequest* UpdateStreamStateRequest::New() const {
  return new UpdateStreamStateRequest;
}

void UpdateStreamStateRequest::Swap(UpdateStreamStateRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata UpdateStreamStateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateStreamStateRequest_descriptor_;
  metadata.reflection = UpdateStreamStateRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SetStreamFocusRequest::kAgentIdFieldNumber;
const int SetStreamFocusRequest::kClubIdFieldNumber;
const int SetStreamFocusRequest::kStreamIdFieldNumber;
const int SetStreamFocusRequest::kFocusFieldNumber;
#endif  // !_MSC_VER

SetStreamFocusRequest::SetStreamFocusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SetStreamFocusRequest)
}

void SetStreamFocusRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SetStreamFocusRequest::SetStreamFocusRequest(const SetStreamFocusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SetStreamFocusRequest)
}

void SetStreamFocusRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  focus_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStreamFocusRequest::~SetStreamFocusRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SetStreamFocusRequest)
  SharedDtor();
}

void SetStreamFocusRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SetStreamFocusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStreamFocusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStreamFocusRequest_descriptor_;
}

const SetStreamFocusRequest& SetStreamFocusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SetStreamFocusRequest* SetStreamFocusRequest::default_instance_ = NULL;

SetStreamFocusRequest* SetStreamFocusRequest::New() const {
  return new SetStreamFocusRequest;
}

void SetStreamFocusRequest::Swap(SetStreamFocusRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SetStreamFocusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStreamFocusRequest_descriptor_;
  metadata.reflection = SetStreamFocusRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateMessageRequest::kAgentIdFieldNumber;
const int CreateMessageRequest::kClubIdFieldNumber;
const int CreateMessageRequest::kStreamIdFieldNumber;
const int CreateMessageRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

CreateMessageRequest::CreateMessageRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateMessageRequest)
}

void CreateMessageRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateMessageOptions*>(&::bgs::protocol::club::v1::CreateMessageOptions::default_instance());
}

CreateMessageRequest::CreateMessageRequest(const CreateMessageRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateMessageRequest)
}

void CreateMessageRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateMessageRequest::~CreateMessageRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateMessageRequest)
  SharedDtor();
}

void CreateMessageRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void CreateMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateMessageRequest_descriptor_;
}

const CreateMessageRequest& CreateMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateMessageRequest* CreateMessageRequest::default_instance_ = NULL;

CreateMessageRequest* CreateMessageRequest::New() const {
  return new CreateMessageRequest;
}

void CreateMessageRequest::Swap(CreateMessageRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateMessageRequest_descriptor_;
  metadata.reflection = CreateMessageRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int CreateMessageResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

CreateMessageResponse::CreateMessageResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.CreateMessageResponse)
}

void CreateMessageResponse::InitAsDefaultInstance() {
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

CreateMessageResponse::CreateMessageResponse(const CreateMessageResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.CreateMessageResponse)
}

void CreateMessageResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateMessageResponse::~CreateMessageResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.CreateMessageResponse)
  SharedDtor();
}

void CreateMessageResponse::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

void CreateMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMessageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateMessageResponse_descriptor_;
}

const CreateMessageResponse& CreateMessageResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

CreateMessageResponse* CreateMessageResponse::default_instance_ = NULL;

CreateMessageResponse* CreateMessageResponse::New() const {
  return new CreateMessageResponse;
}

void CreateMessageResponse::Swap(CreateMessageResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CreateMessageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateMessageResponse_descriptor_;
  metadata.reflection = CreateMessageResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DestroyMessageRequest::kAgentIdFieldNumber;
const int DestroyMessageRequest::kClubIdFieldNumber;
const int DestroyMessageRequest::kStreamIdFieldNumber;
const int DestroyMessageRequest::kMessageIdFieldNumber;
#endif  // !_MSC_VER

DestroyMessageRequest::DestroyMessageRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DestroyMessageRequest)
}

void DestroyMessageRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  message_id_ = const_cast< ::bgs::protocol::MessageId*>(&::bgs::protocol::MessageId::default_instance());
}

DestroyMessageRequest::DestroyMessageRequest(const DestroyMessageRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DestroyMessageRequest)
}

void DestroyMessageRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  message_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyMessageRequest::~DestroyMessageRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DestroyMessageRequest)
  SharedDtor();
}

void DestroyMessageRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete message_id_;
  }
}

void DestroyMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyMessageRequest_descriptor_;
}

const DestroyMessageRequest& DestroyMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DestroyMessageRequest* DestroyMessageRequest::default_instance_ = NULL;

DestroyMessageRequest* DestroyMessageRequest::New() const {
  return new DestroyMessageRequest;
}

void DestroyMessageRequest::Swap(DestroyMessageRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DestroyMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyMessageRequest_descriptor_;
  metadata.reflection = DestroyMessageRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int DestroyMessageResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

DestroyMessageResponse::DestroyMessageResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.DestroyMessageResponse)
}

void DestroyMessageResponse::InitAsDefaultInstance() {
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

DestroyMessageResponse::DestroyMessageResponse(const DestroyMessageResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.DestroyMessageResponse)
}

void DestroyMessageResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyMessageResponse::~DestroyMessageResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.DestroyMessageResponse)
  SharedDtor();
}

void DestroyMessageResponse::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

void DestroyMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyMessageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyMessageResponse_descriptor_;
}

const DestroyMessageResponse& DestroyMessageResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

DestroyMessageResponse* DestroyMessageResponse::default_instance_ = NULL;

DestroyMessageResponse* DestroyMessageResponse::New() const {
  return new DestroyMessageResponse;
}

void DestroyMessageResponse::Swap(DestroyMessageResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DestroyMessageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyMessageResponse_descriptor_;
  metadata.reflection = DestroyMessageResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int EditMessageRequest::kAgentIdFieldNumber;
const int EditMessageRequest::kClubIdFieldNumber;
const int EditMessageRequest::kStreamIdFieldNumber;
const int EditMessageRequest::kMessageIdFieldNumber;
const int EditMessageRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

EditMessageRequest::EditMessageRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.EditMessageRequest)
}

void EditMessageRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  message_id_ = const_cast< ::bgs::protocol::MessageId*>(&::bgs::protocol::MessageId::default_instance());
  options_ = const_cast< ::bgs::protocol::club::v1::CreateMessageOptions*>(&::bgs::protocol::club::v1::CreateMessageOptions::default_instance());
}

EditMessageRequest::EditMessageRequest(const EditMessageRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.EditMessageRequest)
}

void EditMessageRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  message_id_ = NULL;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EditMessageRequest::~EditMessageRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.EditMessageRequest)
  SharedDtor();
}

void EditMessageRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete message_id_;
    delete options_;
  }
}

void EditMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditMessageRequest_descriptor_;
}

const EditMessageRequest& EditMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

EditMessageRequest* EditMessageRequest::default_instance_ = NULL;

EditMessageRequest* EditMessageRequest::New() const {
  return new EditMessageRequest;
}

void EditMessageRequest::Swap(EditMessageRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata EditMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditMessageRequest_descriptor_;
  metadata.reflection = EditMessageRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int EditMessageResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

EditMessageResponse::EditMessageResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.EditMessageResponse)
}

void EditMessageResponse::InitAsDefaultInstance() {
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

EditMessageResponse::EditMessageResponse(const EditMessageResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.EditMessageResponse)
}

void EditMessageResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EditMessageResponse::~EditMessageResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.EditMessageResponse)
  SharedDtor();
}

void EditMessageResponse::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

void EditMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditMessageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditMessageResponse_descriptor_;
}

const EditMessageResponse& EditMessageResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

EditMessageResponse* EditMessageResponse::default_instance_ = NULL;

EditMessageResponse* EditMessageResponse::New() const {
  return new EditMessageResponse;
}

void EditMessageResponse::Swap(EditMessageResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata EditMessageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditMessageResponse_descriptor_;
  metadata.reflection = EditMessageResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SetMessagePinnedRequest::kAgentIdFieldNumber;
const int SetMessagePinnedRequest::kClubIdFieldNumber;
const int SetMessagePinnedRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

SetMessagePinnedRequest::SetMessagePinnedRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SetMessagePinnedRequest)
}

void SetMessagePinnedRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SetMessagePinnedRequest::SetMessagePinnedRequest(const SetMessagePinnedRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SetMessagePinnedRequest)
}

void SetMessagePinnedRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetMessagePinnedRequest::~SetMessagePinnedRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SetMessagePinnedRequest)
  SharedDtor();
}

void SetMessagePinnedRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SetMessagePinnedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMessagePinnedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetMessagePinnedRequest_descriptor_;
}

const SetMessagePinnedRequest& SetMessagePinnedRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SetMessagePinnedRequest* SetMessagePinnedRequest::default_instance_ = NULL;

SetMessagePinnedRequest* SetMessagePinnedRequest::New() const {
  return new SetMessagePinnedRequest;
}

void SetMessagePinnedRequest::Swap(SetMessagePinnedRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SetMessagePinnedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetMessagePinnedRequest_descriptor_;
  metadata.reflection = SetMessagePinnedRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int SetTypingIndicatorRequest::kAgentIdFieldNumber;
const int SetTypingIndicatorRequest::kClubIdFieldNumber;
const int SetTypingIndicatorRequest::kStreamIdFieldNumber;
const int SetTypingIndicatorRequest::kIndicatorFieldNumber;
#endif  // !_MSC_VER

SetTypingIndicatorRequest::SetTypingIndicatorRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.SetTypingIndicatorRequest)
}

void SetTypingIndicatorRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

SetTypingIndicatorRequest::SetTypingIndicatorRequest(const SetTypingIndicatorRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.SetTypingIndicatorRequest)
}

void SetTypingIndicatorRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  indicator_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetTypingIndicatorRequest::~SetTypingIndicatorRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.SetTypingIndicatorRequest)
  SharedDtor();
}

void SetTypingIndicatorRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void SetTypingIndicatorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTypingIndicatorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetTypingIndicatorRequest_descriptor_;
}

const SetTypingIndicatorRequest& SetTypingIndicatorRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

SetTypingIndicatorRequest* SetTypingIndicatorRequest::default_instance_ = NULL;

SetTypingIndicatorRequest* SetTypingIndicatorRequest::New() const {
  return new SetTypingIndicatorRequest;
}

void SetTypingIndicatorRequest::Swap(SetTypingIndicatorRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata SetTypingIndicatorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetTypingIndicatorRequest_descriptor_;
  metadata.reflection = SetTypingIndicatorRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AdvanceStreamViewTimeRequest::kAgentIdFieldNumber;
const int AdvanceStreamViewTimeRequest::kClubIdFieldNumber;
const int AdvanceStreamViewTimeRequest::kStreamIdDeprecatedFieldNumber;
const int AdvanceStreamViewTimeRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

AdvanceStreamViewTimeRequest::AdvanceStreamViewTimeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest)
}

void AdvanceStreamViewTimeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

AdvanceStreamViewTimeRequest::AdvanceStreamViewTimeRequest(const AdvanceStreamViewTimeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest)
}

void AdvanceStreamViewTimeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_deprecated_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdvanceStreamViewTimeRequest::~AdvanceStreamViewTimeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AdvanceStreamViewTimeRequest)
  SharedDtor();
}

void AdvanceStreamViewTimeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AdvanceStreamViewTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvanceStreamViewTimeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdvanceStreamViewTimeRequest_descriptor_;
}

const AdvanceStreamViewTimeRequest& AdvanceStreamViewTimeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AdvanceStreamViewTimeRequest* AdvanceStreamViewTimeRequest::default_instance_ = NULL;

AdvanceStreamViewTimeRequest* AdvanceStreamViewTimeRequest::New() const {
  return new AdvanceStreamViewTimeRequest;
}

void AdvanceStreamViewTimeRequest::Swap(AdvanceStreamViewTimeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AdvanceStreamViewTimeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdvanceStreamViewTimeRequest_descriptor_;
  metadata.reflection = AdvanceStreamViewTimeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AdvanceStreamMentionViewTimeRequest::kAgentIdFieldNumber;
const int AdvanceStreamMentionViewTimeRequest::kClubIdFieldNumber;
const int AdvanceStreamMentionViewTimeRequest::kStreamIdFieldNumber;
#endif  // !_MSC_VER

AdvanceStreamMentionViewTimeRequest::AdvanceStreamMentionViewTimeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest)
}

void AdvanceStreamMentionViewTimeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

AdvanceStreamMentionViewTimeRequest::AdvanceStreamMentionViewTimeRequest(const AdvanceStreamMentionViewTimeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest)
}

void AdvanceStreamMentionViewTimeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdvanceStreamMentionViewTimeRequest::~AdvanceStreamMentionViewTimeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest)
  SharedDtor();
}

void AdvanceStreamMentionViewTimeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AdvanceStreamMentionViewTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvanceStreamMentionViewTimeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdvanceStreamMentionViewTimeRequest_descriptor_;
}

const AdvanceStreamMentionViewTimeRequest& AdvanceStreamMentionViewTimeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AdvanceStreamMentionViewTimeRequest* AdvanceStreamMentionViewTimeRequest::default_instance_ = NULL;

AdvanceStreamMentionViewTimeRequest* AdvanceStreamMentionViewTimeRequest::New() const {
  return new AdvanceStreamMentionViewTimeRequest;
}

void AdvanceStreamMentionViewTimeRequest::Swap(AdvanceStreamMentionViewTimeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AdvanceStreamMentionViewTimeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdvanceStreamMentionViewTimeRequest_descriptor_;
  metadata.reflection = AdvanceStreamMentionViewTimeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int AdvanceActivityViewTimeRequest::kAgentIdFieldNumber;
const int AdvanceActivityViewTimeRequest::kClubIdFieldNumber;
#endif  // !_MSC_VER

AdvanceActivityViewTimeRequest::AdvanceActivityViewTimeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest)
}

void AdvanceActivityViewTimeRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

AdvanceActivityViewTimeRequest::AdvanceActivityViewTimeRequest(const AdvanceActivityViewTimeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest)
}

void AdvanceActivityViewTimeRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdvanceActivityViewTimeRequest::~AdvanceActivityViewTimeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.AdvanceActivityViewTimeRequest)
  SharedDtor();
}

void AdvanceActivityViewTimeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void AdvanceActivityViewTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvanceActivityViewTimeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdvanceActivityViewTimeRequest_descriptor_;
}

const AdvanceActivityViewTimeRequest& AdvanceActivityViewTimeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

AdvanceActivityViewTimeRequest* AdvanceActivityViewTimeRequest::default_instance_ = NULL;

AdvanceActivityViewTimeRequest* AdvanceActivityViewTimeRequest::New() const {
  return new AdvanceActivityViewTimeRequest;
}

void AdvanceActivityViewTimeRequest::Swap(AdvanceActivityViewTimeRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata AdvanceActivityViewTimeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdvanceActivityViewTimeRequest_descriptor_;
  metadata.reflection = AdvanceActivityViewTimeRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamHistoryRequest::kAgentIdFieldNumber;
const int GetStreamHistoryRequest::kClubIdFieldNumber;
const int GetStreamHistoryRequest::kStreamIdFieldNumber;
const int GetStreamHistoryRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

GetStreamHistoryRequest::GetStreamHistoryRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamHistoryRequest)
}

void GetStreamHistoryRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::GetEventOptions*>(&::bgs::protocol::GetEventOptions::default_instance());
}

GetStreamHistoryRequest::GetStreamHistoryRequest(const GetStreamHistoryRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamHistoryRequest)
}

void GetStreamHistoryRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamHistoryRequest::~GetStreamHistoryRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamHistoryRequest)
  SharedDtor();
}

void GetStreamHistoryRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void GetStreamHistoryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamHistoryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamHistoryRequest_descriptor_;
}

const GetStreamHistoryRequest& GetStreamHistoryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamHistoryRequest* GetStreamHistoryRequest::default_instance_ = NULL;

GetStreamHistoryRequest* GetStreamHistoryRequest::New() const {
  return new GetStreamHistoryRequest;
}

void GetStreamHistoryRequest::Swap(GetStreamHistoryRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamHistoryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamHistoryRequest_descriptor_;
  metadata.reflection = GetStreamHistoryRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamHistoryResponse::kMessageFieldNumber;
const int GetStreamHistoryResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetStreamHistoryResponse::GetStreamHistoryResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamHistoryResponse)
}

void GetStreamHistoryResponse::InitAsDefaultInstance() {
}

GetStreamHistoryResponse::GetStreamHistoryResponse(const GetStreamHistoryResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamHistoryResponse)
}

void GetStreamHistoryResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamHistoryResponse::~GetStreamHistoryResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamHistoryResponse)
  SharedDtor();
}

void GetStreamHistoryResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStreamHistoryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamHistoryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamHistoryResponse_descriptor_;
}

const GetStreamHistoryResponse& GetStreamHistoryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamHistoryResponse* GetStreamHistoryResponse::default_instance_ = NULL;

GetStreamHistoryResponse* GetStreamHistoryResponse::New() const {
  return new GetStreamHistoryResponse;
}

void GetStreamHistoryResponse::Swap(GetStreamHistoryResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamHistoryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamHistoryResponse_descriptor_;
  metadata.reflection = GetStreamHistoryResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamMessageRequest::kAgentIdFieldNumber;
const int GetStreamMessageRequest::kClubIdFieldNumber;
const int GetStreamMessageRequest::kStreamIdFieldNumber;
const int GetStreamMessageRequest::kMessageIdFieldNumber;
#endif  // !_MSC_VER

GetStreamMessageRequest::GetStreamMessageRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamMessageRequest)
}

void GetStreamMessageRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  message_id_ = const_cast< ::bgs::protocol::MessageId*>(&::bgs::protocol::MessageId::default_instance());
}

GetStreamMessageRequest::GetStreamMessageRequest(const GetStreamMessageRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamMessageRequest)
}

void GetStreamMessageRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  message_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamMessageRequest::~GetStreamMessageRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamMessageRequest)
  SharedDtor();
}

void GetStreamMessageRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete message_id_;
  }
}

void GetStreamMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamMessageRequest_descriptor_;
}

const GetStreamMessageRequest& GetStreamMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamMessageRequest* GetStreamMessageRequest::default_instance_ = NULL;

GetStreamMessageRequest* GetStreamMessageRequest::New() const {
  return new GetStreamMessageRequest;
}

void GetStreamMessageRequest::Swap(GetStreamMessageRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamMessageRequest_descriptor_;
  metadata.reflection = GetStreamMessageRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamMessageResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

GetStreamMessageResponse::GetStreamMessageResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamMessageResponse)
}

void GetStreamMessageResponse::InitAsDefaultInstance() {
  message_ = const_cast< ::bgs::protocol::club::v1::StreamMessage*>(&::bgs::protocol::club::v1::StreamMessage::default_instance());
}

GetStreamMessageResponse::GetStreamMessageResponse(const GetStreamMessageResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamMessageResponse)
}

void GetStreamMessageResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamMessageResponse::~GetStreamMessageResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamMessageResponse)
  SharedDtor();
}

void GetStreamMessageResponse::SharedDtor() {
  if (this != default_instance_) {
    delete message_;
  }
}

void GetStreamMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamMessageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamMessageResponse_descriptor_;
}

const GetStreamMessageResponse& GetStreamMessageResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamMessageResponse* GetStreamMessageResponse::default_instance_ = NULL;

GetStreamMessageResponse* GetStreamMessageResponse::New() const {
  return new GetStreamMessageResponse;
}

void GetStreamMessageResponse::Swap(GetStreamMessageResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamMessageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamMessageResponse_descriptor_;
  metadata.reflection = GetStreamMessageResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetClubActivityRequest::kAgentIdFieldNumber;
const int GetClubActivityRequest::kClubIdFieldNumber;
const int GetClubActivityRequest::kOptionsFieldNumber;
#endif  // !_MSC_VER

GetClubActivityRequest::GetClubActivityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetClubActivityRequest)
}

void GetClubActivityRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  options_ = const_cast< ::bgs::protocol::GetEventOptions*>(&::bgs::protocol::GetEventOptions::default_instance());
}

GetClubActivityRequest::GetClubActivityRequest(const GetClubActivityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetClubActivityRequest)
}

void GetClubActivityRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClubActivityRequest::~GetClubActivityRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetClubActivityRequest)
  SharedDtor();
}

void GetClubActivityRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete options_;
  }
}

void GetClubActivityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClubActivityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClubActivityRequest_descriptor_;
}

const GetClubActivityRequest& GetClubActivityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetClubActivityRequest* GetClubActivityRequest::default_instance_ = NULL;

GetClubActivityRequest* GetClubActivityRequest::New() const {
  return new GetClubActivityRequest;
}

void GetClubActivityRequest::Swap(GetClubActivityRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetClubActivityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClubActivityRequest_descriptor_;
  metadata.reflection = GetClubActivityRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetClubActivityResponse::kContinuationFieldNumber;
#endif  // !_MSC_VER

GetClubActivityResponse::GetClubActivityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetClubActivityResponse)
}

void GetClubActivityResponse::InitAsDefaultInstance() {
}

GetClubActivityResponse::GetClubActivityResponse(const GetClubActivityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetClubActivityResponse)
}

void GetClubActivityResponse::SharedCtor() {
  _cached_size_ = 0;
  continuation_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClubActivityResponse::~GetClubActivityResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetClubActivityResponse)
  SharedDtor();
}

void GetClubActivityResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClubActivityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClubActivityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClubActivityResponse_descriptor_;
}

const GetClubActivityResponse& GetClubActivityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetClubActivityResponse* GetClubActivityResponse::default_instance_ = NULL;

GetClubActivityResponse* GetClubActivityResponse::New() const {
  return new GetClubActivityResponse;
}

void GetClubActivityResponse::Swap(GetClubActivityResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetClubActivityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClubActivityResponse_descriptor_;
  metadata.reflection = GetClubActivityResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamVoiceTokenRequest::kAgentIdFieldNumber;
const int GetStreamVoiceTokenRequest::kClubIdFieldNumber;
const int GetStreamVoiceTokenRequest::kStreamIdFieldNumber;
const int GetStreamVoiceTokenRequest::kVersionFieldNumber;
#endif  // !_MSC_VER

GetStreamVoiceTokenRequest::GetStreamVoiceTokenRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamVoiceTokenRequest)
}

void GetStreamVoiceTokenRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

GetStreamVoiceTokenRequest::GetStreamVoiceTokenRequest(const GetStreamVoiceTokenRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamVoiceTokenRequest)
}

void GetStreamVoiceTokenRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamVoiceTokenRequest::~GetStreamVoiceTokenRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamVoiceTokenRequest)
  SharedDtor();
}

void GetStreamVoiceTokenRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
  }
}

void GetStreamVoiceTokenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamVoiceTokenRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamVoiceTokenRequest_descriptor_;
}

const GetStreamVoiceTokenRequest& GetStreamVoiceTokenRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamVoiceTokenRequest* GetStreamVoiceTokenRequest::default_instance_ = NULL;

GetStreamVoiceTokenRequest* GetStreamVoiceTokenRequest::New() const {
  return new GetStreamVoiceTokenRequest;
}

void GetStreamVoiceTokenRequest::Swap(GetStreamVoiceTokenRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamVoiceTokenRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamVoiceTokenRequest_descriptor_;
  metadata.reflection = GetStreamVoiceTokenRequest_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int GetStreamVoiceTokenResponse::kChannelUriFieldNumber;
const int GetStreamVoiceTokenResponse::kCredentialsFieldNumber;
#endif  // !_MSC_VER

GetStreamVoiceTokenResponse::GetStreamVoiceTokenResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.GetStreamVoiceTokenResponse)
}

void GetStreamVoiceTokenResponse::InitAsDefaultInstance() {
  credentials_ = const_cast< ::bgs::protocol::VoiceCredentials*>(&::bgs::protocol::VoiceCredentials::default_instance());
}

GetStreamVoiceTokenResponse::GetStreamVoiceTokenResponse(const GetStreamVoiceTokenResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.GetStreamVoiceTokenResponse)
}

void GetStreamVoiceTokenResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  channel_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  credentials_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStreamVoiceTokenResponse::~GetStreamVoiceTokenResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.GetStreamVoiceTokenResponse)
  SharedDtor();
}

void GetStreamVoiceTokenResponse::SharedDtor() {
  if (channel_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_uri_;
  }
  if (this != default_instance_) {
    delete credentials_;
  }
}

void GetStreamVoiceTokenResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStreamVoiceTokenResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStreamVoiceTokenResponse_descriptor_;
}

const GetStreamVoiceTokenResponse& GetStreamVoiceTokenResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

GetStreamVoiceTokenResponse* GetStreamVoiceTokenResponse::default_instance_ = NULL;

GetStreamVoiceTokenResponse* GetStreamVoiceTokenResponse::New() const {
  return new GetStreamVoiceTokenResponse;
}

void GetStreamVoiceTokenResponse::Swap(GetStreamVoiceTokenResponse* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata GetStreamVoiceTokenResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStreamVoiceTokenResponse_descriptor_;
  metadata.reflection = GetStreamVoiceTokenResponse_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int KickFromStreamVoiceRequest::kAgentIdFieldNumber;
const int KickFromStreamVoiceRequest::kClubIdFieldNumber;
const int KickFromStreamVoiceRequest::kStreamIdFieldNumber;
const int KickFromStreamVoiceRequest::kTargetIdFieldNumber;
#endif  // !_MSC_VER

KickFromStreamVoiceRequest::KickFromStreamVoiceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.KickFromStreamVoiceRequest)
}

void KickFromStreamVoiceRequest::InitAsDefaultInstance() {
  agent_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
  target_id_ = const_cast< ::bgs::protocol::club::v1::MemberId*>(&::bgs::protocol::club::v1::MemberId::default_instance());
}

KickFromStreamVoiceRequest::KickFromStreamVoiceRequest(const KickFromStreamVoiceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.KickFromStreamVoiceRequest)
}

void KickFromStreamVoiceRequest::SharedCtor() {
  _cached_size_ = 0;
  agent_id_ = NULL;
  club_id_ = GOOGLE_ULONGLONG(0);
  stream_id_ = GOOGLE_ULONGLONG(0);
  target_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KickFromStreamVoiceRequest::~KickFromStreamVoiceRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.KickFromStreamVoiceRequest)
  SharedDtor();
}

void KickFromStreamVoiceRequest::SharedDtor() {
  if (this != default_instance_) {
    delete agent_id_;
    delete target_id_;
  }
}

void KickFromStreamVoiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickFromStreamVoiceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KickFromStreamVoiceRequest_descriptor_;
}

const KickFromStreamVoiceRequest& KickFromStreamVoiceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5frequest_2eproto();
  return *default_instance_;
}

KickFromStreamVoiceRequest* KickFromStreamVoiceRequest::default_instance_ = NULL;

KickFromStreamVoiceRequest* KickFromStreamVoiceRequest::New() const {
  return new KickFromStreamVoiceRequest;
}

void KickFromStreamVoiceRequest::Swap(KickFromStreamVoiceRequest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata KickFromStreamVoiceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KickFromStreamVoiceRequest_descriptor_;
  metadata.reflection = KickFromStreamVoiceRequest_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
