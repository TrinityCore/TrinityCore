// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friends_types.proto

#ifndef PROTOBUF_friends_5ftypes_2eproto__INCLUDED
#define PROTOBUF_friends_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "attribute_types.pb.h"
#include "entity_types.pb.h"
#include "invitation_types.pb.h"
#include "Define.h" // for TC_PROTO_API
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace friends {
namespace v1 {

// Internal implementation detail -- do not call these.
void TC_PROTO_API protobuf_AddDesc_friends_5ftypes_2eproto();
void protobuf_AssignDesc_friends_5ftypes_2eproto();
void protobuf_ShutdownFile_friends_5ftypes_2eproto();

class Friend;
class FriendInvitation;
class FriendInvitationParams;

// ===================================================================

class TC_PROTO_API Friend : public ::google::protobuf::Message {
 public:
  Friend();
  virtual ~Friend();

  Friend(const Friend& from);

  inline Friend& operator=(const Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend& default_instance();

  void Swap(Friend* other);

  // implements Message ----------------------------------------------

  Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend& from);
  void MergeFrom(const Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .bgs.protocol.EntityId account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline const ::bgs::protocol::EntityId& account_id() const;
  inline ::bgs::protocol::EntityId* mutable_account_id();
  inline ::bgs::protocol::EntityId* release_account_id();
  inline void set_allocated_account_id(::bgs::protocol::EntityId* account_id);

  // repeated .bgs.protocol.Attribute attribute = 2;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 2;
  inline const ::bgs::protocol::Attribute& attribute(int index) const;
  inline ::bgs::protocol::Attribute* mutable_attribute(int index);
  inline ::bgs::protocol::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();

  // repeated uint32 role = 3 [packed = true];
  inline int role_size() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline ::google::protobuf::uint32 role(int index) const;
  inline void set_role(int index, ::google::protobuf::uint32 value);
  inline void add_role(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role();

  // optional uint64 privileges = 4 [default = 0];
  inline bool has_privileges() const;
  inline void clear_privileges();
  static const int kPrivilegesFieldNumber = 4;
  inline ::google::protobuf::uint64 privileges() const;
  inline void set_privileges(::google::protobuf::uint64 value);

  // optional uint64 attributes_epoch = 5;
  inline bool has_attributes_epoch() const;
  inline void clear_attributes_epoch();
  static const int kAttributesEpochFieldNumber = 5;
  inline ::google::protobuf::uint64 attributes_epoch() const;
  inline void set_attributes_epoch(::google::protobuf::uint64 value);

  // optional string full_name = 6;
  inline bool has_full_name() const;
  inline void clear_full_name();
  static const int kFullNameFieldNumber = 6;
  inline const ::std::string& full_name() const;
  inline void set_full_name(const ::std::string& value);
  inline void set_full_name(const char* value);
  inline void set_full_name(const char* value, size_t size);
  inline ::std::string* mutable_full_name();
  inline ::std::string* release_full_name();
  inline void set_allocated_full_name(::std::string* full_name);

  // optional string battle_tag = 7;
  inline bool has_battle_tag() const;
  inline void clear_battle_tag();
  static const int kBattleTagFieldNumber = 7;
  inline const ::std::string& battle_tag() const;
  inline void set_battle_tag(const ::std::string& value);
  inline void set_battle_tag(const char* value);
  inline void set_battle_tag(const char* value, size_t size);
  inline ::std::string* mutable_battle_tag();
  inline ::std::string* release_battle_tag();
  inline void set_allocated_battle_tag(::std::string* battle_tag);

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.Friend)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_privileges();
  inline void clear_has_privileges();
  inline void set_has_attributes_epoch();
  inline void clear_has_attributes_epoch();
  inline void set_has_full_name();
  inline void clear_has_full_name();
  inline void set_has_battle_tag();
  inline void clear_has_battle_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::bgs::protocol::EntityId* account_id_;
  ::google::protobuf::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_;
  mutable int _role_cached_byte_size_;
  ::google::protobuf::uint64 privileges_;
  ::google::protobuf::uint64 attributes_epoch_;
  ::std::string* full_name_;
  ::std::string* battle_tag_;
  friend void TC_PROTO_API protobuf_AddDesc_friends_5ftypes_2eproto();
  friend void protobuf_AssignDesc_friends_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_friends_5ftypes_2eproto();

  void InitAsDefaultInstance();
  static Friend* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API FriendInvitation : public ::google::protobuf::Message {
 public:
  FriendInvitation();
  virtual ~FriendInvitation();

  FriendInvitation(const FriendInvitation& from);

  inline FriendInvitation& operator=(const FriendInvitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInvitation& default_instance();

  void Swap(FriendInvitation* other);

  // implements Message ----------------------------------------------

  FriendInvitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInvitation& from);
  void MergeFrom(const FriendInvitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool first_received = 1 [default = false];
  inline bool has_first_received() const;
  inline void clear_first_received();
  static const int kFirstReceivedFieldNumber = 1;
  inline bool first_received() const;
  inline void set_first_received(bool value);

  // repeated uint32 role = 2 [packed = true];
  inline int role_size() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 2;
  inline ::google::protobuf::uint32 role(int index) const;
  inline void set_role(int index, ::google::protobuf::uint32 value);
  inline void add_role(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role();

  static const int kFriendInvitationFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::bgs::protocol::Invitation,
      ::google::protobuf::internal::MessageTypeTraits< ::bgs::protocol::friends::v1::FriendInvitation >, 11, false >
    friend_invitation;
  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.FriendInvitation)
 private:
  inline void set_has_first_received();
  inline void clear_has_first_received();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_;
  mutable int _role_cached_byte_size_;
  bool first_received_;
  friend void TC_PROTO_API protobuf_AddDesc_friends_5ftypes_2eproto();
  friend void protobuf_AssignDesc_friends_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_friends_5ftypes_2eproto();

  void InitAsDefaultInstance();
  static FriendInvitation* default_instance_;
};
// -------------------------------------------------------------------

class TC_PROTO_API FriendInvitationParams : public ::google::protobuf::Message {
 public:
  FriendInvitationParams();
  virtual ~FriendInvitationParams();

  FriendInvitationParams(const FriendInvitationParams& from);

  inline FriendInvitationParams& operator=(const FriendInvitationParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInvitationParams& default_instance();

  void Swap(FriendInvitationParams* other);

  // implements Message ----------------------------------------------

  FriendInvitationParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInvitationParams& from);
  void MergeFrom(const FriendInvitationParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string target_email = 1;
  inline bool has_target_email() const;
  inline void clear_target_email();
  static const int kTargetEmailFieldNumber = 1;
  inline const ::std::string& target_email() const;
  inline void set_target_email(const ::std::string& value);
  inline void set_target_email(const char* value);
  inline void set_target_email(const char* value, size_t size);
  inline ::std::string* mutable_target_email();
  inline ::std::string* release_target_email();
  inline void set_allocated_target_email(::std::string* target_email);

  // optional string target_battle_tag = 2;
  inline bool has_target_battle_tag() const;
  inline void clear_target_battle_tag();
  static const int kTargetBattleTagFieldNumber = 2;
  inline const ::std::string& target_battle_tag() const;
  inline void set_target_battle_tag(const ::std::string& value);
  inline void set_target_battle_tag(const char* value);
  inline void set_target_battle_tag(const char* value, size_t size);
  inline ::std::string* mutable_target_battle_tag();
  inline ::std::string* release_target_battle_tag();
  inline void set_allocated_target_battle_tag(::std::string* target_battle_tag);

  // optional string inviter_battle_tag = 3;
  inline bool has_inviter_battle_tag() const;
  inline void clear_inviter_battle_tag();
  static const int kInviterBattleTagFieldNumber = 3;
  inline const ::std::string& inviter_battle_tag() const;
  inline void set_inviter_battle_tag(const ::std::string& value);
  inline void set_inviter_battle_tag(const char* value);
  inline void set_inviter_battle_tag(const char* value, size_t size);
  inline ::std::string* mutable_inviter_battle_tag();
  inline ::std::string* release_inviter_battle_tag();
  inline void set_allocated_inviter_battle_tag(::std::string* inviter_battle_tag);

  // optional string inviter_full_name = 4;
  inline bool has_inviter_full_name() const;
  inline void clear_inviter_full_name();
  static const int kInviterFullNameFieldNumber = 4;
  inline const ::std::string& inviter_full_name() const;
  inline void set_inviter_full_name(const ::std::string& value);
  inline void set_inviter_full_name(const char* value);
  inline void set_inviter_full_name(const char* value, size_t size);
  inline ::std::string* mutable_inviter_full_name();
  inline ::std::string* release_inviter_full_name();
  inline void set_allocated_inviter_full_name(::std::string* inviter_full_name);

  // optional string invitee_display_name = 5;
  inline bool has_invitee_display_name() const;
  inline void clear_invitee_display_name();
  static const int kInviteeDisplayNameFieldNumber = 5;
  inline const ::std::string& invitee_display_name() const;
  inline void set_invitee_display_name(const ::std::string& value);
  inline void set_invitee_display_name(const char* value);
  inline void set_invitee_display_name(const char* value, size_t size);
  inline ::std::string* mutable_invitee_display_name();
  inline ::std::string* release_invitee_display_name();
  inline void set_allocated_invitee_display_name(::std::string* invitee_display_name);

  // repeated uint32 role = 6 [packed = true];
  inline int role_size() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 6;
  inline ::google::protobuf::uint32 role(int index) const;
  inline void set_role(int index, ::google::protobuf::uint32 value);
  inline void add_role(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role();

  // repeated uint32 previous_role_deprecated = 7 [packed = true, deprecated = true];
  inline int previous_role_deprecated_size() const PROTOBUF_DEPRECATED;
  inline void clear_previous_role_deprecated() PROTOBUF_DEPRECATED;
  static const int kPreviousRoleDeprecatedFieldNumber = 7;
  inline ::google::protobuf::uint32 previous_role_deprecated(int index) const PROTOBUF_DEPRECATED;
  inline void set_previous_role_deprecated(int index, ::google::protobuf::uint32 value) PROTOBUF_DEPRECATED;
  inline void add_previous_role_deprecated(::google::protobuf::uint32 value) PROTOBUF_DEPRECATED;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      previous_role_deprecated() const PROTOBUF_DEPRECATED;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_previous_role_deprecated() PROTOBUF_DEPRECATED;

  static const int kFriendParamsFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::bgs::protocol::InvitationParams,
      ::google::protobuf::internal::MessageTypeTraits< ::bgs::protocol::friends::v1::FriendInvitationParams >, 11, false >
    friend_params;
  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.FriendInvitationParams)
 private:
  inline void set_has_target_email();
  inline void clear_has_target_email();
  inline void set_has_target_battle_tag();
  inline void clear_has_target_battle_tag();
  inline void set_has_inviter_battle_tag();
  inline void clear_has_inviter_battle_tag();
  inline void set_has_inviter_full_name();
  inline void clear_has_inviter_full_name();
  inline void set_has_invitee_display_name();
  inline void clear_has_invitee_display_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* target_email_;
  ::std::string* target_battle_tag_;
  ::std::string* inviter_battle_tag_;
  ::std::string* inviter_full_name_;
  ::std::string* invitee_display_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_;
  mutable int _role_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > previous_role_deprecated_;
  mutable int _previous_role_deprecated_cached_byte_size_;
  friend void TC_PROTO_API protobuf_AddDesc_friends_5ftypes_2eproto();
  friend void protobuf_AssignDesc_friends_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_friends_5ftypes_2eproto();

  void InitAsDefaultInstance();
  static FriendInvitationParams* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// Friend

// required .bgs.protocol.EntityId account_id = 1;
inline bool Friend::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend::clear_account_id() {
  if (account_id_ != NULL) account_id_->::bgs::protocol::EntityId::Clear();
  clear_has_account_id();
}
inline const ::bgs::protocol::EntityId& Friend::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.account_id)
  return account_id_ != NULL ? *account_id_ : *default_instance_->account_id_;
}
inline ::bgs::protocol::EntityId* Friend::mutable_account_id() {
  set_has_account_id();
  if (account_id_ == NULL) account_id_ = new ::bgs::protocol::EntityId;
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.Friend.account_id)
  return account_id_;
}
inline ::bgs::protocol::EntityId* Friend::release_account_id() {
  clear_has_account_id();
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = NULL;
  return temp;
}
inline void Friend::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  delete account_id_;
  account_id_ = account_id;
  if (account_id) {
    set_has_account_id();
  } else {
    clear_has_account_id();
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.Friend.account_id)
}

// repeated .bgs.protocol.Attribute attribute = 2;
inline int Friend::attribute_size() const {
  return attribute_.size();
}
inline void Friend::clear_attribute() {
  attribute_.Clear();
}
inline const ::bgs::protocol::Attribute& Friend::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.attribute)
  return attribute_.Get(index);
}
inline ::bgs::protocol::Attribute* Friend::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.Friend.attribute)
  return attribute_.Mutable(index);
}
inline ::bgs::protocol::Attribute* Friend::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.Friend.attribute)
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bgs::protocol::Attribute >&
Friend::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.Friend.attribute)
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bgs::protocol::Attribute >*
Friend::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.Friend.attribute)
  return &attribute_;
}

// repeated uint32 role = 3 [packed = true];
inline int Friend::role_size() const {
  return role_.size();
}
inline void Friend::clear_role() {
  role_.Clear();
}
inline ::google::protobuf::uint32 Friend::role(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.role)
  return role_.Get(index);
}
inline void Friend::set_role(int index, ::google::protobuf::uint32 value) {
  role_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.Friend.role)
}
inline void Friend::add_role(::google::protobuf::uint32 value) {
  role_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.Friend.role)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Friend::role() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.Friend.role)
  return role_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Friend::mutable_role() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.Friend.role)
  return &role_;
}

// optional uint64 privileges = 4 [default = 0];
inline bool Friend::has_privileges() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Friend::set_has_privileges() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Friend::clear_has_privileges() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Friend::clear_privileges() {
  privileges_ = GOOGLE_ULONGLONG(0);
  clear_has_privileges();
}
inline ::google::protobuf::uint64 Friend::privileges() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.privileges)
  return privileges_;
}
inline void Friend::set_privileges(::google::protobuf::uint64 value) {
  set_has_privileges();
  privileges_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.Friend.privileges)
}

// optional uint64 attributes_epoch = 5;
inline bool Friend::has_attributes_epoch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Friend::set_has_attributes_epoch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Friend::clear_has_attributes_epoch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Friend::clear_attributes_epoch() {
  attributes_epoch_ = GOOGLE_ULONGLONG(0);
  clear_has_attributes_epoch();
}
inline ::google::protobuf::uint64 Friend::attributes_epoch() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.attributes_epoch)
  return attributes_epoch_;
}
inline void Friend::set_attributes_epoch(::google::protobuf::uint64 value) {
  set_has_attributes_epoch();
  attributes_epoch_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.Friend.attributes_epoch)
}

// optional string full_name = 6;
inline bool Friend::has_full_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Friend::set_has_full_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Friend::clear_has_full_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Friend::clear_full_name() {
  if (full_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    full_name_->clear();
  }
  clear_has_full_name();
}
inline const ::std::string& Friend::full_name() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.full_name)
  return *full_name_;
}
inline void Friend::set_full_name(const ::std::string& value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.Friend.full_name)
}
inline void Friend::set_full_name(const char* value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.Friend.full_name)
}
inline void Friend::set_full_name(const char* value, size_t size) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.Friend.full_name)
}
inline ::std::string* Friend::mutable_full_name() {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    full_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.Friend.full_name)
  return full_name_;
}
inline ::std::string* Friend::release_full_name() {
  clear_has_full_name();
  if (full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = full_name_;
    full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Friend::set_allocated_full_name(::std::string* full_name) {
  if (full_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete full_name_;
  }
  if (full_name) {
    set_has_full_name();
    full_name_ = full_name;
  } else {
    clear_has_full_name();
    full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.Friend.full_name)
}

// optional string battle_tag = 7;
inline bool Friend::has_battle_tag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Friend::set_has_battle_tag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Friend::clear_has_battle_tag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Friend::clear_battle_tag() {
  if (battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battle_tag_->clear();
  }
  clear_has_battle_tag();
}
inline const ::std::string& Friend::battle_tag() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.Friend.battle_tag)
  return *battle_tag_;
}
inline void Friend::set_battle_tag(const ::std::string& value) {
  set_has_battle_tag();
  if (battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battle_tag_ = new ::std::string;
  }
  battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.Friend.battle_tag)
}
inline void Friend::set_battle_tag(const char* value) {
  set_has_battle_tag();
  if (battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battle_tag_ = new ::std::string;
  }
  battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.Friend.battle_tag)
}
inline void Friend::set_battle_tag(const char* value, size_t size) {
  set_has_battle_tag();
  if (battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battle_tag_ = new ::std::string;
  }
  battle_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.Friend.battle_tag)
}
inline ::std::string* Friend::mutable_battle_tag() {
  set_has_battle_tag();
  if (battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battle_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.Friend.battle_tag)
  return battle_tag_;
}
inline ::std::string* Friend::release_battle_tag() {
  clear_has_battle_tag();
  if (battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = battle_tag_;
    battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Friend::set_allocated_battle_tag(::std::string* battle_tag) {
  if (battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battle_tag_;
  }
  if (battle_tag) {
    set_has_battle_tag();
    battle_tag_ = battle_tag;
  } else {
    clear_has_battle_tag();
    battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.Friend.battle_tag)
}

// -------------------------------------------------------------------

// FriendInvitation

// optional bool first_received = 1 [default = false];
inline bool FriendInvitation::has_first_received() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInvitation::set_has_first_received() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInvitation::clear_has_first_received() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInvitation::clear_first_received() {
  first_received_ = false;
  clear_has_first_received();
}
inline bool FriendInvitation::first_received() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitation.first_received)
  return first_received_;
}
inline void FriendInvitation::set_first_received(bool value) {
  set_has_first_received();
  first_received_ = value;
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitation.first_received)
}

// repeated uint32 role = 2 [packed = true];
inline int FriendInvitation::role_size() const {
  return role_.size();
}
inline void FriendInvitation::clear_role() {
  role_.Clear();
}
inline ::google::protobuf::uint32 FriendInvitation::role(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitation.role)
  return role_.Get(index);
}
inline void FriendInvitation::set_role(int index, ::google::protobuf::uint32 value) {
  role_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitation.role)
}
inline void FriendInvitation::add_role(::google::protobuf::uint32 value) {
  role_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.FriendInvitation.role)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FriendInvitation::role() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.FriendInvitation.role)
  return role_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FriendInvitation::mutable_role() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.FriendInvitation.role)
  return &role_;
}

// -------------------------------------------------------------------

// FriendInvitationParams

// optional string target_email = 1;
inline bool FriendInvitationParams::has_target_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInvitationParams::set_has_target_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInvitationParams::clear_has_target_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInvitationParams::clear_target_email() {
  if (target_email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_email_->clear();
  }
  clear_has_target_email();
}
inline const ::std::string& FriendInvitationParams::target_email() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
  return *target_email_;
}
inline void FriendInvitationParams::set_target_email(const ::std::string& value) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
}
inline void FriendInvitationParams::set_target_email(const char* value) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
}
inline void FriendInvitationParams::set_target_email(const char* value, size_t size) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
}
inline ::std::string* FriendInvitationParams::mutable_target_email() {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
  return target_email_;
}
inline ::std::string* FriendInvitationParams::release_target_email() {
  clear_has_target_email();
  if (target_email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_email_;
    target_email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendInvitationParams::set_allocated_target_email(::std::string* target_email) {
  if (target_email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_email_;
  }
  if (target_email) {
    set_has_target_email();
    target_email_ = target_email;
  } else {
    clear_has_target_email();
    target_email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendInvitationParams.target_email)
}

// optional string target_battle_tag = 2;
inline bool FriendInvitationParams::has_target_battle_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInvitationParams::set_has_target_battle_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInvitationParams::clear_has_target_battle_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInvitationParams::clear_target_battle_tag() {
  if (target_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_->clear();
  }
  clear_has_target_battle_tag();
}
inline const ::std::string& FriendInvitationParams::target_battle_tag() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
  return *target_battle_tag_;
}
inline void FriendInvitationParams::set_target_battle_tag(const ::std::string& value) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
}
inline void FriendInvitationParams::set_target_battle_tag(const char* value) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
}
inline void FriendInvitationParams::set_target_battle_tag(const char* value, size_t size) {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  target_battle_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
}
inline ::std::string* FriendInvitationParams::mutable_target_battle_tag() {
  set_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_battle_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
  return target_battle_tag_;
}
inline ::std::string* FriendInvitationParams::release_target_battle_tag() {
  clear_has_target_battle_tag();
  if (target_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_battle_tag_;
    target_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendInvitationParams::set_allocated_target_battle_tag(::std::string* target_battle_tag) {
  if (target_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_battle_tag_;
  }
  if (target_battle_tag) {
    set_has_target_battle_tag();
    target_battle_tag_ = target_battle_tag;
  } else {
    clear_has_target_battle_tag();
    target_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendInvitationParams.target_battle_tag)
}

// optional string inviter_battle_tag = 3;
inline bool FriendInvitationParams::has_inviter_battle_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInvitationParams::set_has_inviter_battle_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInvitationParams::clear_has_inviter_battle_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInvitationParams::clear_inviter_battle_tag() {
  if (inviter_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_battle_tag_->clear();
  }
  clear_has_inviter_battle_tag();
}
inline const ::std::string& FriendInvitationParams::inviter_battle_tag() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
  return *inviter_battle_tag_;
}
inline void FriendInvitationParams::set_inviter_battle_tag(const ::std::string& value) {
  set_has_inviter_battle_tag();
  if (inviter_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_battle_tag_ = new ::std::string;
  }
  inviter_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
}
inline void FriendInvitationParams::set_inviter_battle_tag(const char* value) {
  set_has_inviter_battle_tag();
  if (inviter_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_battle_tag_ = new ::std::string;
  }
  inviter_battle_tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
}
inline void FriendInvitationParams::set_inviter_battle_tag(const char* value, size_t size) {
  set_has_inviter_battle_tag();
  if (inviter_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_battle_tag_ = new ::std::string;
  }
  inviter_battle_tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
}
inline ::std::string* FriendInvitationParams::mutable_inviter_battle_tag() {
  set_has_inviter_battle_tag();
  if (inviter_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_battle_tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
  return inviter_battle_tag_;
}
inline ::std::string* FriendInvitationParams::release_inviter_battle_tag() {
  clear_has_inviter_battle_tag();
  if (inviter_battle_tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inviter_battle_tag_;
    inviter_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendInvitationParams::set_allocated_inviter_battle_tag(::std::string* inviter_battle_tag) {
  if (inviter_battle_tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inviter_battle_tag_;
  }
  if (inviter_battle_tag) {
    set_has_inviter_battle_tag();
    inviter_battle_tag_ = inviter_battle_tag;
  } else {
    clear_has_inviter_battle_tag();
    inviter_battle_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendInvitationParams.inviter_battle_tag)
}

// optional string inviter_full_name = 4;
inline bool FriendInvitationParams::has_inviter_full_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInvitationParams::set_has_inviter_full_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInvitationParams::clear_has_inviter_full_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInvitationParams::clear_inviter_full_name() {
  if (inviter_full_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_full_name_->clear();
  }
  clear_has_inviter_full_name();
}
inline const ::std::string& FriendInvitationParams::inviter_full_name() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
  return *inviter_full_name_;
}
inline void FriendInvitationParams::set_inviter_full_name(const ::std::string& value) {
  set_has_inviter_full_name();
  if (inviter_full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_full_name_ = new ::std::string;
  }
  inviter_full_name_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
}
inline void FriendInvitationParams::set_inviter_full_name(const char* value) {
  set_has_inviter_full_name();
  if (inviter_full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_full_name_ = new ::std::string;
  }
  inviter_full_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
}
inline void FriendInvitationParams::set_inviter_full_name(const char* value, size_t size) {
  set_has_inviter_full_name();
  if (inviter_full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_full_name_ = new ::std::string;
  }
  inviter_full_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
}
inline ::std::string* FriendInvitationParams::mutable_inviter_full_name() {
  set_has_inviter_full_name();
  if (inviter_full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inviter_full_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
  return inviter_full_name_;
}
inline ::std::string* FriendInvitationParams::release_inviter_full_name() {
  clear_has_inviter_full_name();
  if (inviter_full_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inviter_full_name_;
    inviter_full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendInvitationParams::set_allocated_inviter_full_name(::std::string* inviter_full_name) {
  if (inviter_full_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inviter_full_name_;
  }
  if (inviter_full_name) {
    set_has_inviter_full_name();
    inviter_full_name_ = inviter_full_name;
  } else {
    clear_has_inviter_full_name();
    inviter_full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendInvitationParams.inviter_full_name)
}

// optional string invitee_display_name = 5;
inline bool FriendInvitationParams::has_invitee_display_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendInvitationParams::set_has_invitee_display_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendInvitationParams::clear_has_invitee_display_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendInvitationParams::clear_invitee_display_name() {
  if (invitee_display_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_display_name_->clear();
  }
  clear_has_invitee_display_name();
}
inline const ::std::string& FriendInvitationParams::invitee_display_name() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
  return *invitee_display_name_;
}
inline void FriendInvitationParams::set_invitee_display_name(const ::std::string& value) {
  set_has_invitee_display_name();
  if (invitee_display_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_display_name_ = new ::std::string;
  }
  invitee_display_name_->assign(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
}
inline void FriendInvitationParams::set_invitee_display_name(const char* value) {
  set_has_invitee_display_name();
  if (invitee_display_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_display_name_ = new ::std::string;
  }
  invitee_display_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
}
inline void FriendInvitationParams::set_invitee_display_name(const char* value, size_t size) {
  set_has_invitee_display_name();
  if (invitee_display_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_display_name_ = new ::std::string;
  }
  invitee_display_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
}
inline ::std::string* FriendInvitationParams::mutable_invitee_display_name() {
  set_has_invitee_display_name();
  if (invitee_display_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitee_display_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
  return invitee_display_name_;
}
inline ::std::string* FriendInvitationParams::release_invitee_display_name() {
  clear_has_invitee_display_name();
  if (invitee_display_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitee_display_name_;
    invitee_display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendInvitationParams::set_allocated_invitee_display_name(::std::string* invitee_display_name) {
  if (invitee_display_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitee_display_name_;
  }
  if (invitee_display_name) {
    set_has_invitee_display_name();
    invitee_display_name_ = invitee_display_name;
  } else {
    clear_has_invitee_display_name();
    invitee_display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendInvitationParams.invitee_display_name)
}

// repeated uint32 role = 6 [packed = true];
inline int FriendInvitationParams::role_size() const {
  return role_.size();
}
inline void FriendInvitationParams::clear_role() {
  role_.Clear();
}
inline ::google::protobuf::uint32 FriendInvitationParams::role(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.role)
  return role_.Get(index);
}
inline void FriendInvitationParams::set_role(int index, ::google::protobuf::uint32 value) {
  role_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.role)
}
inline void FriendInvitationParams::add_role(::google::protobuf::uint32 value) {
  role_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.FriendInvitationParams.role)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FriendInvitationParams::role() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.FriendInvitationParams.role)
  return role_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FriendInvitationParams::mutable_role() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.FriendInvitationParams.role)
  return &role_;
}

// repeated uint32 previous_role_deprecated = 7 [packed = true, deprecated = true];
inline int FriendInvitationParams::previous_role_deprecated_size() const {
  return previous_role_deprecated_.size();
}
inline void FriendInvitationParams::clear_previous_role_deprecated() {
  previous_role_deprecated_.Clear();
}
inline ::google::protobuf::uint32 FriendInvitationParams::previous_role_deprecated(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendInvitationParams.previous_role_deprecated)
  return previous_role_deprecated_.Get(index);
}
inline void FriendInvitationParams::set_previous_role_deprecated(int index, ::google::protobuf::uint32 value) {
  previous_role_deprecated_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.FriendInvitationParams.previous_role_deprecated)
}
inline void FriendInvitationParams::add_previous_role_deprecated(::google::protobuf::uint32 value) {
  previous_role_deprecated_.Add(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.FriendInvitationParams.previous_role_deprecated)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FriendInvitationParams::previous_role_deprecated() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.FriendInvitationParams.previous_role_deprecated)
  return previous_role_deprecated_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FriendInvitationParams::mutable_previous_role_deprecated() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.FriendInvitationParams.previous_role_deprecated)
  return &previous_role_deprecated_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace friends
}  // namespace protocol
}  // namespace bgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_friends_5ftypes_2eproto__INCLUDED
