// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profanity_filter_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "profanity_filter_config.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace profanity {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* WordFilter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WordFilter_reflection_ = NULL;
const ::google::protobuf::Descriptor* WordFilters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WordFilters_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_profanity_5ffilter_5fconfig_2eproto() {
  protobuf_AddDesc_profanity_5ffilter_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "profanity_filter_config.proto");
  GOOGLE_CHECK(file != NULL);
  WordFilter_descriptor_ = file->message_type(0);
  static const int WordFilter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilter, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilter, regex_),
  };
  WordFilter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WordFilter_descriptor_,
      WordFilter::default_instance_,
      WordFilter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WordFilter));
  WordFilters_descriptor_ = file->message_type(1);
  static const int WordFilters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilters, filters_),
  };
  WordFilters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WordFilters_descriptor_,
      WordFilters::default_instance_,
      WordFilters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WordFilters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WordFilters));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_profanity_5ffilter_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WordFilter_descriptor_, &WordFilter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WordFilters_descriptor_, &WordFilters::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_profanity_5ffilter_5fconfig_2eproto() {
  delete WordFilter::default_instance_;
  delete WordFilter_reflection_;
  delete WordFilters::default_instance_;
  delete WordFilters_reflection_;
}

void protobuf_AddDesc_profanity_5ffilter_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035profanity_filter_config.proto\022\031bgs.pro"
    "tocol.profanity.v1\")\n\nWordFilter\022\014\n\004type"
    "\030\001 \002(\t\022\r\n\005regex\030\002 \002(\t\"E\n\013WordFilters\0226\n\007"
    "filters\030\001 \003(\0132%.bgs.protocol.profanity.v"
    "1.WordFilterB\002H\002", 176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "profanity_filter_config.proto", &protobuf_RegisterTypes);
  WordFilter::default_instance_ = new WordFilter();
  WordFilters::default_instance_ = new WordFilters();
  WordFilter::default_instance_->InitAsDefaultInstance();
  WordFilters::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_profanity_5ffilter_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_profanity_5ffilter_5fconfig_2eproto {
  StaticDescriptorInitializer_profanity_5ffilter_5fconfig_2eproto() {
    protobuf_AddDesc_profanity_5ffilter_5fconfig_2eproto();
  }
} static_descriptor_initializer_profanity_5ffilter_5fconfig_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int WordFilter::kTypeFieldNumber;
const int WordFilter::kRegexFieldNumber;
#endif  // !_MSC_VER

WordFilter::WordFilter()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.profanity.v1.WordFilter)
}

void WordFilter::InitAsDefaultInstance() {
}

WordFilter::WordFilter(const WordFilter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.profanity.v1.WordFilter)
}

void WordFilter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WordFilter::~WordFilter() {
  // @@protoc_insertion_point(destructor:bgs.protocol.profanity.v1.WordFilter)
  SharedDtor();
}

void WordFilter::SharedDtor() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regex_;
  }
  if (this != default_instance_) {
  }
}

void WordFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WordFilter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WordFilter_descriptor_;
}

const WordFilter& WordFilter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_profanity_5ffilter_5fconfig_2eproto();
  return *default_instance_;
}

WordFilter* WordFilter::default_instance_ = NULL;

WordFilter* WordFilter::New() const {
  return new WordFilter;
}

void WordFilter::Swap(WordFilter* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata WordFilter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WordFilter_descriptor_;
  metadata.reflection = WordFilter_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int WordFilters::kFiltersFieldNumber;
#endif  // !_MSC_VER

WordFilters::WordFilters()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.profanity.v1.WordFilters)
}

void WordFilters::InitAsDefaultInstance() {
}

WordFilters::WordFilters(const WordFilters& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.profanity.v1.WordFilters)
}

void WordFilters::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WordFilters::~WordFilters() {
  // @@protoc_insertion_point(destructor:bgs.protocol.profanity.v1.WordFilters)
  SharedDtor();
}

void WordFilters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WordFilters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WordFilters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WordFilters_descriptor_;
}

const WordFilters& WordFilters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_profanity_5ffilter_5fconfig_2eproto();
  return *default_instance_;
}

WordFilters* WordFilters::default_instance_ = NULL;

WordFilters* WordFilters::New() const {
  return new WordFilters;
}

void WordFilters::Swap(WordFilters* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata WordFilters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WordFilters_descriptor_;
  metadata.reflection = WordFilters_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace profanity
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
