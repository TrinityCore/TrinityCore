// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: club_name_generator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "club_name_generator.pb.h"

#include <utility>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* NameGeneratorConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NameGeneratorConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* NameGeneratorScorecard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NameGeneratorScorecard_reflection_ = NULL;
const ::google::protobuf::Descriptor* NameGenerator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NameGenerator_reflection_ = NULL;
const ::google::protobuf::Descriptor* NameGeneratorReplacement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NameGeneratorReplacement_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_club_5fname_5fgenerator_2eproto() {
  protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "club_name_generator.proto");
  GOOGLE_CHECK(file != NULL);
  NameGeneratorConfig_descriptor_ = file->message_type(0);
  static const int NameGeneratorConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorConfig, name_generators_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorConfig, club_type_scorecard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorConfig, locale_scorecard_),
  };
  NameGeneratorConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NameGeneratorConfig_descriptor_,
      NameGeneratorConfig::default_instance_,
      NameGeneratorConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NameGeneratorConfig));
  NameGeneratorScorecard_descriptor_ = file->message_type(1);
  static const int NameGeneratorScorecard_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, is_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, full_match_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, partial_match_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, partial_fallback_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, full_fallback_),
  };
  NameGeneratorScorecard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NameGeneratorScorecard_descriptor_,
      NameGeneratorScorecard::default_instance_,
      NameGeneratorScorecard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorScorecard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NameGeneratorScorecard));
  NameGenerator_descriptor_ = file->message_type(2);
  static const int NameGenerator_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, replacements_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, club_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, locales_),
  };
  NameGenerator_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NameGenerator_descriptor_,
      NameGenerator::default_instance_,
      NameGenerator_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGenerator, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NameGenerator));
  NameGeneratorReplacement_descriptor_ = file->message_type(3);
  static const int NameGeneratorReplacement_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorReplacement, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorReplacement, options_),
  };
  NameGeneratorReplacement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NameGeneratorReplacement_descriptor_,
      NameGeneratorReplacement::default_instance_,
      NameGeneratorReplacement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorReplacement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameGeneratorReplacement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NameGeneratorReplacement));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_club_5fname_5fgenerator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NameGeneratorConfig_descriptor_, &NameGeneratorConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NameGeneratorScorecard_descriptor_, &NameGeneratorScorecard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NameGenerator_descriptor_, &NameGenerator::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NameGeneratorReplacement_descriptor_, &NameGeneratorReplacement::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_club_5fname_5fgenerator_2eproto() {
  delete NameGeneratorConfig::default_instance_;
  delete NameGeneratorConfig_reflection_;
  delete NameGeneratorScorecard::default_instance_;
  delete NameGeneratorScorecard_reflection_;
  delete NameGenerator::default_instance_;
  delete NameGenerator_reflection_;
  delete NameGeneratorReplacement::default_instance_;
  delete NameGeneratorReplacement_reflection_;
}

void protobuf_AddDesc_club_5fname_5fgenerator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bgs::protocol::club::v1::protobuf_AddDesc_club_5ftype_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031club_name_generator.proto\022\024bgs.protoco"
    "l.club.v1\032\017club_type.proto\"\346\001\n\023NameGener"
    "atorConfig\022<\n\017name_generators\030\001 \003(\0132#.bg"
    "s.protocol.club.v1.NameGenerator\022I\n\023club"
    "_type_scorecard\030\002 \001(\0132,.bgs.protocol.clu"
    "b.v1.NameGeneratorScorecard\022F\n\020locale_sc"
    "orecard\030\003 \001(\0132,.bgs.protocol.club.v1.Nam"
    "eGeneratorScorecard\"\211\001\n\026NameGeneratorSco"
    "recard\022\023\n\013is_required\030\001 \001(\010\022\022\n\nfull_matc"
    "h\030\002 \001(\r\022\025\n\rpartial_match\030\003 \001(\r\022\030\n\020partia"
    "l_fallback\030\004 \001(\r\022\025\n\rfull_fallback\030\005 \001(\r\""
    "\257\001\n\rNameGenerator\022\r\n\005names\030\001 \003(\t\022D\n\014repl"
    "acements\030\002 \003(\0132..bgs.protocol.club.v1.Na"
    "meGeneratorReplacement\0228\n\nclub_types\030\003 \003"
    "(\0132$.bgs.protocol.club.v1.UniqueClubType"
    "\022\017\n\007locales\030\004 \003(\t\"7\n\030NameGeneratorReplac"
    "ement\022\n\n\002id\030\001 \001(\t\022\017\n\007options\030\002 \003(\tB\002H\002P\000", 680);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "club_name_generator.proto", &protobuf_RegisterTypes);
  NameGeneratorConfig::default_instance_ = new NameGeneratorConfig();
  NameGeneratorScorecard::default_instance_ = new NameGeneratorScorecard();
  NameGenerator::default_instance_ = new NameGenerator();
  NameGeneratorReplacement::default_instance_ = new NameGeneratorReplacement();
  NameGeneratorConfig::default_instance_->InitAsDefaultInstance();
  NameGeneratorScorecard::default_instance_->InitAsDefaultInstance();
  NameGenerator::default_instance_->InitAsDefaultInstance();
  NameGeneratorReplacement::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_club_5fname_5fgenerator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_club_5fname_5fgenerator_2eproto {
  StaticDescriptorInitializer_club_5fname_5fgenerator_2eproto() {
    protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  }
} static_descriptor_initializer_club_5fname_5fgenerator_2eproto_;
// ===================================================================

#ifndef _MSC_VER
const int NameGeneratorConfig::kNameGeneratorsFieldNumber;
const int NameGeneratorConfig::kClubTypeScorecardFieldNumber;
const int NameGeneratorConfig::kLocaleScorecardFieldNumber;
#endif  // !_MSC_VER

NameGeneratorConfig::NameGeneratorConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.NameGeneratorConfig)
}

void NameGeneratorConfig::InitAsDefaultInstance() {
  club_type_scorecard_ = const_cast< ::bgs::protocol::club::v1::NameGeneratorScorecard*>(&::bgs::protocol::club::v1::NameGeneratorScorecard::default_instance());
  locale_scorecard_ = const_cast< ::bgs::protocol::club::v1::NameGeneratorScorecard*>(&::bgs::protocol::club::v1::NameGeneratorScorecard::default_instance());
}

NameGeneratorConfig::NameGeneratorConfig(const NameGeneratorConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.NameGeneratorConfig)
}

void NameGeneratorConfig::SharedCtor() {
  _cached_size_ = 0;
  club_type_scorecard_ = NULL;
  locale_scorecard_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NameGeneratorConfig::~NameGeneratorConfig() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.NameGeneratorConfig)
  SharedDtor();
}

void NameGeneratorConfig::SharedDtor() {
  if (this != default_instance_) {
    delete club_type_scorecard_;
    delete locale_scorecard_;
  }
}

void NameGeneratorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameGeneratorConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NameGeneratorConfig_descriptor_;
}

const NameGeneratorConfig& NameGeneratorConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  return *default_instance_;
}

NameGeneratorConfig* NameGeneratorConfig::default_instance_ = NULL;

NameGeneratorConfig* NameGeneratorConfig::New() const {
  return new NameGeneratorConfig;
}

void NameGeneratorConfig::Swap(NameGeneratorConfig* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata NameGeneratorConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NameGeneratorConfig_descriptor_;
  metadata.reflection = NameGeneratorConfig_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int NameGeneratorScorecard::kIsRequiredFieldNumber;
const int NameGeneratorScorecard::kFullMatchFieldNumber;
const int NameGeneratorScorecard::kPartialMatchFieldNumber;
const int NameGeneratorScorecard::kPartialFallbackFieldNumber;
const int NameGeneratorScorecard::kFullFallbackFieldNumber;
#endif  // !_MSC_VER

NameGeneratorScorecard::NameGeneratorScorecard()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.NameGeneratorScorecard)
}

void NameGeneratorScorecard::InitAsDefaultInstance() {
}

NameGeneratorScorecard::NameGeneratorScorecard(const NameGeneratorScorecard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.NameGeneratorScorecard)
}

void NameGeneratorScorecard::SharedCtor() {
  _cached_size_ = 0;
  is_required_ = false;
  full_match_ = 0u;
  partial_match_ = 0u;
  partial_fallback_ = 0u;
  full_fallback_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NameGeneratorScorecard::~NameGeneratorScorecard() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.NameGeneratorScorecard)
  SharedDtor();
}

void NameGeneratorScorecard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NameGeneratorScorecard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameGeneratorScorecard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NameGeneratorScorecard_descriptor_;
}

const NameGeneratorScorecard& NameGeneratorScorecard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  return *default_instance_;
}

NameGeneratorScorecard* NameGeneratorScorecard::default_instance_ = NULL;

NameGeneratorScorecard* NameGeneratorScorecard::New() const {
  return new NameGeneratorScorecard;
}

void NameGeneratorScorecard::Swap(NameGeneratorScorecard* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata NameGeneratorScorecard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NameGeneratorScorecard_descriptor_;
  metadata.reflection = NameGeneratorScorecard_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int NameGenerator::kNamesFieldNumber;
const int NameGenerator::kReplacementsFieldNumber;
const int NameGenerator::kClubTypesFieldNumber;
const int NameGenerator::kLocalesFieldNumber;
#endif  // !_MSC_VER

NameGenerator::NameGenerator()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.NameGenerator)
}

void NameGenerator::InitAsDefaultInstance() {
}

NameGenerator::NameGenerator(const NameGenerator& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.NameGenerator)
}

void NameGenerator::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NameGenerator::~NameGenerator() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.NameGenerator)
  SharedDtor();
}

void NameGenerator::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NameGenerator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameGenerator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NameGenerator_descriptor_;
}

const NameGenerator& NameGenerator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  return *default_instance_;
}

NameGenerator* NameGenerator::default_instance_ = NULL;

NameGenerator* NameGenerator::New() const {
  return new NameGenerator;
}

void NameGenerator::Swap(NameGenerator* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata NameGenerator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NameGenerator_descriptor_;
  metadata.reflection = NameGenerator_reflection_;
  return metadata;
}

// ===================================================================

#ifndef _MSC_VER
const int NameGeneratorReplacement::kIdFieldNumber;
const int NameGeneratorReplacement::kOptionsFieldNumber;
#endif  // !_MSC_VER

NameGeneratorReplacement::NameGeneratorReplacement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.club.v1.NameGeneratorReplacement)
}

void NameGeneratorReplacement::InitAsDefaultInstance() {
}

NameGeneratorReplacement::NameGeneratorReplacement(const NameGeneratorReplacement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.club.v1.NameGeneratorReplacement)
}

void NameGeneratorReplacement::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NameGeneratorReplacement::~NameGeneratorReplacement() {
  // @@protoc_insertion_point(destructor:bgs.protocol.club.v1.NameGeneratorReplacement)
  SharedDtor();
}

void NameGeneratorReplacement::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void NameGeneratorReplacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameGeneratorReplacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NameGeneratorReplacement_descriptor_;
}

const NameGeneratorReplacement& NameGeneratorReplacement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_club_5fname_5fgenerator_2eproto();
  return *default_instance_;
}

NameGeneratorReplacement* NameGeneratorReplacement::default_instance_ = NULL;

NameGeneratorReplacement* NameGeneratorReplacement::New() const {
  return new NameGeneratorReplacement;
}

void NameGeneratorReplacement::Swap(NameGeneratorReplacement* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata NameGeneratorReplacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NameGeneratorReplacement_descriptor_;
  metadata.reflection = NameGeneratorReplacement_reflection_;
  return metadata;
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)
