Wed Aug 29 08:16:04 CEST 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.1.4 released.

Mon Aug 27 20:38:00 UTC 2012  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_linux.GNU: Make CC and CXX setting
          conditional again. Conditional behavior is relied upon by users.
          Reverts the following:
          Tue Mar  1 11:31:55 UTC 2011  Olli Savia  <ops@iki.fi>

Mon Aug 27 09:43:43 UTC 2012  johnny  <jwillemsen@remedy.nl>

        * apps/JAWS/clients/WebSTONE/src/config.cache:
        * apps/JAWS/clients/WebSTONE/src/config.log:
        * apps/JAWS/clients/WebSTONE/src/config.status:
          Removed these files, generated by configure and
          shouldn't be stored in the repository

Fri Aug 24 10:27:22 UTC 2012  johnny  <jwillemsen@remedy.nl>

        * examples/APG/Streams/CommandModule.h:
        * tests/Service_Config_Stream_Test.cpp:
          Add ACE_System_Time_Policy as second template argument
          to ACE_Module, the default template argument doesn't
          work with clang which seems to be a bug in that
          compiler

Thu Aug 23 12:33:35 UTC 2012  johnny  <johnny@>

        * ace/Condition_Attributes.inl:
        * ace/config-hpux-11.00.h:
          Another fix for hpux ia64 v3

Thu Aug 23 06:35:20 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Attributes.inl:
          Only check for ACE_LACKS_MONOTONIC_TIME

        * ace/Monotonic_Time_Policy.inl:
          Layout change

        * ace/config-hpux-11.00.h:
          Added ACE_LACKS_MONOTONIC_TIME

Wed Aug 22 11:50:22 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-common.h:
          Added ACE_LACKS_CLOCK_MONOTONIC and
          ACE_LACKS_CLOCK_REALTIME

Wed Aug 22 06:13:12 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_time.h:
          Fixed incorrect check in this file

Tue Aug 21 16:55:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_time.h:
          Introduced new ACE_LACKS_CLOCKID_T which is used to determine whether
          we need to define clockid_t in ACE. Moved CLOCK_MONOTONIC and
          CLOCK_REALTIME to file below

        * ace/os_include/sys/os_types.h:
          Added CLOCK_MONOTONIC and CLOCK_REALTIME here and introduced new
          ACE_LACKS_CLOCK_REALTIME and ACE_LACKS_CLOCK_MONOTONIC because on
          for example HPUX CLOCK_REALTIME is not a define but part of an enum

        * ace/config-win32-common.h:
          Added ACE_LACKS_CLOCKID_T

Tue Aug 21 14:38:00 UTC 2012  Simon Massey  <simon dot massey at prismtech dot com>

        * protocols/ace/INet/SSL_CallbackManager.h:
          Spelling in comment.

Tue Aug 21 12:25:45 UTC 2012  Simon Massey  <simon dot massey at prismtech dot com>

        * ace/SSL/SSL_Context.h:
        * ace/SSL/SSL_Context.inl:

          Solaris studio compilers amongst others were issuing warnings due to an
          incorrect type of function pointer (i.e. not extern "C", but standard
          C++ type) being stored/used of the form:

            Warning (Anachronism): Formal argument callback of type
              extern "C" int(*)(int,x509_store_ctx_st*)
            in call to
              SSL_CTX_set_verify(ssl_ctx_st*, int, extern "C" int(*)(int,x509_store_ctx_st*))
            is being passed
              int(*)(int,x509_store_ctx_st*)

          when the C++ code was providing callback functions to certain C system SSL
          library calls.

          Unfortunatly you cannot specify extern "C" linkage anywhere inside a
          class declaration or inside a function prototype for individual
          parameters. I.e:

            class { extern "C" int (*callback_) (int, void *); };

          to store an extern "C" function pointer as a data member of the
          class is illegal, as is:

            void function (extern "C" int (*callback) (int, void *);

          to declare a function (or a class member) that takes a extern "C"
          function pointer as a parameter.

          Since we need to specify an extern "C" function pointer as a parameter
          to be stored in the class and handled by member functions, we are forced
          to declare a typedef of that extern "C" function pointer outside of the
          class that we can then use. Unfortunatly you also are not allowed to
          simply add the extern "C" to the typedef itself, like this:

            typedef extern "C" int (*extern_C_callback_t) (int, void *);

          instead you have to place the typedef declaration inside an extern "C"
          block, thus:

            extern "C" {
              typedef int (*extern_C_callback_t) (int, void *);
            }

          This then results in the correct call type associated with the
          function pointer which may then be used inside the function and
          class declarations to remove these warnings and possiable incorrect
          call methods undertaken via the STL C functions. A lot of different
          compilers ignore extern "C" where it is not allowed, the only way
          I have found to be universally understood is as stated above.

        * protocols/ace/INet/SSL_CallbackManager.h:
        * protocols/ace/INet/SSL_CallbackManager.cpp:

          Similar problems and interfacing to the changed calling type of the above
          extern "C" function pointers. NOTE: just declaring a static function for
          the class is NOT sufficient to obtain the correct extern "C" calling type.
          We are therefore forced to declare friend functions external to the class
          (as again we cannot have a extern "C" declaration inside a class even for
          a static method) to do this job. Since these are extern "C" functions they
          also of course cannot be overloaded, i.e. they are required to be unique
          names. They also cannot be non-class static functions to make them private
          to the cpp file as they need to actually be seen by the class declaration
          to be made friends and therefore have to be included in the header file.

Tue Aug 21 12:20:43 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_types.h:
          Fixed HPUX problem

Tue Aug 21 02:45:07 UTC 2012  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/config-macosx-leopard.h:
          setclock not supported on current macs.

Mon Aug 20 18:07:25 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Global_Macros.h:
          Doxyen fixes

        * bin/valgrind.supp:
          Added another needed suppression

Mon Aug 20 10:03:23 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ACE-monotonic-timer.html:
          Fixed fuzz

Mon Aug 20 09:03:22 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Module.cpp:
          Fixed possible memory leak and dead code, uncovered by Coverity scan

Mon Aug 20 08:36:46 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ACE-monotonic-timer.html:
          New document describing the ACE monotonic timer support for conditions,
          message queues and tasks

        * docs/index.html:
          Added new page, removed link to site that doesn't work anymore

Mon Aug 20 08:21:00 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_types.h:
          Define CLOCK_MONOTONIC to 1 when it is not defined, should fix
          hpux problems

Mon Aug 20 07:57:53 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Attributes.h:
        * ace/Condition_Attributes.inl:
          Added accessor for attributes and removed friend declaration,
          that hopefully fixes the Sun Studio 11 problems

        * ace/Condition_Recursive_Thread_Mutex.cpp:
        * ace/Condition_T.cpp:
        * ace/Condition_Thread_Mutex.cpp:
          Use accessor of the attributes.

Sat Aug 18 19:25:38 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Null_Condition.h:
          Fix for single threaded builds

Sat Aug 18 19:23:21 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Attributes.h:
          Added forward declaration, maybe this fixes solaris 9

Fri Aug 17 18:05:54 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.inl:
          Attempt to fix clang warning

Fri Aug 17 13:38:05 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/Condition_Recursive_Thread_Mutex.h:
        * ace/Condition_Thread_Mutex.h:
        * ace/Null_Condition.h:
        * ace/Synch_Traits.h:
          Changes to attempt to fix Solaris9 SUNStudio11 problems.

Fri Aug 17 12:28:32 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-hpux-11.00.h:
        * ace/config-linux.h:
          Fixes (hopefully) for non-compliant POSIX platforms.

Fri Aug 17 11:19:01 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * tests/Monotonic_Message_Queue_Test.cpp:
        * tests/Monotonic_Task_Test.cpp:
          Added include files because of compile errors in certain
          builds.

Fri Aug 17 09:04:50 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/Message_Queue_T.h:
        * ace/Message_Queue_T.cpp:
        * ace/Stream.h:
        * ace/Stream.cpp:
        * tests/Bug_4055_Regression_Test.cpp:
        * tests/Monotonic_Task_Test.cpp:
          Fixed compile errors for a bunch of crappy compilers
          like the one on RHEL53 and AIX.

Thu Aug 16 18:47:59 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:
          List Time_Value_T files

Thu Aug 16 13:43:39 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/Message_Queue_T.cpp:
        * ace/Stream.cpp:
        * ace/Thread_Manager.cpp:
        * tests/Bug_4055_Regression_Test.cpp:
          Fixed problems with single threaded builds.

Thu Aug 16 12:44:05 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/Task_T.inl:
        * ace/Time_Policy_T.inl:
          Fuzz fixes.

Thu Aug 16 09:43:00 UTC 2012  Simon Massey <sma at prismtech dot com>

        * test/Bug_3943_Regression_Test.cpp:

          Another cast required to remove warning.

Thu Aug 16 09:22:31 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/Condition_Attributes.h:
        * ace/Condition_Attributes.inl:
        * ace/Condition_Attributes.cpp:
        * ace/Condition_Recursive_Thread_Mutex.h:
        * ace/Condition_Recursive_Thread_Mutex.cpp:
        * ace/Condition_T.h:
        * ace/Condition_T.cpp:
        * ace/Condition_Thread_Mutex.h:
        * ace/Condition_Thread_Mutex.inl:
        * ace/Condition_Thread_Mutex.cpp:
        * ace/Message_Queue.h:
        * ace/Message_Queue_T.h:
        * ace/Message_Queue_T.cpp:
        * ace/Module.h:
        * ace/Module.inl:
        * ace/Module.cpp:
        * ace/Monotonic_Time_Policy.h:
        * ace/Monotonic_Time_Policy.inl:
        * ace/Monotonic_Time_Policy.cpp:
        * ace/Null_Condition.h:
        * ace/OS_NS_Thread.h:
        * ace/OS_NS_Thread.inl:
        * ace/OS_NS_Thread.cpp:
        * ace/Stream.h:
        * ace/Stream.inl:
        * ace/Stream.cpp:
        * ace/Stream_Modules.h:
        * ace/Stream_Modules.cpp:
        * ace/Synch_Traits.h:
        * ace/Task_Ex_T.h:
        * ace/Task_Ex_T.inl:
        * ace/Task_Ex_T.cpp:
        * ace/Task_T.h:
        * ace/Task_T.inl:
        * ace/Task_T.cpp:
        * ace/Thread_Manager.h:
        * ace/Thread_Manager.cpp:
        * ace/Thread_Mutex.h:
        * ace/Time_Policy.h:
        * ace/Time_Policy.inl:
        * ace/Time_Policy.cpp:
        * ace/Time_Policy_T.h:
        * ace/Time_Policy_T.inl:
        * ace/Time_Policy_T.cpp:
        * ace/Time_Value.h:
        * ace/Time_Value.cpp:
        * ace/Time_Value_T.h:
        * ace/Time_Value_T.inl:
        * ace/Time_Value_T.cpp:
        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:
          Added a Monotonic time policy and a Time_Value template
          supporting time policies. Refactored OS_NS_Thread time
          calculations to use new time policy aware functionality
          of time values. Added support for monotonic timers with
          condition variables in message queues, tasks and related
          classes. See NEWS file and new regression tests for more
          details.
          Full backward compatibility is maintained.

        * tests/Bug_4055_Regression_Test.cpp:
          Updated to fixed state.

        * tests/Monotonic_Message_Queue_Test.cpp:
        * tests/Monotonic_Task_Test.cpp:
        * tests/run_test.lst:
        * tests/tests.mpc:
          Added new monotonic timer regression tests.

        * NEWS:
          Added detailed update descriptions.

Thu Aug 16 09:24:00 UTC 2012  Simon Massey <sma at prismtech dot com>

        * bin/PerlACE/Process_Win32.pm:
        * bin/PerlACE/ProcessVX_Win32.pm:

          If we wait for a process to exit, and it does, set the RUNNING status to false.

Thu Aug 16 08:26:12 UTC 2012  Olli Savia  <ops@iki.fi>

        * tests/tests.mpc:
          Bug_4055_Regression_Test uses threads.

Wed Aug 15 14:10:00 UTC 2012  Simon Massey <sma at prismtech dot com>

        * test/Bug_3911_Regression_Test.cpp:
        * test/Bug_3943_Regression_Test.cpp:

          Some compilers warning against ordering pointers with integers.

Wed Aug 15 11:42:28 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_clang.GNU:
          Support for c++0x flag

Wed Aug 15 11:29:48 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_clang_common.GNU:
          Support for c++0x flag

Tue Aug 14 22:22:05 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * ace/config-vxworks6.8.h:

          When building for VxWorks kernel mode, define ACE_LACKS_STD_WSTRING.

Tue Aug 14 06:35:54 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/valgrind.supp:
          Extended suppression list

Thu Aug  9 07:03:10 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/bczar/bczar.html:
          Added packages

        * include/makeinclude/platform_g++_common.GNU:
          Use -Wno-deprecated with C++11 due to the heavy usage of auto_ptr

        * tests/randomize.h:
          Doxygen fix

Wed Aug  8 22:13:55 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * ace/ACE.cpp:
        * ace/ACE_crc_ccitt.cpp:
        * ace/Basic_Types.h:
        * ace/Configuration_Import_Export.cpp:
        * ace/Handle_Set.inl:
        * ace/INET_Addr.inl:
        * ace/Message_Queue_Vx.inl:
        * ace/Name_Request_Reply.cpp:
        * ace/OS_NS_stdlib.cpp:
        * ace/OS_NS_unistd.inl:
        * ace/Select_Reactor_T.inl:
        * ace/Service_Config.cpp:
        * ace/Stack_Trace.cpp:
        * ace/UUID.cpp:
        * ace/config-vxworks6.9.h:
        * include/makeinclude/platform_vxworks6.8.GNU:
        * include/makeinclude/platform_vxworks6.9.GNU:

          Enable compiling for 64-bit VxWorks 6.9 (x86 RTP static).

Wed Aug  8 15:30:00 UTC 2012  Simon Massey  <sma at prismtech dot com>

        * ace/config-linux.h:

          According to man pages Linux uses different (compared to UNIX systems) types
          for setting IP_MULTICAST_TTL and IPV6_MULTICAST_LOOP / IP_MULTICAST_LOOP
          in setsockopt/getsockopt.
          In the current (circa 2012) kernel source however there is an explicit check
          for IPV6_MULTICAST_LOOP being sizeof(int). Anything else is rejected so it must
          not be a passed a bool, irrespective of what the man pages (still) say.
          i.e. #define ACE_HAS_IPV6_MULTICAST_LOOP_AS_BOOL 1 is wrong.

        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_Dgram_Mcast.inl:

          Override read/write acessor for the constructor options
          This class is typically default instantiated in a connection handler templated
          framework so these cannot be specified on construction.

Mon Aug  6 20:54:17 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * bin/PerlACE/TestTarget.pm:

          Updated fix from Fri Jul 20 17:37:27 UTC 2012 to work when
          one of source or destination is a relative path and other is not.

Sat Jul 28 19:22:06 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release.py:
          Fixed exclude

Fri Jul 27 10:55:51 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ace.doxygen:
        * etc/ace_inet.doxygen:
        * etc/ace_qos.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/acexml.doxygen:
          Generate UML diagrams, assume stl is buildin

Fri Jul 27 08:57:07 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ace.doxygen:
        * etc/ace_inet.doxygen:
        * etc/ace_qos.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/acexml.doxygen:
          Upgraded with doxygen -u

Thu Jul 26 16:22:35 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release.py:
        * docs/bczar/bczar.html:
          Improved instructions

Thu Jul 26 14:40:45 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/bczar/bczar.html:
          Set all environment variables explicitly before running the doxygen
          script

Thu Jul 26 10:19:34 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ARGV.h:
        * ace/Arg_Shifter.h:
          Doxygen improvements

        * rpmbuild/ace-tao.spec:
          Removed ACE_XML_Utils, only compiled when xercesc is enabled

Thu Jul 26 09:31:19 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
          Updated for next release

        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * bin/make_release.py:
        * docs/Download.html:
        * docs/bczar/bczar.html:
          Updated for x.1.3 release

        * etc/ace.doxygen:
        * etc/ace_inet.doxygen:
        * etc/ace_qos.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/acexml.doxygen:
        * etc/index.html:
          Removed deprecated tag

Thu Jul 26 09:12:26 CEST 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.1.3 released.

Fri Jul 20 17:37:27 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * ace/config-vxworks6.8.h:
        * ace/config-vxworks6.9.h:

          Changes to build for VxWorks 6.8 kernel mode.

        * bin/PerlACE/ProcessVX_Win32.pm:
        * tests/run_test.lst:

          Changes for VxWorks testing.

        * bin/PerlACE/TestTarget.pm

          Fixed a Perl bug (ne vs. !=).

Wed Jul 18 15:40:05 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * Happy 50th Birthday to me!

Tue Jun 26 21:47:18 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * bin/valgrind.supp:

          Made the suppression for dlopen more generic, so that it
          can work for different linux/glibc versions.

Tue Jun 26 13:18:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_4055_Regression_Test.cpp:
          Added commented out way to get the hr time

Mon Jun 25 17:40:35 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_4055_Regression_Test.cpp:
        * tests/run_test.lst:
        * tests/tests.mpc:
          Added new unit test which currently fails. The ACE condition
          variables use an absolute timeout. If we for example wait for a
          timeout 3 seconds in the future and the system time is changed 10
          seconds back we are really waiting 13 seconds now. The ACE timer
          queues have support for using a monotonic time source using the
          time policies but this support is not available for conditions at
          this moment. When that is added, than in the ACE threading code
          the monotonic time source can be set on the pthread condition
          to control that we want to use a monotonic time source.

Mon Jun 25 09:31:34 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Attributes.h:
        * ace/Condition_Attributes.inl:
        * ace/Condition_Attributes.cpp:
        * ace/Condition_Recursive_Thread_Mutex.h:
        * ace/Condition_Thread_Mutex.h:
        * ace/Condition_Thread_Mutex.inl:
        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:
          Moved condition attributes to its own file

Fri Jun 22 00:30:11 UTC 2012  James H. Hill  <hillj at cs dot iupui dot edu>

        * tests/CDR_Test.cpp:

          Fixed compilation warnings on CentOS 3.9 and vc9

Thu Jun 21 17:08:55 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL.h:
        * ace/DLL_Manager.h:
        * ace/DLL_Manager.cpp:
          Changed the order that the ACE_DLL_Manager attempts to open a library
          Foo so that it will try <prefix>Foo<decorator>.<suffix> before
          Foo<decorator>.<suffix>. This makes library loading using ACE succeed
          on the first try instead of the fourth on any platform requiring a
          library prefix, like Linux. For platforms that don't have a prefix
          it will also succeed on the first time. Thanks to Trent Nadeau
          <Trent dot Nadeau at ngc dot com> for providing this improvement

Wed Jun 20 12:54:29 UTC 2012  James H. Hill  <hillj at cs dot iupui dot edu>

        * tests/CDR_Test.cpp:

          Fixed error in test execution.

Mon Jun 18 20:40:29 UTC 2012  James H. Hill  <hillj at cs dot iupui dot edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
        * tests/CDR_Test.cpp:

          Extended ACE_OutputCDR placeholders to support all ACE_CDR
          simple types.

Mon Jun 18 13:20:32 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/auto_run_tests.pl:
          Use -z for debug mode

Mon Jun 18 06:44:11 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * debian/*:
          Updated with latest files from debian packaging

Thu Jun 14 14:05:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XML_Error_Handler.cpp:
          Only print errors on cerr when we have ACE::debug enabled

Wed Jun 13 05:57:16 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/bczar/bczar.html:
          Added another package

Tue Jun 12 17:30:47 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release.py:
          Exclude CIAO_*_OpenDDS workspaces for the moment

Mon Jun 11 21:45:19 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * NEWS:
        * ace/config-lite.h:
        * include/makeinclude/platform_sunos5_sunc++.GNU:

          Added support for Oracle Solaris Studio 12 Update 3 (SunCC 5.12).

Mon Jun 11 17:05:36 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/auto_run_tests.pl:
          Added option -d to run OpenDDS tests also

        * bin/diff-builds-and-group-fixed-tests-only.sh:
          Also check OpenDDS lst files

Thu Jun  7 10:13:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Thread_Mutex.h:
        * ace/Dynamic_Message_Strategy.h:
        * ace/Message_Queue.h:
        * ace/Metrics_Cache_T.h:
          Doxygen fixes

Wed Jun  6 14:46:53 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XSCRT/Traversal.hpp:
        * ace/XML_Utils/XSCRT/Traversal.tpp:
          Readded tpp file, shouldn't have been deleted

Wed Jun  6 13:09:02 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XMLSchema/Traversal.hpp:
        * ace/XML_Utils/XMLSchema/Types.hpp:
        * ace/XML_Utils/XMLSchema/Writer.hpp:
        * ace/XML_Utils/XSCRT/Elements.hpp:
        * ace/XML_Utils/XSCRT/Parser.hpp:
        * ace/XML_Utils/XSCRT/Traversal.hpp:
        * ace/XML_Utils/XSCRT/Writer.hpp:
        * ace/XML_Utils/XSCRT/XML.hpp:
          Removed includes

        * ace/XML_Utils/XMLSchema/Traversal.tpp:
        * ace/XML_Utils/XMLSchema/Types.tpp:
        * ace/XML_Utils/XMLSchema/Writer.tpp:
        * ace/XML_Utils/XSCRT/Elements.tpp:
        * ace/XML_Utils/XSCRT/Parser.tpp:
        * ace/XML_Utils/XSCRT/Traversal.tpp:
        * ace/XML_Utils/XSCRT/Writer.tpp:
        * ace/XML_Utils/XSCRT/XML.tpp:
          Removed these files.

Wed Jun  6 10:27:33 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XML.mpc:
          Install fixes

Wed Jun  6 08:12:22 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XML.mpc:
          Install fixes

Fri Jun  1 12:43:48 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Thread_Mutex.cpp:
        * ace/Message_Queue_T.h:
        * ace/Message_Queue_T.cpp:
        * ace/Thread_Semaphore.h:
        * ace/Time_Policy.h:
        * ace/Timer_Hash_T.h:
          Doxygen fixes

Thu May 31 14:05:51 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rpmbuild/ace-tao.spec:
          Added new library

Thu May 31 12:31:38 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils/XMLSchema:
        * ace/XML_Utils/XMLSchema/Traversal.hpp:
        * ace/XML_Utils/XMLSchema/TypeInfo.hpp:
        * ace/XML_Utils/XMLSchema/Types.hpp:
        * ace/XML_Utils/XMLSchema/Writer.hpp:
        * ace/XML_Utils/XMLSchema/id_map.hpp:
        * ace/XML_Utils/XSCRT:
        * ace/XML_Utils/XSCRT/Elements.hpp:
        * ace/XML_Utils/XSCRT/ExtendedTypeInfo.hpp:
        * ace/XML_Utils/XSCRT/Parser.hpp:
        * ace/XML_Utils/XSCRT/Traversal.hpp:
        * ace/XML_Utils/XSCRT/Writer.hpp:
        * ace/XML_Utils/XSCRT/XML.hpp:
        * ace/XML_Utils/XSCRT/XMLSchema.hpp:
          Moved these files from DAnCE to ACE

        * ace/XML_Utils/XSCRT/Elements.ipp:
        * ace/XML_Utils/XSCRT/Parser.ipp:
        * ace/XML_Utils/XSCRT/Traversal.ipp:
        * ace/XML_Utils/XSCRT/Writer.ipp:
        * ace/XML_Utils/XSCRT/XML.ipp:
          Removed these files.

Thu May 31 09:12:07 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XML_Utils:
        * ace/XML_Utils/XML.mpc:
        * ace/XML_Utils/XML_Error_Handler.h:
        * ace/XML_Utils/XML_Helper.h:
        * ace/XML_Utils/XML_Schema_Resolver.h:
        * bin/MakeProjectCreator/config/ace_xml_utils.mpb:
          New ACE_XML_Utils library. This is coming from DAnCe and had to
          move to ACE because it is now used in more places and soon will
          also be used by OpenDDS

Thu May 31 07:57:59 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/High_Res_Timer.h:
        * ace/Message_Block.h:
          Doxygen improvements

        * ace/High_Res_Timer.inl:
          Use gsf type to prevent overflow

        * docs/bczar/bczar.html:
          Added some more packages

Thu May 24 14:35:04 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/Cache_Map_Manager_T.cpp (find): Remove extraneous () from
          'second' - leftover from ACE_Pair days.

        * tests/Cache_Map_Manager_Test.cpp: Add call to the above method.

        * THANKS: Thanks to Milind Pangarkar for the above test, and fix.

Thu May 24 07:58:53 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/High_Res_Timer.h:
        * ace/config-win32-msvc.h:
          Documentation updates

        * ace/High_Res_Timer.inl:
          Layout changes

        * ace/High_Res_Timer.cpp:
          Use this

Thu May 24 05:56:27 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/MPC.cfg:
          Added XSC_ROOT

        * bin/valgrind.supp:
          Simplified this file

Mon May 21 18:05:32 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/INTEGRITY.ld:
          Removed this file.

Mon May 21 07:15:10 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * docs/Download.html:
        * docs/bczar/bczar.html:
        * etc/index.html:
          Updated for new release

Sat May 19 14:28:57 CEST 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.1.2 released.

Thu May 17 16:16:09 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * ACE-INSTALL.html:

          Replaced the make flag static_libs with static_libs_only.
          Using static_libs implies that both static and shared can
          be built at the same time, which is not true in general.

Thu May 17 15:42:36 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.h: Clarified the timeout conditions on
          run_reactor_event_loop(). Thank you to Mohsin Zaidi for this
          clarification.

        * THANKS: Added Mohsin Zaidi to the Hall of Fame.

Wed May 16 17:41:21 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_Thread.cpp (ACE_Thread_ID::to_string): Use string literals
          for the sprintf formats rather than build them up. Things have
          simplified to the point we don't need that any longer. Thanks to
          Rick Ohnemus for providing the patch. Fixes Bugzilla #4021.

Wed May 16 06:44:23 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
        * tests/tests.mpc:
        * tests/Bug_4008_Regression_Test.cpp:
          Removed bug 4008 test, it was testing incorrect assumptions

Wed May 16 06:42:45 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Basic_Types.h:
        * ace/Basic_Types.cpp:
        * ace/Functor.inl:
        * ace/High_Res_Timer.inl:
        * ace/OS_NS_time.h:
        * ace/OS_NS_time.inl:
        * tests/Basic_Types_Test.cpp:
        * tests/Bug_2434_Regression_Test.cpp:
        * tests/Time_Value_Test.cpp:
          More cleanup due to removal of NSK

        * ace/Basic_Types.inl:
          Removed this file.

Tue May 15 18:16:09 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ACE.inl:
        * ace/Atomic_Op_T.h:
        * ace/Basic_Types.h:
        * ace/Basic_Types.inl:
        * ace/Basic_Types.cpp:
        * ace/CDR_Base.h:
        * ace/Functor.h:
        * ace/Functor.inl:
        * ace/Handle_Set.cpp:
        * ace/High_Res_Timer.cpp:
        * ace/Log_Msg.cpp:
        * ace/Numeric_Limits.h:
        * ace/OS_NS_Thread.inl:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_stdlib.inl:
        * ace/OS_NS_sys_select.inl:
        * ace/OS_NS_sys_wait.inl:
        * ace/OS_NS_time.h:
        * ace/OS_NS_time.inl:
        * ace/OS_NS_unistd.inl:
        * ace/Profile_Timer.cpp:
        * ace/Sched_Params.cpp:
        * ace/Stats.cpp:
        * ace/Task.cpp:
        * ace/Throughput_Stats.cpp:
        * ace/Time_Value.h:
        * ace/Time_Value.inl:
        * ace/Truncate.h:
        * ace/UUID.cpp:
        * ace/os_include/os_pthread.h:
        * performance-tests/Server_Concurrency/Latency_Stats.h:
        * performance-tests/Server_Concurrency/Leader_Follower/leader_follower.cpp:
        * performance-tests/Server_Concurrency/Queue_Based_Workers/workers.cpp:
        * performance-tests/UDP/udp_test.cpp:
        * tests/Atomic_Op_Test.cpp:
        * tests/Basic_Types_Test.cpp:
        * tests/CDR_Array_Test.cpp:
          Removed support for Tandem NSK. That was the last platform that
          needed the emulated versions of ACE_INT64 and ACE_UINT64, that
          emulation has now been removed

        * ace/config-tandem-nsk-mips-v2.h:
        * ace/config-tandem-nsk-mips-v3.h:
          Removed these files.

Mon May 14 18:48:14 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Server_Concurrency/Latency_Stats.h:
          Fixed conversion warnings

Sun May 13 17:13:31 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Sample_History.h:
        * ace/Sample_History.inl:
        * ace/Sample_History.cpp:
          Introduced scale_factor_type traits to handle the fact that the
          ACE HighResTimer scale factor is now ACE_UINT64

Sun May 13 12:27:03 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/High_Res_Timer.h:
          Fixed typo

        * ace/Basic_Stats.h:
        * ace/Basic_Stats.cpp:
        * ace/Throughput_Stats.h:
        * ace/Throughput_Stats.cpp:
          Introduced scale_factor_type traits to handle the fact that the
          ACE HighResTimer scale factor is now ACE_UINT64

        * ace/Timeprobe_T.cpp:
          Use correct trait for the scale factor

        * performance-tests/RPC/client.cpp:
        * performance-tests/SCTP/SOCK_SEQPACK_clt.cpp:
        * performance-tests/SCTP/SOCK_STREAM_clt.cpp:
        * performance-tests/Server_Concurrency/Latency_Stats.h:
        * performance-tests/TCP/tcp_test.cpp:
          Use ACE_High_Res_Timer::global_scale_factor_type

Sat May 12 11:11:45 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.h:
        * ace/Time_Value.cpp:
          None of the windows compilers define ACE_LACKS_LONGLONG_T

        * ace/High_Res_Timer.h:
        * ace/High_Res_Timer.inl:
        * ace/High_Res_Timer.cpp:
          Integrated patches from bugzilla 3703 increasing the precision
          of the high resolution timers on windows

Sat May 12 11:03:57 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ASNMP/asnmp/transaction.cpp:
        * Kokyu/Dispatch_Deferrer.cpp:
          Compare return value of schedule_timer with -1

        * ace/OS_NS_time.h:
          None of the windows compilers define ACE_LACKS_LONGLONG_T

        * bin/PerlACE/TestTarget_WinCE.pm:
          Typo fix

Sat May 12 11:01:50 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-common.h:
          None of the windows compilers define ACE_LACKS_LONGLONG_T

Sat May 12 10:54:24 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Numeric_Limits.h:
          Fixed typo

Fri May 11 17:42:08 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/Dev_Poll_Reactor.cpp (mask_ops_i): Return -1 if epoll_ctl
          fails and we don't recover from it. Fixes Bugzilla #4019. Thanks
          to David Simmonds for this fix.

Fri May  4 17:25:53 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Acceptor.cpp:
          Fixed incorrect check of the return value of schedule_timer,
          an error is indicated with -1, not 0. Thanks to Deux deVille
          <dev2 at weitling dot net> for reporting this

Thu May  3 07:15:54 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3673_Regression_Test.cpp:
          Fixed typo

Wed May  2 18:36:25 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_math.h:
          Fixed compile warning with WinCE

Wed May  2 17:08:28 UTC 2012  Jeff Parsons <j.parsons@vanderbilt.edu>

        * THANKS:

          Added Markus Manck <Markus dot Manck at Philotech dot de>

Tue May  1 17:38:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_mpc_auto_compile.pl:
          Added -project_root to override $ACE_ROOT as root to search for
          solutions. This is needed when using this script in a flat directory
          layout

Tue May  1 12:52:45 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_time.cpp:
        * ace/config-win32-msvc-10.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-msvc-9.h:
          WinCE also has non conformant timeval. When _USE_32BIT_TIME_T is not
          defined we have to use our workaround in all cases

Tue May  1 11:42:22 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_stat.h:
          Fixed compile error

Tue May  1 10:25:37 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_stat.h:
          Compile fix for WinCE 7

Tue May  1 07:48:30 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Mem_Map.cpp:
          Layout changes

        * ace/config-win32-msvc-9.h:
          Removed wince comment

Sun Apr 29 19:17:29 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_mpc_auto_compile.pl:
          More improvements to this script

Sun Apr 29 19:01:08 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_mpc_auto_compile.pl:
          Support flat layout

Fri Apr 27 18:43:31 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_mpc_auto_compile.pl:
          Corrected output messages

Fri Apr 27 18:40:51 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_time.h:
        * ace/config-win32-msvc-9.h:
          First fixes for WinCE 7

Wed Apr 25 07:02:16 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Get_Opt.cpp:
          Reverted Wed Apr 18 08:51:31 UTC 2012  Martin Corino  <mcorino@remedy.nl>

Tue Apr 24 01:18:27 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/String_Base.h (template): Zapped the 'explicit' keywords
          introduced by the change in

          Tue Apr 17 19:09:30 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

          since it was breaking too much code.

Wed Apr 18 08:51:31 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/String_Base.h:
          Reverted 'explicit' declaration for single arg constructor for
          const ACE_TCHAR* as implicit conversion of this arg type to
          ACE string class is the expected behaviour (similar to the
          STL std::string).

        * ace/Get_Opt.cpp:
          Introduced explicit ACE_CString constructor call for single
          arg ACE_TCHAR (not pointer) constructor.

Wed Apr 18 06:31:56 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Future.cpp:
          Fixed commented out guard. Thanks to Andreas Dröscher
          <ace at anticat dot ch> for reporting this.

Tue Apr 17 19:09:30 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/String_Base.h: Made the single parameter constructors
          explicit to avoid problems with implict conversions.  Thanks to
          Adam Rymarczuk <adam dot rymarczuk at suntradingllc dot com> for
          reporting this.

Thu Apr 12 11:25:25 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          Added support for c++0x

Tue Apr 10 20:09:23 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Dev_Poll_Reactor.cpp (ACE_Dev_Poll_Reactor::resumable_handler):
          Changed this method to return 1 instead of 0.  Thanks to David
          Simmonds <david dot simmonds at iggroup dot com> for providing
          this fix.  This fixes bugid 4015.

          Added David to the ACE hall of fame.

Tue Apr 10 20:10:06 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Install the Inline_Files even with inline=0.  Many of these files
          are still needed, especially *_T.inl.  This resolves bug #4002.

Mon Apr  9 21:57:39 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Queue_T.cpp (calculate_timeout): Lock the mutex before
          accessing timer queue elements to calculate the timeout. Thanks to
          Kannan Ramaswamy for this fix.

Sun Apr  8 14:25:23 UTC 2012  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/ace.mpc:

          Move ace_wchar.inl to the header section so that it is always
          installed even when the library is built with inline=0. This is
          required because ace_wchar is always inlined.

Fri Apr  6 11:58:40 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Added another rpm

Fri Apr  6 10:48:03 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * docs/Download.html:
        * docs/bczar/bczar.html:
        * etc/index.html:
          Updated for next release

Fri Apr 06 09:03:19 CEST 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.1.1 released.

Tue Apr  3 22:49:11 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe_ifs): Set the error code when
          a Windows API call fails. Also, when calling GetAdaptersAddresses()
          to both check size and get the info, supply GAA_FLAG_SKIP_MULTICAST
          as the flag value. This avoids obtaining info for joined multicast
          addresses, not multicastable interfaces. Without the flag, and if
          some other process does a join between the size-check call and the
          info-gathering call, the size will be wrong.

Tue Apr  3 17:01:33 UTC 2012  Jeff Parsons <j.parsons@vanderbilt.edu>

        * THANKS:

          Added Thomas Stegemann <Thomas dot Stegemann at materna dot de>.

Tue Apr  3 16:18:35 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/ACE.cpp (ACE::timestamp): Fixed an "off-by-one" error that
          caused corruption of timestamps when using
          ACE_LOG_TIMESTAMP="TIME" env var.  Thanks to Andrea Sormanni
          <andrea dot sormanni at gmail dot com> for reporting this and
          providing a fix.

          Added Andrea to the Hall of Fame!

Fri Mar 30 14:33:58 UTC 2012  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv1/Process_Per_Connection_Logging_Server.cpp: Changed
          use of ::sscanf_s() to only those platforms with the setting
          ACE_HAS_TR24731_2005_CRT (VC8 and up).

Fri Mar 30 13:39:25 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * include/makeinclude/platform_win32_msvc.GNU:

          Added iphlpapi to the list of system libraries.

Thu Mar 29 21:50:17 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Postbuild steps need a dependency on the executable or library
          so that parallel make will run them at the right time.

Wed Mar 28 22:03:45 UTC 2012  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv1/Process_Per_Connection_Logging_Server.cpp: Changed
          the +H handle value scan to know this is a hex value on Windows, but
          a decimal value on everything else. Thanks to Andy Gokhale for this.

Wed Mar 28 21:44:20 UTC 2012  Steve Huston  <shuston@riverace.com>

        * tests/Multicast_Test.cpp: Removed the forced set_nic to "lo" for
          Linux. It's not needed with the changes from:
          Wed Mar 21 21:57:40 UTC 2012  Steve Huston  <shuston@riverace.com>

Mon Mar 26 11:27:11 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_mingw32.GNU:
          Added iphlpapi

Sat Mar 24 21:53:13  UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe_ifs): For Windows, handle IPv6
          and IPv4 differently. The make_multicast_ifaddr() call that will end
          up being made for IPv4 wants the interface's IP address, not name.

        * bin/MakeProjectCreator/config/acedefaults.mpb:
        * bin/MakeProjectCreator/config/ipv6.mpb: Moved the lit_lib for iphlpapi
          on Windows from the IPv6 base to acedefaults. SOCK_Dgram_Mcast.cpp
          uses it for both IPv4 and IPv6 now.

Fri Mar 23 22:06:11 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/WIN32_Asynch_IO.cpp: Fixed possible heap corruption in
          ACE_SOCK_Dgram_Read_Dgram::recv(). Thank you to
          Dmytro Ovdiienko <dmitriy.ovdienko@gmail.com> for unconvering this.

        * THANKS: Added Dmytro to the Hall of Fame.

Thu Mar 22 16:23:14 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/SOCK_Dgram_Mcast.h: Corrected the description of conditions
          under which using OPT_NULLIFACE_ALL works and neatened things up.

        * tests/Multicast_Test.cpp: Turn on IP_MULTICAST_LOOP all the time.
          This test requires it and it's not universally the default.

Thu Mar 22 13:03:46 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ARGV.cpp:
        * ace/Acceptor.cpp:
        * ace/Asynch_Acceptor.cpp:
        * ace/Cached_Connect_Strategy_T.cpp:
        * ace/Lib_Find.cpp:
        * ace/Strategies_T.cpp:
        * ace/Timer_Heap_T.cpp:
          Fixed coverity errors

Wed Mar 21 21:57:40 UTC 2012  Steve Huston  <shuston@riverace.com>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe_ifs): Expanded the use of
          code to scan interfaces to be always, not just for IPv6, when
          subscribing with OPT_NULLIFACE_ALL and no specific interface.
          Also replaced use of ACE_OS::if_nameindex with getifaddr() when
          it's available (which was only on Linux anyway) so checks
          for interface up and multicastable can be made before joining.
          The code now works for systems with ACE_HAS_GETIFDADDR (incl.
          Linux, which was my main issue driving this) and Win32. The others
          end up in the old get_ip_interfaces code which will never work
          anywhere as far as I can tell because it tries to subscribe to an
          interface named with the IP address in string form.

        * tests/Multicast_Test.cpp: Removed hack force of interface "lo0"
          on join(). No need for that with the fix above. For background, this
          was added at:
          Thu Jan 21 15:25:30 UTC 2010  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp (get_ip_interfaces_getifaddr): Will no longer
          return an interface marked 'down'. Partially fixes Bugzilla #1990
          but other platform-specific changes are needed to resolve it
          completely.

Sat Mar 17 12:16:15 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Added link to the mailing lists with an advice for people to subscribe

Sat Mar 17 12:11:15 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/cleanbuilds.sh:
        * bin/diff-builds.pl:
          Updated teststat links

Wed Mar 14 10:04:06 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Added link to ORBZone as community site for CORBA/CCM

        * tests/run_test.lst:
          Mark 4008 as not fixed

Tue Mar 13 11:24:33 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Service_Gestalt.cpp:
          Reverted change below, breaks Missing_Svc_Conf_Test test

Tue Mar 13 09:36:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Service_Gestalt.cpp:
          Fixed bugzilla 4008, thanks to Derek Dominish
          <derek dot dominish at dsto dot defence dot gov dot au> for
          creating the fix

Tue Mar 13 09:29:56 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_4008_Regression_Test.cpp:
        * tests/run_test.lst:
        * tests/tests.mpc:
          New test for bugzilla 4008. Thanks to Derek Dominish
          <derek dot dominish at dsto dot defence dot gov dot au> for
          creating this test

Mon Mar 12 20:22:17 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * include/makeinclude/rules.local.GNU:

          Revert this part of Friday's change, with a comment added
          to describe why this use of 'pwd' is different.

Fri Mar  9 20:38:22 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * include/makeinclude/rules.lib.GNU:

          When creating an archive library, use all object files instead of
          just modified object files.  This fixes a bug that can occur when
          two different subdirectories have objects files with the same name.
          The archive dosn't track directory names so "replacing" one changed
          object could actually be clobbering another one.

        * include/makeinclude/rules.local.GNU:

          Use the $(PWD) make variable for current directory.

Wed Mar  7 14:58:07 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Added new download link for latest minor with versioned namespaces

Wed Mar  7 14:37:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rpmbuild/ace-tao.spec:
          Fix for ppc64

Wed Mar  7 13:31:58 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Base_Thread_Adapter.h:
        * ace/Base_Thread_Adapter.cpp:
        * ace/ETCL/ETCL_Constraint.inl:
        * ace/Module.cpp:
        * ace/Stream.cpp:
        * ace/Thread_Manager.h:
        * ace/Timer_Hash_T.cpp:
          Fixed coverity errors

Wed Mar  7 10:55:28 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rpmbuild/ace-tao.spec:
          Added new libraries

Wed Mar  7 10:02:49 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * docs/Download.html:
        * docs/bczar/bczar.html:
        * etc/index.html:
          Updated for release

Wed Mar 07 09:04:40 CET 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.1.0 released.

Sat Mar  3 20:48:15 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Thread_Manager.cpp:
          Coverity fix

Sat Mar  3 20:45:30 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Event_Handler_Handle_Timeout_Upcall.cpp:
          Coverity fix

Sat Mar  3 20:22:09 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/rle/RLECompressor.h:
          Fixed export macro

Fri Mar  2 12:41:21 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/rle/RLECompressor.h:
          Fixed export macro

Wed Feb 29 16:30:00 UTC 2012  Simon Massey <simon dot massey at prismtech dot com>

        * ace/CDR_Stream.cpp:
          Allow strings to be indirected (required for ValueType RepoIDs).

Wed Feb 29 07:25:21 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Handle_Set.cpp:
        * ace/Select_Reactor_Base.cpp:
        * ace/Service_Types.cpp:
          Fixed coverity errors

Tue Feb 28 14:35:36 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Process.cpp:
          Fixed coverity error

Tue Feb 28 03:27:28 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        *
          apps/JAWS3/jaws3/Reactive_IO.cpp (JAWS_IO_Reactive_Transmit::handle_output_source):
          Check mb == 0 before using it.  Thanks to Andrey Karpov <karpov
          at viva64 dot com> for reporting this.

Tue Feb 28 03:18:56 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Throughput_Stats.cpp (ACE_Throughput_Stats::sample): Zapped
          a redundant else statement.  Thanks to Andrey Karpov <karpov at
          viva64 dot com> for reporting this.

Tue Feb 28 03:15:37 UTC 2012  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * protocols/ace/INet/URLBase.cpp (ACE): Changed

          if (pos > 0 && url_string[pos+1] == '/' && url_string[pos+1] == '/')

          to

          if (pos > 0 && url_string[pos+1] == '/' && url_string[pos+2] == '/')

          Thanks to Andrey Karpov <karpov at viva64 dot com> for reporting
          this.

Mon Feb 27 08:11:06 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/rle/RLECompressor.h:
          Doxygen fix

        * ace/Compression/rle/RLECompressor.cpp:
          Fixed gcc warning

Fri Feb 24 09:19:40 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/Compressor.h:
          Fixed compile warning

Fri Feb 24 09:14:22 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/Compressor.h:
        * ace/Compression/Compressor.cpp:
        * ace/Compression/rle/RLECompressor.h:
        * ace/Compression/rle/RLECompressor.cpp:
          Added virtual destructors

Fri Feb 24 08:45:08 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/ACE_Compression.mpc:
        * ace/Compression/rle/ACE_RLECompression.mpc:
          Fixed id and install problems

        * bin/fuzz.pl:
          Extended check for incorrect id tags

Thu Feb 23 08:20:56 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression/Compressor.h:
        * ace/Compression/rle/RLECompressor.h:
        * bin/MakeProjectCreator/config/ace_compressionlib.mpb:
        * bin/MakeProjectCreator/config/ace_rlecompressionlib.mpb:
          Fuzz fixes

Thu Feb 23 07:52:58 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Compression:
        * ace/Compression/ACE_Compression.mpc:
        * ace/Compression/ACE_Compression_export.h:
        * ace/Compression/Compressor.h:
        * ace/Compression/Compressor.inl:
        * ace/Compression/Compressor.cpp:
        * ace/Compression/rle:
        * ace/Compression/rle/ACE_RLECompression.mpc:
        * ace/Compression/rle/ACE_RLECompression_export.h:
        * ace/Compression/rle/RLECompressor.h:
        * ace/Compression/rle/RLECompressor.cpp:
        * bin/MakeProjectCreator/config/ace_compressionlib.mpb:
        * bin/MakeProjectCreator/config/ace_rlecompressionlib.mpb:
          Added new ACE compression and rle compressor libraries. This code
          was first part of TAO, but now moved to ACE because it provides
          a basic run length encoding compressor that makes it possible to
          compress data without depending on any external library

        * docs/bczar/bczar.html:
          Added package

Tue Feb 21 14:52:02 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * ace/OS_NS_Thread.inl:
        * ace/config-vxworks6.9.h:

          Fixed errors from fuzz script.

Tue Feb 21 14:37:47 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * PROBLEM-REPORT-FORM:
          Removed build method question

Fri Feb 17 23:10:37 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * NEWS:
        * ace/Message_Queue_T.cpp:
        * ace/Message_Queue_Vx.cpp:
        * ace/OS_NS_Thread.inl:
        * ace/OS_NS_arpa_inet.cpp:
        * ace/OS_NS_unistd.inl:
        * ace/Stack_Trace.cpp:
        * ace/config-vxworks.h:
        * ace/config-vxworks6.9.h:
        * ace/os_include/sys/os_types.h:
        * include/makeinclude/platform_vxworks.GNU:
        * include/makeinclude/platform_vxworks6.9.GNU:
        * tests/Bug_3943_Regression_Test.cpp:

          Added support for VxWorks version 6.9.

Tue Feb 14 22:57:00 UTC 2012  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ace/ACE.cpp:
        * ace/Dev_Poll_Reactor.cpp:
        * ace/Handle_Set.cpp:
        * ace/High_Res_Timer.h:
        * ace/High_Res_Timer.cpp:
        * ace/INET_Addr.h:
        * ace/INET_Addr.cpp:
        * ace/Monitor_Control/Bytes_Received_Monitor.h:
        * ace/Monitor_Control/Bytes_Received_Monitor.cpp:
        * ace/Monitor_Control/Bytes_Sent_Monitor.h:
        * ace/Monitor_Control/Bytes_Sent_Monitor.cpp:
        * ace/Monitor_Control/CPU_Load_Monitor.h:
        * ace/Monitor_Control/CPU_Load_Monitor.cpp:
        * ace/Monitor_Control/Linux_Network_Interface_Monitor.h:
        * ace/Monitor_Control/Linux_Network_Interface_Monitor.cpp:
        * ace/Monitor_Control/Num_Threads_Monitor.h:
        * ace/Monitor_Control/Num_Threads_Monitor.cpp:
        * ace/Monitor_Control/Packets_Received_Monitor.h:
        * ace/Monitor_Control/Packets_Received_Monitor.cpp:
        * ace/Monitor_Control/Packets_Sent_Monitor.h:
        * ace/Monitor_Control/Packets_Sent_Monitor.cpp:
        * ace/OS_NS_netdb.cpp:
        * ace/OS_NS_sys_socket.h:
        * ace/OS_NS_sys_socket.inl:
        * ace/OS_NS_time.inl:
        * ace/OS_NS_unistd.inl:
        * ace/SOCK_Dgram.cpp:
        * ace/SOCK_Dgram_Mcast.cpp:
        * ace/Select_Reactor_T.cpp:
        * ace/config-linux.h:
        * ace/os_include/os_pthread.h:
        * apps/JAWS/clients/WebSTONE/src/nsapi-includes/base/systems.h:
        * examples/APG/Signals/SigInfo.cpp:
        * tests/INET_Addr_Test_IPV6.cpp:
        * tests/MT_Reference_Counted_Event_Handler_Test.cpp:
        * tests/Malloc_Test.cpp:
        * tests/Multicast_Test.cpp:
        * tests/Naming_Test.cpp:
        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp:
        * tests/Proactor_UDP_Test.cpp:
        * tests/Process_Test.cpp:
        * tests/SSL/Bug_2912_Regression_Test.cpp:

          Created a new macro, ACE_LINUX, which replaces all non-standard
          tests for linux, __linux, and __linux__.

Mon Feb 13 16:38:15 UTC 2012  Adam Mitz  <mitza@ociweb.com>

        * include/makeinclude/platform_gnuwin32_common.GNU:

          Set DCCFLAGS and OCCFLAGS to get debug=X and optimize=X to work.

Tue Feb  7 12:56:41 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/XtReactor/XtReactor.cpp:
          Use C++ cast to silence warning

Tue Jan 31 20:19:16 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Web_Crawler/Iterators.cpp:
        * performance-tests/Misc/context_switch_time.cpp:
          Fixed gcc 4.7 warning

Tue Jan 31 20:17:35 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/IPC_SAP/SOCK_SAP/CPP-memclient.cpp:
          Fixed gcc 4.7 warning

Mon Jan 30 09:48:00 UTC 2012  Simon Massey  <simon dot massey at prismtech dot com>

        * ace/Default_Constants.h:
          Redefined ACE_MAX_UDP_PACKET_SIZE to 65507 bytes. The actual field size
          sets a theoretical limit of 65,535 bytes (so 65536 was completly wrong)
          which is composed of 8 byte header +65,527 bytes of data for a UDP datagram.
          However the practical limit for the data length which is imposed by the
          underlying IPv4 protocol is only 65,507 bytes (65507 bytes of data +8 bytes
          UDP header +20 bytes IP header).

Fri Jan 27 09:39:57 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FlReactor/FlReactor.cpp:
          Const change

        * bin/valgrind.supp:
          Added another suppress

Fri Jan 27 09:01:51 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * bin/make_release.py:
        * docs/Download.html:
        * docs/bczar/bczar.html:
        * etc/index.html:
          Updated for next release

Fri Jan 27 08:58:54 CET 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.0.8 released.

Thu Jan 26 20:38:47 UTC 2012  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Condition_T.cpp:

          In order to allow building with inlining on MacOSX Lion,
          Condition_T.cpp needs to explicitly include Time_Value.h. In many
          cases, Time_Value.h was being incidentally included, such as
          through Atomic_Op_GCC_T.cpp, but that is specifically excluded for
          Lion builds using the clang compiler.

Tue Jan 24 16:44:22 UTC 2012  Chip Jones  <jonesc@ociweb.com>

        * NEWS:
          Added information about IDL dependency generation.

Tue Jan 24 15:26:24 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/conv_lib.mpb:
          Fixed cleanup bug

Tue Jan 24 14:40:00 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Can't check mpc files, when they contain gnuace specific stuff they
          need tabs

Tue Jan 24 14:29:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Fixed problem

Tue Jan 24 13:52:20 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Also check mpc files for tabs

Tue Jan 24 13:48:49 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/HTTPU/httpu.mpc:
        * apps/JAWS2/JAWS/jaws2.mpc:
        * apps/JAWS3/jaws3/jaws3.mpc:
        * apps/gperf/tests/gperf_test.mpb:
        * bin/MakeProjectCreator/config/ace_bzip2.mpb:
        * bin/MakeProjectCreator/config/ace_fl.mpb:
        * bin/MakeProjectCreator/config/ace_fox.mpb:
        * bin/MakeProjectCreator/config/ace_openssl.mpb:
        * bin/MakeProjectCreator/config/ace_output.mpb:
        * bin/MakeProjectCreator/config/ace_qt.mpb:
        * bin/MakeProjectCreator/config/ace_tk.mpb:
        * bin/MakeProjectCreator/config/ace_x11.mpb:
        * bin/MakeProjectCreator/config/ace_xt.mpb:
        * bin/MakeProjectCreator/config/ace_zlib.mpb:
        * bin/MakeProjectCreator/config/ace_zzip.mpb:
        * bin/MakeProjectCreator/config/acedefaults.mpb:
        * bin/MakeProjectCreator/config/conv_lib.mpb:
        * bin/MakeProjectCreator/config/wxwindows.mpb:
        * netsvcs/servers/servers.mpc:
        * performance-tests/Synch-Benchmarks/Base_Test/Synch_Benchmarks_Base_Test.mpc:
        * performance-tests/Synch-Benchmarks/Perf_Test/Synch_Benchmarks_Perf_Test.mpc:
        * tests/tests.mpc:
          Removed left over from automake removal

Tue Jan 24 13:31:49 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/WFMO_Reactor/Network_Events.cpp:
          Fixed gcc warning

Mon Jan 23 20:21:50 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/gnu.mpd:
          Fixed support for idl3toxmi and idl3toidl2 flags

Mon Jan 23 12:02:07 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/gnu.mpd:
          Added support for idl3toxmi and idl3toidl2 flags

Sun Jan 22 19:41:27 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/WFMO_Reactor/APC.cpp:
        * examples/Reactor/WFMO_Reactor/Abandoned.cpp:
        * examples/Reactor/WFMO_Reactor/Directory_Changes.cpp:
        * examples/Reactor/WFMO_Reactor/Handle_Close.cpp:
        * examples/Reactor/WFMO_Reactor/Network_Events.cpp:
        * examples/Reactor/WFMO_Reactor/Prerun_State_Changes.cpp:
        * examples/Reactor/WFMO_Reactor/Registration.cpp:
        * examples/Reactor/WFMO_Reactor/Registry_Changes.cpp:
        * examples/Reactor/WFMO_Reactor/Suspended_Removals.cpp:
        * examples/Reactor/WFMO_Reactor/Talker.cpp:
        * examples/Reactor/WFMO_Reactor/Window_Messages.cpp:
          Fixed GCC 4.6.2 release warnings

Sun Jan 22 12:35:11 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release.py:
          Use the new MPC -workers option to speedup the release process

Fri Jan 20 19:30:51 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Processes/Process_Mutex.cpp:
          Use ACE_TEST_ASSERT instead of ACE_ASSERT to fix warnings in gcc 4.6
          release builds

Fri Jan 20 19:06:02 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Containers/Allocator.cpp:
        * examples/Reactor/Misc/test_timer_queue.cpp:
          Use ACE_TEST_ASSERT instead of ACE_ASSERT to fix warnings in gcc 4.6
          release builds

Wed Jan 18 09:02:18 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * bin/fuzz.pl:
          Added suppress option to selectively disable checks.

Tue Jan 17 17:36:31 UTC 2012  Chip Jones  <jonesc@ociweb.com>

        * include/makeinclude/rules.local.GNU:
          Fixed 'no filename for -include' warning.

Mon Jan 16 21:58:44 UTC 2012  Chip Jones  <jonesc@ociweb.com>

        * bin/DependencyGenerator/GNUIDLDependencyWriter.pm:
        * bin/DependencyGenerator/GNUIDLObjectGenerator.pm:
        * bin/MakeProjectCreator/config/ace_idl_dependencies.mpb:

          Added these files to support generation of IDL dependencies
          for gnuace projects.

        * bin/MakeProjectCreator/config/acedefaults.mpb:
        * bin/MakeProjectCreator/config/global.features:

          Added IDL dependency as a feature defaulted to off.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Modified gnuace template to generate IDL dependency rules.

        * include/makeinclude/rules.common.GNU:
        * include/makeinclude/rules.local.GNU:
        * include/makeinclude/wrapper_macros.GNU:

          Added depend_idl.local rule.

          This is a merge of work done in the 'ace-mpc_performance'
          branch.

Mon Jan 16 10:33:37 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-win32-common.h:
        * ace/config-win32-mingw.h:
          Moved MinGW specific block to common because the macros
          it concerns are tested there already.

Mon Jan 16 09:01:20 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-win32-mingw.h:
          Fixed incorrectly placed macro test.

Sun Jan 15 19:15:48 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-win32-mingw.h:
          Add some customizations and corrections to support using
          --std=c++0x with MinGW32.

Fri Jan 13 23:25:59 UTC 2012  Jeff Parsons <j.parsons@vanderbilt.edu>

        * THANKS:

          Added Michael Frommberger <michael dot frommberger at gmx dot net>

Wed Jan 11 20:43:47 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-freebsd.h:
        * ace/config-win32-common.h:
        * ace/config-win32-mingw.h:
        * ace/os_include/os_signal.h:
          Added ACE_LACKS_SIGSET_T to be able to distinguish between the
          type and the functions being provided or not.

Wed Jan 11 18:43:50 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-win32-mingw.h:
          Fixed typo.

Wed Jan 11 15:41:00 UTC 2012  Simon Massey  <simon dot massey at prismtech dot com>

        * ace/config-sunos5.10.h:
        Is supposed to define ACE_SIZE_T_FORMAT_SPECIFIER_ASCII and ACE_SSIZE_T_FORMAT_SPECIFIER_ASCII
        correctly for this platform. The old logic was "If already defined - redefine, but if not
        defined don't define" and wrong. The point of providing the definition of these SIZE_T format
        specifiers is to provide them if they are not set.

Wed Jan 11 14:36:43 UTC 2012  Martin Corino  <mcorino@remedy.nl>

        * ace/config-win32-mingw.h:
        * ace/os_include/os_signal.h:
          Changes to support MinGW64 compiler.

Mon Jan  9 11:07:54 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Netlink_Addr.h:
        * ace/Notification_Queue.h:
          Doxygen fixes

        * tests/run_test.lst:
          Removed several old config labels

Fri Jan  6 11:16:03 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * html/Stats/configuration.shtml:
        * html/Stats/index.shtml:
        * html/Stats/simple_footprint.shtml:
          Extended data to be shown and updated links

Fri Jan  6 10:28:35 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Stream.cpp:
          Fixed coverity errors

Wed Jan  4 13:02:12 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_compile_stats.sh:
          Added link for DAnCE

Wed Jan  4 11:45:43 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * html/Stats/index.shtml:
          Fixed link

Wed Jan  4 11:42:13 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_compile_stats.sh:
          Work with flat layout and added DAnCE

Wed Jan  4 11:06:50 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_compile_stats.sh:
          Updated title to include DAnCE

Wed Jan  4 08:50:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/cleanbuilds.sh:
        * bin/mail_test_stats.sh:
          Accept date and email as arguments

Tue Jan  3 18:47:23 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/performance_stats.sh:
        * bin/topinfo_iorsize_stats.sh:
        * bin/topinfo_simple_stats.sh:
        * bin/topinfo_stats.sh:
          Assume ACE_ROOT is set before running the script, simplified the usage

Tue Jan  3 18:34:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/valgrind.supp:
          Added default suppress file that can be used for valgrind when using
          valgrind for ACE/TAO/CIAO/DAnCE

        * docs/bczar/bczar.html:
          Added package

Tue Jan  3 13:51:18 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/performance_stats.sh:
          Create source directory

Tue Jan  3 12:52:04 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/performance_stats.sh:
        * bin/topinfo_iorsize_stats.sh:
        * bin/topinfo_simple_stats.sh:
        * bin/topinfo_stats.sh:
        * bin/footprint_stats.sh:
          Converting them to support a flat layout

Tue Jan  3 12:40:43 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * html/Stats/detailed_footprint.shtml:
        * html/Stats/detailed_performance.shtml:
        * html/Stats/footer.html:
        * html/Stats/index.shtml:
        * html/Stats/navigation.html:
          Updated links, docu, status

        * html/Stats/compilation.shtml:
          Removed this file.

Sat Dec 31 22:12:53 UTC 2011  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Timer_Wheel_T.cpp: Changed the call to "delete root" in the
          destructor to "this->free_node (root)" so the ACE_Timer_Wheel_T
          will work properly when provided a custom allocator.  Thanks to
          Koh <k_onishi at mtj dot biglobe dot ne dot jp> for reporting
          this bug and providing a fix.

Fri Dec 30 10:13:59 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux.h:
          Added support for ulibc, thanks to Chong Wuk Pak
          <chong dot pak at lmco dot com> for providing the patch. This fixes
          bugzilla 3999

Thu Dec 29 17:29:06 UTC 2011  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Mem_Map.cpp (ACE_Mem_Map::map_it): Fixed a missing '('.  Thanks to Johnny for reporting this.

Thu Dec 29 15:14:45 UTC 2011  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Mem_Map.cpp (ACE_Mem_Map::map_it): Further improved the
          error checking.  Thanks to JaeSung Lee <berise at gmail dot
          com> for suggesting this.

Tue Dec 27 15:19:56 UTC 2011  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Mem_Map.cpp (ACE_Mem_Map::map_it): mmap through character
          device doesn't care about it's size, so map with /dev/* is done
          with a special case.  Thanks to JaeSung Lee <berise at gmail dot
          com> for reporting this and providing a fix.

Tue Dec 27 11:39:53 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * docs/Download.html:
        * docs/bczar/bczar.html:
        * etc/index.html:
          Updated for next release

Tue Dec 27 10:06:28 CET 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 6.0.7 released.

Wed Dec 21 11:25:49 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * tests/Task_Wait_Test.cpp:
          Fixed compile issue on Solaris 10.

Wed Dec 21 09:41:54 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * examples/Timer_Queue/Reactor_Timer_Queue_Test.cpp:

          Added timer queue reset on global reactor instance.

Tue Dec 20 15:43:39 UTC 2011  Steve Huston  <shuston@riverace.com>

        * tests/Task_Wait_Test.cpp:
        * tests/tests.mpc:
        * tests/run_test.lst:
          New test program that tests the ACE_Thread_Manager::wait() from a
          called-back ACE_Task::close() on thread exit.

Tue Dec 20 15:36:24 UTC 2011  Steve Huston  <shuston@riverace.com>

        * ace/Thread.inl (disablecancel): Correct size pased to memset.
        * ace/Thread_Manager.cpp (ACE_Thread_Descriptor::terminate): Don't
          dereference potentially invalid pointer.

          Resolves Coverity warnings.

Mon Dec 19 19:00:07 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/bczar/bczar.html:
          Added another package

Mon Dec 19 13:28:16 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * ace/Abstract_Timer_Queue.h:
        * ace/Timer_Hash_T.h:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Heap_T.h:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_List_T.h:
        * ace/Timer_List_T.cpp:
        * ace/Timer_Queue_Adapters.inl:
        * ace/Timer_Queue_Adapters.cpp:
        * ace/Timer_Wheel_T.h:
        * ace/Timer_Wheel_T.cpp:

          Added close() method.

        * ace/Dev_Poll_Reactor.cpp:
        * ace/Proactor.cpp:
        * ace/Select_Reactor_T.cpp:
        * ace/WFMO_Reactor.cpp:

          Implemented support for timer queue close ().

        The rationale for these changes is that when using reactors with
        user defined timer queues the reactor does not delete the timer queue
        when being deleted itself. Without any other cleanup this created the
        possibility (as encountered in TAO/tests/Bug_3837_Regression after
        introduction of the TIME_POLICY changes) of outstanding timer handlers
        in the queue being triggered and attempting to access the reactor after
        the reactor has been destroyed.
        Calling close () for timer queues the reactor does not delete solves
        this potential problem.

Mon Dec 19 12:12:37 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Simplified check

Mon Dec 19 09:17:33 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Added missing files

Sun Dec 18 11:56:00 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Timer_Queue_T.h:
          Fixed CentOS warning

Sun Dec 18 11:41:56 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Removed obsolete file

Sun Dec 18 11:35:18 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_compile_stats.sh:
          Fixed incorrect command

Sun Dec 18 10:29:12 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * ace/Abstract_Timer_Queue.h:

          Added missing abstract method dump().

Fri Dec 16 08:03:07 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * ace/Time_Policy_T.h:
          No dllimport/export in template classes.

Thu Dec 15 19:45:30 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Countdown_Time_T.h:
          No need for an export macro with a C++ template

Thu Dec 15 13:22:07 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * ace/Event_Handler_Handle_Timeout_Upcall.inl:
        * tests/Timer_Queue_Test.cpp:
          Fuzz. Removed tab character

Thu Dec 15 13:12:39 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * ace/Event_Handler_Handle_Timeout_Upcall.inl:
        * ace/Event_Handler_Handle_Timeout_Upcall.cpp:
        * ace/Proactor.cpp:
        * ace/Timer_Hash.h:
        * ace/Timer_Hash_T.h:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Heap.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_List.h:
        * ace/Timer_List_T.h:
        * ace/Timer_List_T.cpp:
        * ace/Timer_Queue_Adapters.cpp:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Queue_T.cpp:
        * ace/Timer_Wheel.h:
        * ace/Timer_Wheel_T.h:
          Fuzz. Removed tab character

Thu Dec 15 12:52:18 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * ace/Abstract_Timer_Queue.h:
        * ace/Abstract_Timer_Queue.cpp:
        * ace/Event_Handler_Handle_Timeout_Upcall.h:
        * ace/Timer_Queue_Iterator.h:
        * ace/Timer_Queue_Iterator.cpp:
          Fuzz. Added Id-tags.

Thu Dec 15 11:00:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        Merged timer_policy branch.

        === start changelog ===

        Thu Dec 15 09:45:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * NEWS:

                  Added description of new TIME_POLICY features.

                * tests/Timer_Queue_Test.cpp:

                  Added explicit test of specific TIME_POLICY feature.

        Mon Dec 12 21:28:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Abstract_Timer_Queue.h:
                * ace/Time_Policy.h:
                * ace/Time_Policy.inl:
                * ace/Time_Policy_T.h:
                * ace/Time_Policy_T.inl:
                * ace/Timer_Queue_T.cpp:
                * ace/Timer_Queue_T.h:
                * tests/Timer_Queue_Test.cpp:

                  Added backwards compatibility support.

        Mon Dec 05 10:26:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Time_Policy.inl

                  Prevent setting delegate to null pointer.

        Sun Dec 04 15:40:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Countdown_Time.cpp:
                * ace/Countdown_Time.inl:

                  Renamed to *_T.*

                * ace/Countdown_Time.h
                * ace/Countdown_Time_T.cpp
                * ace/Countdown_Time_T.h
                * ace/Countdown_Time_T.inl

                  Changed ACE_Countdown_Time to TIME_POLICY based
                  template class ACE_Countdown_Time_T,
                  Created typedef for default template instantiation
                  as ACE_Countdown_Time.

                * ace/Time_Policy.cpp
                * ace/Time_Policy.h
                * ace/Time_Policy.inl
                * ace/Time_Policy_T.cpp
                * ace/Time_Policy_T.h
                * ace/Time_Policy_T.inl

                  Added support for dynamically loadable/shared time
                  policies.

                * ace/ace.mpc

                  Updated for file changes.

        Fri Dec 02 11:48:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:

                  Reverting set_time_policy() change. Interpretation error.

        Thu Dec 01 17:52:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Time_Policy.h:
                * ace/Time_Policy.inl:

                  Added ACE_HR_Time_Policy.

                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:

                  Replaced set_time_policy() by get_time_policy() since setting
                  the policy is not possible but configuring might be.

        Thu Dec 01 14:05:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Proactor.cpp:
                * ace/Timer_Queue_T.cpp:
                * ace/Timer_Queue_T.h:

                  Fixed compile errors.

        Thu Dec 01 13:34:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * ace/Timer_Hash_T.cpp:
                * ace/Timer_Hash_T.h:
                * ace/Timer_Heap_T.h:
                * ace/Timer_Wheel_T.h:

                  Small cleanup to prevent potential compiler warnings.

        Mon Aug 24 02:27:36 UTC 2009  Carlos O'Ryan  <coryan@glamdring>

                * ace/Timer_Queue_T.cpp:
                  Need to release the internal timer queue lock before dispatching
                  calls in expire_single(), otherwise we get nasty deadlocks in
                  the TP_Reactor implementation.

        Thu Jul  2 02:55:09 UTC 2009  Carlos O'Ryan  <coryan@glamdring>

                * ace/Abstract_Timer_Queue.h:
                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:
                * ace/Timer_Queue_T.cpp:
                  I wanted to use gettimeofday() for the pure virtual function and
                  some other name for the inline function used in the timer queue
                  internals.
                  This is the second and final pass to get that change in.  This
                  time, I renamed the internal function to gettimeofday_static(),
                  used the compiler (and grep) to find all uses.  Once that
                  compiled I renamed the virtual function from
                  gettimeofday_abstract() to the gettimeofday() function.
                  I know it is convoluted, but it gets the job done without me
                  having to think too much.

                * ace/Timer_Hash_T.h:
                * ace/Timer_Hash_T.cpp:
                * ace/Select_Reactor_T.cpp:
                * ace/Dev_Poll_Reactor.cpp:
                * ace/Proactor.cpp:
                * ace/Timer_Queue_Adapters.cpp:
                * tests/Timer_Queue_Reference_Counting_Test.cpp:
                * tests/Timer_Queue_Test.cpp:
                * examples/APG/Timers/Timers.cpp:
                * examples/APG/Timers/TimerDispatcher.cpp:
                * examples/C++NPv2/Logging_Event_Handler_Ex.cpp:
                  Fixed users and tests to use the real name for gettimeofday() in
                  ACE_Abstract_Timer_Queue<>

        Wed Jul  1 02:09:44 UTC 2009  Carlos O'Ryan  <coryan@glamdring>

                * ace/ace.mpc:
                * ace/Makefile.am:
                * ace/Event_Handler_Handle_Timeout_Upcall.h:
                * ace/Event_Handler_Handle_Timeout_Upcall.inl:
                * ace/Event_Handler_Handle_Timeout_Upcall.cpp:
                  First I noticed that this class did not depend on the lock type
                  at all, this was fortunate because I wanted to use it in a
                  generic way.  So, change the class from a template class to a
                  regular class.  That required moving the class to its own file too.

                * ace/Timer_List_T.h:
                * ace/Timer_List_T.cpp:
                * ace/Timer_Wheel_T.h:
                * ace/Timer_Wheel_T.cpp:
                * ace/Timer_Hash_T.h:
                * ace/Timer_Hash_T.cpp:
                * ace/Timer_Heap_T.h:
                * ace/Timer_Heap_T.cpp:
                  Fixed several inconsistencies across these classes, for example,
                  most of them had typedef as a shorthand for the base class, but
                  the name of this typedef was not consistent.
                  Likewise, not all of the classes made the TIME_POLICY parameter
                  a default template parameter.

                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:
                * ace/Timer_Queue_T.cpp:
                  Introduced an intermediate class between Abstract_Timer_Queue<>
                  and Timer_Queue_T<>.  This is ugly, but the Proactor "needs" to
                  set a back-pointer from the FUNCTOR to the Proacter instance
                  whenever a timer queue is assigned to the Proactor.
                  This code smells funny.  Either the API is wrong (the Proactor
                  should always create the functor with the backpointer,) or the
                  need for the back pointer is suspicious (I think there is a
                  thread in the Proactor that signals timers, but maybe it should
                  be contained in the Upcall object itself?)
                  The more I look here, the uglier the smell.

                * ace/Select_Reactor_T.cpp:
                * ace/Timer_Queue_Adapters.cpp:
                * tests/Timer_Queue_Reference_Counting_Test.cpp:
                * tests/Timer_Queue_Test.cpp:
                  As a temporary measure, I appended "_abstract" to the
                  gettimeofday() function name in Abstract_Timer_Queue<>.
                  Shortly, I will change the Timer_Queue_T<> class to use
                  gettimeofday_non_virtual() or _static() or something similar.
                  Had to make the change in two steps to find all the uses of the
                  original function.
                  There was probably an easier/cleaner way to do this.

                * tests/Timer_Queue_Test.cpp:
                  Take advantage of the new ACE_Abstract_Timer_Queue<> to make the
                  different types of queues more compatible in ths test, including
                  queues with different time source policies.

                * ace/Proactor.h:
                  As with the Reactive version, I noticed that
                  ACE_Proactor_Handle_Timeout_Upcall did not depend on its
                  template parameter, so I changed the class to a non-template
                  version.

                * ace/Proactor.cpp:
                  Instead of making the Proactor a friend of the Timer_Handler
                  task, expose a safe interface to do what the proactor wants to
                  do.
                  The proactor needed access to timer queue internal details to
                  implement schedule(), but the reactor did not... hmmm... well,
                  turns out the Reactor had nicely refactor that work to the
                  upcall functor.  So I did the same in the Proactor case.


                * ace/Timer_List.h:
                * ace/Timer_Wheel.h:
                * ace/Timer_Hash.h:
                * ace/Timer_Heap.h:
                  Use Event_Handler_Handle_Timeout_Upcall without the template
                  parameter.

                * ace/Abstract_Timer_Queue.h:
                  Remove the setter for getimeofday(), this is implemented by the
                  TIME_POLICY template parameter in Timer_Queue_T<>

                * tests/Reactor_Timer_Test.cpp:
                * tests/Network_Adapters_Test.cpp:
                * tests/Proactor_Timer_Test.cpp:
                  Use a different idiom to set the time policy for this test.

                * examples/Timer_Queue/Thread_Timer_Queue_Test.h:
                * examples/Bounded_Packet_Relay/Thread_Bounded_Packet_Relay.h:
                * examples/APG/Timers/Timers.cpp:
                * examples/APG/Timers/TimerDispatcher.cpp:
                * examples/Reactor/Misc/test_timer_queue.cpp:
                * examples/C++NPv2/Logging_Event_Handler_Ex.cpp:
                  Need an additional #include for ACE_Event_Handler_Handle_Timeout
                  Said class class is no longer a template class, so use it
                  correctly.
                  Changed name of gettimeofday() in timer queue to
                  gettimeofday_abstract()  This is a temporary change to find all
                  the uses, will revert again soon.

                * Merged in changes from bug-3607 branch.

                * ace/ace.mpc:
                * ace/Abstract_Timer_Queue.h:
                * ace/Abstract_Timer_Queue.cpp:
                * ace/Timer_Queue_Iterator.h:
                * ace/Timer_Queue_Iterator.inl:
                * ace/Timer_Queue_Iterator.cpp:
                * ace/Timer_Queuefwd.h:
                * ace/Timer_Queue.h:
                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:
                * ace/Timer_Queue_T.cpp:
                * ace/Timer_List_T.h:
                * ace/Timer_List_T.cpp:
                * ace/Timer_Wheel_T.h:
                * ace/Timer_Wheel_T.cpp:
                * ace/Timer_Hash_T.h:
                * ace/Timer_Hash_T.cpp:
                * ace/Timer_Heap_T.h:
                * ace/Timer_Heap_T.cpp:
                  Heavy refactoring in ACE_Timer_Queue_T class and friends.
                  First, created a template base class (ACE_Abstract_Timer_Queue) that:
                  1) Only depends on the type held by the timer queue, not to lock
                    or upcall strategy.
                  2) It is a pure abstract class, i.e., none of its member
                    functions have any implementation.
                  3) Provides new pure virtual functions to encapsulates some
                    logic that was spread between tests, TP_Reactor and
                    Dev_Poll_Reactor.
                  Then I re-wrote all the standard timer queue objects in terms of
                  this class.  In particular, the reactors use only the abstract
                  interface.
                  I also re-factored the Timer_Queue_Iterator to only depend on
                  the type of objects held by the timer queue.  The rest of the
                  parameters where not used either.
                  Implement functionality that was spread in Dev_Poll_Reactor,
                  TP_Reactor and a test into expire_single.

                * ace/Proactor.h:
                * ace/TP_Reactor.cpp:
                * ace/Dev_Poll_Reactor.cpp:
                  Both classes implemented the logic to dispatch a single timer
                  but release a mutex before the upcall.  This was confusing as
                  well as required exposing too much detail about the Timer_Queue
                  classes.
                  The new mechanism is a single function in (expire_single)
                  ACE_Abstract_Timer_Queue<> (implemented in ACE_Timer_Queue_T<>)
                  which receives a command object to encapsulate the mutex release.

                * ace/Functor.h:
                * ace/Functor.cpp:
                * ace/Functor_T.h:
                * ace/Functor_T.inl:
                  Add helper ACE_Command_* objects.  One is a no-op, for the test
                  below.  The other is a callback that ignores the silly void*
                  argument in the ACE_Command_Base::execute() member function.

                * tests/Timer_Queue_Reference_Counting_Test.cpp:
                  Re-factored test in terms of expire_single()

        Tue Jun 30 01:10:04 UTC 2009  Carlos O'Ryan  <coryan@glamdring>

                * This is a temporary commit into the 3707 branch.  I realized too
                  late that the changes from 3706 will be needed to make this work.

                * ace/ace.mpc:
                * ace/Time_Policy.h:
                * ace/Time_Policy.inl:
                * ace/Time_Policy.cpp:
                  New classes to encapsulate how "now" is computed in the Timer
                  Queues.   This will be an additional template parameter, so the
                  default configuration has zero overhead.

                * ace/Timer_Queuefwd.h:
                * ace/Timer_List.h:
                * ace/Timer_List_T.h:
                * ace/Timer_List_T.cpp:
                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:
                * ace/Timer_Queue_T.cpp:
                * ace/Timer_Wheel.h:
                * ace/Timer_Wheel_T.h:
                * ace/Timer_Wheel_T.cpp:
                * ace/Timer_Hash.h:
                * ace/Timer_Hash_T.h:
                * ace/Timer_Hash_T.cpp:
                * ace/Timer_Heap.h:
                * ace/Timer_Heap_T.h:
                * ace/Timer_Heap_T.cpp:
                  Re-factor timer queue classes to use new TIMER_POLICY
                  parameter.

                * tests/Timer_Queue_Test.cpp:
                  Modify test to use TIMER_POLICY.  But here is the rub, the test
                  does not compile because all timer queue types are "different"
                  to each other.  I need to introduce the base class from the
                  bug-3706 branch to make things work.

        Sun Jun 28 22:15:47 UTC 2009  Carlos O'Ryan  <coryan@glamdring>

                * ace/ace.mpc:
                * ace/Abstract_Timer_Queue.h:
                * ace/Abstract_Timer_Queue.cpp:
                * ace/Timer_Queue_Iterator.h:
                * ace/Timer_Queue_Iterator.inl:
                * ace/Timer_Queue_Iterator.cpp:
                * ace/Timer_Queuefwd.h:
                * ace/Timer_Queue.h:
                * ace/Timer_Queue_T.h:
                * ace/Timer_Queue_T.inl:
                * ace/Timer_Queue_T.cpp:
                * ace/Timer_List_T.h:
                * ace/Timer_List_T.cpp:
                * ace/Timer_Wheel_T.h:
                * ace/Timer_Wheel_T.cpp:
                * ace/Timer_Hash_T.h:
                * ace/Timer_Hash_T.cpp:
                * ace/Timer_Heap_T.h:
                * ace/Timer_Heap_T.cpp:
                  Heavy refactoring in ACE_Timer_Queue_T class and friends.
                  First, created a template base class (ACE_Abstract_Timer_Queue) that:
                  1) Only depends on the type held by the timer queue, not to lock
                    or upcall strategy.
                  2) It is a pure abstract class, i.e., none of its member
                    functions have any implementation.
                  3) Provides new pure virtual functions to encapsulates some
                    logic that was spread between tests, TP_Reactor and
                    Dev_Poll_Reactor.
                  Then I re-wrote all the standard timer queue objects in terms of
                  this class.  In particular, the reactors use only the abstract
                  interface.
                  I also re-factored the Timer_Queue_Iterator to only depend on
                  the type of objects held by the timer queue.  The rest of the
                  parameters where not used either.
                  Implement functionality that was spread in Dev_Poll_Reactor,
                  TP_Reactor and a test into expire_single.

                * ace/Proactor.h:
                * ace/TP_Reactor.cpp:
                * ace/Dev_Poll_Reactor.cpp:
                  Both classes implemented the logic to dispatch a single timer
                  but release a mutex before the upcall.  This was confusing as
                  well as required exposing too much detail about the Timer_Queue
                  classes.
                  The new mechanism is a single function in (expire_single)
                  ACE_Abstract_Timer_Queue<> (implemented in ACE_Timer_Queue_T<>)
                  which receives a command object to encapsulate the mutex release.

                * ace/Functor.h:
                * ace/Functor.cpp:
                * ace/Functor_T.h:
                * ace/Functor_T.inl:
                  Add helper ACE_Command_* objects.  One is a no-op, for the test
                  below.  The other is a callback that ignores the silly void*
                  argument in the ACE_Command_Base::execute() member function.

                * tests/Timer_Queue_Reference_Counting_Test.cpp:
                  Re-factored test in terms of expire_single()

        === end changelog ===

Wed Dec 14 16:09:22 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/auto_run_tests.pl:
          Fixed DANCE_ROOT

Mon Dec 12 19:04:55 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vc11.features:
        * bin/MakeProjectCreator/config/vc11nmake.mpb:
          New files for vc11

Mon Dec 12 07:33:25 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        === start changelog ===

        Fri Dec  9 10:41:02 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * docs/svn/config:
                  Subversion should ignore *_svnt_T.*.

        === end changelog ===

Mon Dec  5 22:23:25 UTC 2011  Steve Huston  <shuston@riverace.com>

        * ace/DLL.h:
        * ace/DLL_Manager.h: Corrected and expanded the descriptions of how
          DLL/library names are handled, decorated, and located.

Mon Dec  5 20:16:51 UTC 2011  Steve Huston  <shuston@riverace.com>

        * ace/Atomic_Op.{h inl}:
        * ace/Atomic_Op_T.{h inl}:
        * ace/Atomic_Op_GCC_T.{h inl}:
          Added new method TYPE exchange (TYPE newval) which exchanges the
          ACE_Atomic_Op's value with the specified new value. Thanks to John
          Lilley for contributing this addition.

        * tests/Atomic_Op_Test.cpp: Added test for exchange().

        * NEWS: Added description of the new exchange() method.

Mon Dec  5 12:27:54 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/TTY_IO.h:
          Doxygen fix

        * ace/config-linux.h:
          Layout changes

        * tests/Cached_Accept_Conn_Test.h:
        * tests/Cached_Accept_Conn_Test.cpp:
        * tests/MEM_Stream_Test.cpp:
        * tests/QtReactor_Test.cpp:
          Layout changes and removed some ACE_UNUSED_ARG usage

Mon Dec  5 11:25:31 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/cleanbuilds.sh:
        * bin/mail_test_stats.sh:
          Extended our daily test stats with another email, the failing tests
          for today excluding the not fixed ones

Mon Dec  5 08:35:54 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Release has vc9/vc10

Mon Dec  5 08:22:11 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/diff-builds-and-group-fixed-tests-only.sh:
        * docs/Download.html:
        * etc/index.html:
          Made 6.0.6 publicly available

        * docs/bczar/bczar.html:
          Updated for next release and added wget step to get subversion config
          file to make sure we checkout using commit timestamps

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
